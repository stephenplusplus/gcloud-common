{"bigquery/dataset":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"bigquery/dataset","html":"<p>bigquery/dataset</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:bigquery/table}","types":["module:bigquery/table"],"typesDescription":"module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:bigquery/table}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var Table = require('./table.js');","ctx":{"type":"declaration","name":"Table","value":"require('./table.js')","string":"Table"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"param","string":"{module:bigquery} bigQuery - BigQuery instance.","name":"bigQuery","description":"<ul>\n<li>BigQuery instance.</li>\n</ul>\n","types":["module:bigquery"],"typesDescription":"module:<a href=\"module%3Abigquery.html\">bigquery</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} id - The ID of the Dataset.","name":"id","description":"<ul>\n<li>The ID of the Dataset.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":38,"codeStart":43},{"tags":[{"type":"alias","string":"module:bigquery/dataset","html":"<p>module:bigquery/dataset</p>"},{"type":"constructor","string":"","html":""}],"description":{"full":"<p>Interact with your BigQuery dataset. Create a Dataset instance with<br />{module:bigquery#createDataset} or {module:bigquery#dataset}.</p>","summary":"<p>Interact with your BigQuery dataset. Create a Dataset instance with<br />{module:bigquery#createDataset} or {module:bigquery#dataset}.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":43,"codeStart":50,"code":"function Dataset(bigQuery, id) {\n  this.bigQuery = bigQuery;\n  this.id = id;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Dataset","string":"Dataset()"}},{"tags":[{"type":"resource","string":"[Tables: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tables/insert} ","html":"<p>[Tables: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/tables/insert}</a> </p>"},{"type":"param","string":"{object} options - Table id or configuration object.","name":"options","description":"<ul>\n<li>Table id or configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.id - The id of the table.","name":"options.id","description":"<ul>\n<li>The id of the table.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|object} options.schema - A comma-separated list of name:type\n    pairs. Valid types are \"string\", \"integer\", \"float\", \"boolean\", and\n    \"timestamp\". If the type is omitted, it is assumed to be \"string\".\n    Example: \"name:string, age:integer\". Schemas can also be specified as a\n    JSON array of fields, which allows for nested and repeated fields. See\n    a [Table resource](http://goo.gl/sl8Dmg) for more detailed information.","name":"options.schema","description":"<ul>\n<li>A comma-separated list of name:type     pairs. Valid types are &quot;string&quot;, &quot;integer&quot;, &quot;float&quot;, &quot;boolean&quot;, and<br />  &quot;timestamp&quot;. If the type is omitted, it is assumed to be &quot;string&quot;.<br />  Example: &quot;name:string, age:integer&quot;. Schemas can also be specified as a<br />  JSON array of fields, which allows for nested and repeated fields. See<br />  a <a href=\"http://goo.gl/sl8Dmg\">Table resource</a> for more detailed information.</li>\n</ul>\n","types":["string","object"],"typesDescription":"<code>string</code>|<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/table} callback.table - The newly created table.","name":"callback.table","description":"<ul>\n<li>The newly created table.</li>\n</ul>\n","types":["module:bigquery/table"],"typesDescription":"module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var tableConfig = {\n  id: 'institution_data',\n\n  // From the data.gov CSV dataset (http://goo.gl/kSE7z6):\n  schema: 'UNITID,INSTNM,ADDR,CITY,STABBR,ZIP,FIPS,OBEREG,CHFNM,...'\n};\n\nvar bigquery = gcloud.bigquery({\n  projectId: 'grape-spaceship-123'\n});\nvar dataset = bigquery.dataset();\n\ndataset.createTable(tableConfig, function(err, table, apiResponse) {});","html":"<p>var tableConfig = {<br />  id: &#39;institution_data&#39;,</p><p>  // From the data.gov CSV dataset (<a href=\"http://goo.gl/kSE7z6\">http://goo.gl/kSE7z6</a>):<br />  schema: &#39;UNITID,INSTNM,ADDR,CITY,STABBR,ZIP,FIPS,OBEREG,CHFNM,...&#39;<br />};</p><p>var bigquery = gcloud.bigquery({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});<br />var dataset = bigquery.dataset();</p><p>dataset.createTable(tableConfig, function(err, table, apiResponse) {});</p>"}],"description":{"full":"<p>Create a table given a tableId or configuration object.</p>","summary":"<p>Create a table given a tableId or configuration object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":56,"codeStart":89,"code":"Dataset.prototype.createTable = function(options, callback) {\n  var that = this;\n\n  extend(true, options, {\n    tableReference: {\n      datasetId: this.id,\n      projectId: this.bigQuery.projectId,\n      tableId: options.id\n    }\n  });\n\n  if (is.string(options.schema)) {\n    options.schema = Table.createSchemaFromString_(options.schema);\n  }\n\n  delete options.id;\n\n  this.makeReq_('POST', '/tables', null, options, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var table = that.table(resp.tableReference.tableId);\n    table.metadata = resp;\n\n    callback(null, table, resp);\n  });\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"createTable","string":"Dataset.prototype.createTable()"}},{"tags":[{"type":"resource","string":"[Datasets: delete API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/datasets/delete} ","html":"<p>[Datasets: delete API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/datasets/delete}\">https://cloud.google.com/bigquery/docs/reference/v2/datasets/delete}</a> </p>"},{"type":"param","string":"{object=} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.force - Force delete dataset and all tables.\n    Default: false.","name":"options.force","description":"<ul>\n<li>Force delete dataset and all tables.     Default: false.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Delete the dataset, only if it does not have any tables.\n//-\ndataset.delete(function(err, apiResponse) {});\n\n//-\n// Delete the dataset and any tables it contains.\n//-\ndataset.delete({ force: true }, function(err, apiResponse) {});","html":"<p>//-<br />// Delete the dataset, only if it does not have any tables.<br />//-<br />dataset.delete(function(err, apiResponse) {});</p><p>//-<br />// Delete the dataset and any tables it contains.<br />//-<br />dataset.delete({ force: true }, function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete the dataset.</p>","summary":"<p>Delete the dataset.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":119,"codeStart":142,"code":"Dataset.prototype.delete = function(options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  var query = {\n    deleteContents: !!options.force\n  };\n\n  this.makeReq_('DELETE', '', query, null, callback);\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"delete","string":"Dataset.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Datasets: get API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/datasets/get} ","html":"<p>[Datasets: get API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/datasets/get}\">https://cloud.google.com/bigquery/docs/reference/v2/datasets/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The Dataset metadata","name":"callback.metadata","description":"<ul>\n<li>The Dataset metadata</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"dataset.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>dataset.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the metadata for the Dataset.</p>","summary":"<p>Get the metadata for the Dataset.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":155,"codeStart":168,"code":"Dataset.prototype.getMetadata = function(callback) {\n  var that = this;\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"getMetadata","string":"Dataset.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Tables: list API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tables/list} ","html":"<p>[Tables: list API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables/list}\">https://cloud.google.com/bigquery/docs/reference/v2/tables/list}</a> </p>"},{"type":"param","string":"{object=} query - Configuration object.","name":"query","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of results to return.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - Token returned from a previous call, to\n    request the next page of results.","name":"query.pageToken","description":"<ul>\n<li>Token returned from a previous call, to     request the next page of results.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/table[]} callback.tables - The list of tables from\n    your Dataset.","name":"callback.tables","description":"<ul>\n<li>The list of tables from     your Dataset.</li>\n</ul>\n","types":["Array.<module:bigquery/table>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"dataset.getTables(function(err, tables, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there are more results to fetch.\n});\n\n//-\n// Get the tables as a readable object stream.\n// `table` is a Table object\n//-\ndataset.getTables()\n  .on('error', console.error)\n  .on('data', function(table) {})\n  .on('end', function() {\n    // All tables have been retrieved\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ndataset.getTables()\n  .on('data', function(table) {\n    this.end();\n  });","html":"<p>dataset.getTables(function(err, tables, nextQuery, apiResponse) {<br />  // If <code>nextQuery</code> is non-null, there are more results to fetch.<br />});</p><p>//-<br />// Get the tables as a readable object stream.<br />// <code>table</code> is a Table object<br />//-<br />dataset.getTables()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(table) {})<br />  .on(&#39;end&#39;, function() {<br />    // All tables have been retrieved<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />dataset.getTables()<br />  .on(&#39;data&#39;, function(table) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of tables.</p>","summary":"<p>Get a list of tables.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":182,"codeStart":224,"code":"Dataset.prototype.getTables = function(query, callback) {\n  var that = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  query = query || {};\n\n  this.makeReq_('GET', '/tables', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var tables = (resp.tables || []).map(function(tableObject) {\n      var table = that.table(tableObject.id);\n      table.metadata = tableObject;\n      return table;\n    });\n\n    callback(null, tables, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"getTables","string":"Dataset.prototype.getTables()"}},{"tags":[],"description":{"full":"<p>Run a query scoped to your dataset.</p><p>See {module:bigquery#query} for full documentation of this method.</p>","summary":"<p>Run a query scoped to your dataset.</p>","body":"<p>See {module:bigquery#query} for full documentation of this method.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":258,"codeStart":263,"code":"Dataset.prototype.query = function(options, callback) {\n  if (is.string(options)) {\n    options = {\n      query: options\n    };\n  }\n\n  options = extend(true, {}, options, {\n    defaultDataset: {\n      datasetId: this.id\n    }\n  });\n\n  return this.bigQuery.query(options, callback);\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"query","string":"Dataset.prototype.query()"}},{"tags":[{"type":"resource","string":"[Datasets: patch API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/datasets/patch} ","html":"<p>[Datasets: patch API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/datasets/patch}\">https://cloud.google.com/bigquery/docs/reference/v2/datasets/patch}</a> </p>"},{"type":"param","string":"{object} metadata - Metadata to save on the Dataset.","name":"metadata","description":"<ul>\n<li>Metadata to save on the Dataset.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The metadata of the Dataset object.","name":"callback.metadata","description":"<ul>\n<li>The metadata of the Dataset object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var metadata = {\n  description: 'Information for every institution in the 2013 IPEDS universe'\n};\n\ndataset.setMetadata(metadata, function(err, metadata, apiResponse) {});","html":"<p>var metadata = {<br />  description: &#39;Information for every institution in the 2013 IPEDS universe&#39;<br />};</p><p>dataset.setMetadata(metadata, function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Sets the metadata of the Dataset object.</p>","summary":"<p>Sets the metadata of the Dataset object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":279,"codeStart":297,"code":"Dataset.prototype.setMetadata = function(metadata, callback) {\n  var that = this;\n\n  this.makeReq_('PATCH', '', null, metadata, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"setMetadata","string":"Dataset.prototype.setMetadata()"}},{"tags":[{"type":"param","string":"{string} id - The ID of the table.","name":"id","description":"<ul>\n<li>The ID of the table.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:bigquery/table}\n","types":["module:bigquery/table"],"typesDescription":"module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:bigquery/table}</p>"},{"type":"example","string":"var institutions = dataset.table('institution_data');","html":"<p>var institutions = dataset.table(&#39;institution_data&#39;);</p>"}],"description":{"full":"<p>Return a new instance of reference to an existing Table object.</p>","summary":"<p>Return a new instance of reference to an existing Table object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":312,"codeStart":321,"code":"Dataset.prototype.table = function(id) {\n  return new Table(this, id);\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"table","string":"Dataset.prototype.table()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Pass through this request to BigQuery&#39;s request handler, first prepending the<br />path with the dataset.</p>","summary":"<p>Pass through this request to BigQuery&#39;s request handler, first prepending the<br />path with the dataset.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":325,"codeStart":337,"code":"Dataset.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/datasets/' + this.id + path;\n  this.bigQuery.makeReq_(method, path, query, body, callback);\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"makeReq_","string":"Dataset.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":342,"codeStart":347,"code":"streamRouter.extend(Dataset, 'getTables');\n\nmodule.exports = Dataset;","ctx":false}],"bigquery":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"bigquery","html":"<p>bigquery</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:bigquery/dataset}","types":["module:bigquery/dataset"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fdataset.html\">bigquery/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:bigquery/dataset}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var Dataset = require('./dataset.js');","ctx":{"type":"declaration","name":"Dataset","value":"require('./dataset.js')","string":"Dataset"}},{"tags":[{"type":"type","string":"{module:bigquery/job}","types":["module:bigquery/job"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:bigquery/job}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var Job = require('./job.js');","ctx":{"type":"declaration","name":"Job","value":"require('./job.js')","string":"Job"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":42,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:bigquery/table}","types":["module:bigquery/table"],"typesDescription":"module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:bigquery/table}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":44,"codeStart":48,"code":"var Table = require('./table.js');","ctx":{"type":"declaration","name":"Table","value":"require('./table.js')","string":"Table"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":50,"codeStart":54,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{string} Base URL for the BigQuery API.","html":"<p>{string} Base URL for the BigQuery API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":56,"codeStart":60,"code":"var BIGQUERY_BASE_URL = 'https://www.googleapis.com/bigquery/v2/projects/';","ctx":{"type":"declaration","name":"BIGQUERY_BASE_URL","value":"'https://www.googleapis.com/bigquery/v2/projects/'","string":"BIGQUERY_BASE_URL"}},{"tags":[{"type":"const","string":"{array}","html":"<p>{array}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Required scopes for Google Cloud BigQuery API.</p>","summary":"<p>Required scopes for Google Cloud BigQuery API.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":62,"codeStart":68,"code":"var SCOPES = ['https://www.googleapis.com/auth/bigquery'];","ctx":{"type":"declaration","name":"SCOPES","value":"['https://www.googleapis.com/auth/bigquery']","string":"SCOPES"}},{"tags":[{"type":"alias","string":"module:bigquery","html":"<p>module:bigquery</p>"},{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'my-project'\n});\n\nvar bigquery = gcloud.bigquery();\n\n//-\n// In the following examples from this page and the other modules (Dataset,\n// Table, etc.), we are going to be using a dataset from\n// <a href=\"http://goo.gl/f2SXcb\">data.gov</a> of higher education\n// institutions.\n//\n// We will create a table with the correct schema, import the public CSV file\n// into that table, and query it for data.\n//-","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;my-project&#39;<br />});</p><p>var bigquery = gcloud.bigquery();</p><p>//-<br />// In the following examples from this page and the other modules (Dataset,<br />// Table, etc.), we are going to be using a dataset from<br />// <a href=\"http://goo.gl/f2SXcb\">data.gov</a> of higher education<br />// institutions.<br />//<br />// We will create a table with the correct schema, import the public CSV file<br />// into that table, and query it for data.<br />//-</p>"}],"description":{"full":"<p>The examples below will demonstrate the different usage patterns your app may<br />need to support to retrieve a BigQuery object.</p>","summary":"<p>The examples below will demonstrate the different usage patterns your app may<br />need to support to retrieve a BigQuery object.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":70,"codeStart":97,"code":"function BigQuery(options) {\n  if (!(this instanceof BigQuery)) {\n    return new BigQuery(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory({\n    credentials: options.credentials,\n    keyFile: options.keyFilename,\n    scopes: SCOPES,\n    email: options.email\n  });\n\n  this.projectId = options.projectId;\n}","ctx":{"type":"constructor","name":"BigQuery","string":"BigQuery()"}},{"tags":[{"type":"resource","string":"[Datasets: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/datasets/insert} ","html":"<p>[Datasets: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/datasets/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/datasets/insert}</a> </p>"},{"type":"param","string":"{string} id - ID of the dataset to create.","name":"id","description":"<ul>\n<li>ID of the dataset to create.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback  - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/dataset} callback.dataset - The newly created dataset","name":"callback.dataset","description":"<ul>\n<li>The newly created dataset</li>\n</ul>\n","types":["module:bigquery/dataset"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fdataset.html\">bigquery/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"bigquery.createDataset('my-dataset', function(err, dataset, apiResponse) {});","html":"<p>bigquery.createDataset(&#39;my-dataset&#39;, function(err, dataset, apiResponse) {});</p>"}],"description":{"full":"<p>Create a dataset.</p>","summary":"<p>Create a dataset.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":118,"codeStart":132,"code":"BigQuery.prototype.createDataset = function(id, callback) {\n  var that = this;\n\n  var body = {\n    datasetReference: {\n      datasetId: id\n    }\n  };\n\n  this.makeReq_('POST', '/datasets', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var dataset = that.dataset(id);\n    dataset.metadata = resp;\n\n    callback(null, dataset, resp);\n  });\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"createDataset","string":"BigQuery.prototype.createDataset()"}},{"tags":[{"type":"param","string":"{string} id - ID of the dataset.","name":"id","description":"<ul>\n<li>ID of the dataset.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:bigquery/dataset}\n","types":["module:bigquery/dataset"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fdataset.html\">bigquery/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:bigquery/dataset}</p>"},{"type":"example","string":"var dataset = bigquery.dataset('higher_education');","html":"<p>var dataset = bigquery.dataset(&#39;higher_education&#39;);</p>"}],"description":{"full":"<p>Create a reference to an existing dataset.</p>","summary":"<p>Create a reference to an existing dataset.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":154,"codeStart":163,"code":"BigQuery.prototype.dataset = function(id) {\n  return new Dataset(this, id);\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"dataset","string":"BigQuery.prototype.dataset()"}},{"tags":[{"type":"resource","string":"[Datasets: list API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/datasets/list} ","html":"<p>[Datasets: list API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/datasets/list}\">https://cloud.google.com/bigquery/docs/reference/v2/datasets/list}</a> </p>"},{"type":"param","string":"{object=} query - Configuration object.","name":"query","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} query.all - List all datasets, including hidden ones.","name":"query.all","description":"<ul>\n<li>List all datasets, including hidden ones.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} query.autoPaginate - Have pagination handled automatically.\n    Default: true.","name":"query.autoPaginate","description":"<ul>\n<li>Have pagination handled automatically.     Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of results to return.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - Token returned from a previous call, to\n    request the next page of results.","name":"query.pageToken","description":"<ul>\n<li>Token returned from a previous call, to     request the next page of results.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/dataset[]} callback.datasets - The list of datasets\n    in your project.","name":"callback.datasets","description":"<ul>\n<li>The list of datasets     in your project.</li>\n</ul>\n","types":["Array.<module:bigquery/dataset>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Abigquery%2Fdataset.html\">bigquery/dataset</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"bigquery.getDatasets(function(err, datasets) {\n  if (!err) {\n    // datasets is an array of Dataset objects.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, datasets, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    bigquery.getDatasets(nextQuery, callback);\n  }\n};\n\nbigquery.getDatasets({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the datasets from your project as a readable object stream.\n//-\nbigquery.getDatasets()\n  .on('error', console.error)\n  .on('data', function(dataset) {\n    // dataset is a Dataset object.\n  })\n  .on('end', function() {\n    // All datasets retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nbigquery.getDatasets()\n  .on('data', function(dataset) {\n    this.end();\n  });","html":"<p>bigquery.getDatasets(function(err, datasets) {<br />  if (!err) {<br />    // datasets is an array of Dataset objects.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, datasets, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    bigquery.getDatasets(nextQuery, callback);<br />  }<br />};</p><p>bigquery.getDatasets({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the datasets from your project as a readable object stream.<br />//-<br />bigquery.getDatasets()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(dataset) {<br />    // dataset is a Dataset object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All datasets retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />bigquery.getDatasets()<br />  .on(&#39;data&#39;, function(dataset) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>List all or some of the datasets in your project.</p>","summary":"<p>List all or some of the datasets in your project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":167,"codeStart":230,"code":"BigQuery.prototype.getDatasets = function(query, callback) {\n  var that = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  query = query || {};\n\n  this.makeReq_('GET', '/datasets', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var datasets = (resp.datasets || []).map(function(dataset) {\n      var ds = that.dataset(dataset.datasetReference.datasetId);\n      ds.metadata = dataset;\n      return ds;\n    });\n\n    callback(null, datasets, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"getDatasets","string":"BigQuery.prototype.getDatasets()"}},{"tags":[{"type":"resource","string":"[Jobs: list API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/list} ","html":"<p>[Jobs: list API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/list}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/list}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} options.allUsers - Display jobs owned by all users in the\n    project.","name":"options.allUsers","description":"<ul>\n<li>Display jobs owned by all users in the     project.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} options.maxResults - Maximum number of results to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.pageToken - Token returned from a previous call, to\n    request the next page of results.","name":"options.pageToken","description":"<ul>\n<li>Token returned from a previous call, to     request the next page of results.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.projection - Restrict information returned to a set\n    of selected fields. Acceptable values are \"full\", for all job data, and\n    \"minimal\", to not include the job configuration.","name":"options.projection","description":"<ul>\n<li>Restrict information returned to a set     of selected fields. Acceptable values are &quot;full&quot;, for all job data, and<br />  &quot;minimal&quot;, to not include the job configuration.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.stateFilter - Filter for job state. Acceptable\n    values are \"done\", \"pending\", and \"running\".","name":"options.stateFilter","description":"<ul>\n<li>Filter for job state. Acceptable     values are &quot;done&quot;, &quot;pending&quot;, and &quot;running&quot;.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/job[]} callback.jobs - The list of jobs in your\n    project.","name":"callback.jobs","description":"<ul>\n<li>The list of jobs in your     project.</li>\n</ul>\n","types":["Array.<module:bigquery/job>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"bigquery.getJobs(function(err, jobs) {\n  if (!err) {\n    // jobs is an array of Job objects.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, jobs, nextQuery, apiRespose) {\n  if (nextQuery) {\n    // More results exist.\n    bigquery.getJobs(nextQuery, callback);\n  }\n};\n\nbigquery.getJobs({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the jobs from your project as a readable object stream.\n//-\nbigquery.getJobs()\n  .on('error', console.error)\n  .on('data', function(job) {\n    // job is a Job object.\n  })\n  .on('end', function() {\n    // All jobs retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nbigquery.getJobs()\n  .on('data', function(job) {\n    this.end();\n  });","html":"<p>bigquery.getJobs(function(err, jobs) {<br />  if (!err) {<br />    // jobs is an array of Job objects.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, jobs, nextQuery, apiRespose) {<br />  if (nextQuery) {<br />    // More results exist.<br />    bigquery.getJobs(nextQuery, callback);<br />  }<br />};</p><p>bigquery.getJobs({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the jobs from your project as a readable object stream.<br />//-<br />bigquery.getJobs()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(job) {<br />    // job is a Job object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All jobs retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />bigquery.getJobs()<br />  .on(&#39;data&#39;, function(job) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get all of the jobs from your project.</p>","summary":"<p>Get all of the jobs from your project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":264,"codeStart":333,"code":"BigQuery.prototype.getJobs = function(options, callback) {\n  var that = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/jobs', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var jobs = (resp.jobs || []).map(function(jobObject) {\n      var job = that.job(jobObject.id);\n      job.metadata = jobObject;\n      return job;\n    });\n\n    callback(null, jobs, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"getJobs","string":"BigQuery.prototype.getJobs()"}},{"tags":[{"type":"param","string":"{string} id - ID of the job.","name":"id","description":"<ul>\n<li>ID of the job.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:bigquery/job}\n","types":["module:bigquery/job"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:bigquery/job}</p>"},{"type":"example","string":"var myExistingJob = bigquery.job('job-id');","html":"<p>var myExistingJob = bigquery.job(&#39;job-id&#39;);</p>"}],"description":{"full":"<p>Create a reference to an existing Job.</p>","summary":"<p>Create a reference to an existing Job.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":367,"codeStart":376,"code":"BigQuery.prototype.job = function(id) {\n  return new Job(this, id);\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"job","string":"BigQuery.prototype.job()"}},{"tags":[{"type":"resource","string":"[Jobs: query API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/query} ","html":"<p>[Jobs: query API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/query}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/query}</a> </p>"},{"type":"param","string":"{string|object} options - A string SQL query or configuration object.","name":"options","description":"<ul>\n<li>A string SQL query or configuration object.</li>\n</ul>\n","types":["string","object"],"typesDescription":"<code>string</code>|<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of results to read.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of results to read.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.query - A query string, following the BigQuery query\n    syntax, of the query to execute.","name":"options.query","description":"<ul>\n<li>A query string, following the BigQuery query     syntax, of the query to execute.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.timeoutMs - How long to wait for the query to\n    complete, in milliseconds, before returning. Default is to return\n    immediately. If the timeout passes before the job completes, the request\n    will fail with a `TIMEOUT` error.","name":"options.timeoutMs","description":"<ul>\n<li>How long to wait for the query to     complete, in milliseconds, before returning. Default is to return<br />  immediately. If the timeout passes before the job completes, the request<br />  will fail with a <code>TIMEOUT</code> error.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.rows - The list of results from your query.","name":"callback.rows","description":"<ul>\n<li>The list of results from your query.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var query = 'SELECT url FROM [publicdata:samples.github_nested] LIMIT 100';\n\nbigquery.query(query, function(err, rows) {\n  if (!err) {\n    // Handle results here.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, rows, nextQuery, apiResponse) {\n  if (nextQuery) {\n    bigquery.query(nextQuery, callback);\n  }\n};\n\nbigquery.query({\n  query: query,\n  autoPaginate: false\n}, callback);\n\n//-\n// You can also use the `query` method as a readable object stream by\n// omitting the callback.\n//-\nbigquery.query(query)\n  .on('error', console.error)\n  .on('data', function(row) {\n    // row is a result from your query.\n  })\n  .on('end', function() {\n    // All rows retrieved.\n  });","html":"<p>var query = &#39;SELECT url FROM [publicdata:samples.github_nested] LIMIT 100&#39;;</p><p>bigquery.query(query, function(err, rows) {<br />  if (!err) {<br />    // Handle results here.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, rows, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    bigquery.query(nextQuery, callback);<br />  }<br />};</p><p>bigquery.query({<br />  query: query,<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// You can also use the <code>query</code> method as a readable object stream by<br />// omitting the callback.<br />//-<br />bigquery.query(query)<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(row) {<br />    // row is a result from your query.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All rows retrieved.<br />  });</p>"}],"description":{"full":"<p>Run a query scoped to your project.</p><p>If you provide a callback, this method returns the results from your query to<br />it. When querying large sets of data, it is possible your results won&#39;t be<br />returned all at once. In those cases, you will receive a third argument to<br />your callback that can be passed back to this method to return more results.</p><p>See the examples below for such a workflow.</p><p>This method also runs as a readable stream if you do not provide a callback.<br />In cases where more results exist, this will automatically run the subsequent<br />queries for you, pushing each row to the stream.</p>","summary":"<p>Run a query scoped to your project.</p>","body":"<p>If you provide a callback, this method returns the results from your query to<br />it. When querying large sets of data, it is possible your results won&#39;t be<br />returned all at once. In those cases, you will receive a third argument to<br />your callback that can be passed back to this method to return more results.</p><p>See the examples below for such a workflow.</p><p>This method also runs as a readable stream if you do not provide a callback.<br />In cases where more results exist, this will automatically run the subsequent<br />queries for you, pushing each row to the stream.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":380,"codeStart":450,"code":"BigQuery.prototype.query = function(options, callback) {\n  var that = this;\n\n  if (is.string(options)) {\n    options = {\n      query: options\n    };\n  }\n\n  options = options || {};\n\n  var job = options.job;\n\n  var requestQuery = extend({}, options);\n  delete requestQuery.job;\n\n  if (job) {\n    // Get results of the query.\n    var path = '/queries/' + job.id;\n    that.makeReq_('GET', path, requestQuery, null, responseHandler);\n  } else {\n    // Create a job.\n    that.makeReq_('POST', '/queries', null, options, responseHandler);\n  }\n\n  function responseHandler(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var rows = [];\n    if (resp.schema && resp.rows) {\n      rows = Table.mergeSchemaWithRows_(resp.schema, resp.rows);\n    }\n\n    var nextQuery = null;\n    if (resp.jobComplete === false) {\n      // Query is still running.\n      nextQuery = extend({}, options);\n    } else if (resp.pageToken) {\n      // More results exist.\n      nextQuery = extend({}, options, {\n        pageToken: resp.pageToken\n      });\n    }\n    if (nextQuery && !nextQuery.job && resp.jobReference.jobId) {\n      // Create a prepared Job to continue the query.\n      nextQuery.job = that.job(resp.jobReference.jobId);\n    }\n\n    callback(null, rows, nextQuery, resp);\n  }\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"query","string":"BigQuery.prototype.query()"}},{"tags":[{"type":"resource","string":"[Jobs: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert} ","html":"<p>[Jobs: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}</a> </p>"},{"type":"param","string":"{object|string} options - The configuration object. This must be in\n    the format of the [`configuration.query`](http://goo.gl/wRpHvR) property\n    of a Jobs resource. If a string is provided, this is used as the query\n    string, and all other options are defaulted.","name":"options","description":"<ul>\n<li>The configuration object. This must be in     the format of the <a href=\"http://goo.gl/wRpHvR\"><code>configuration.query</code></a> property<br />  of a Jobs resource. If a string is provided, this is used as the query<br />  string, and all other options are defaulted.</li>\n</ul>\n","types":["object","string"],"typesDescription":"<code>object</code>|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/table=} options.destination - The table to save the\n    query's results to. If omitted, a new table will be created.","name":"options.destination","description":"<ul>\n<li>The table to save the     query&#39;s results to. If omitted, a new table will be created.</li>\n</ul>\n","types":["module:bigquery/table"],"typesDescription":"module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.query - A query string, following the BigQuery query\n    syntax, of the query to execute.","name":"options.query","description":"<ul>\n<li>A query string, following the BigQuery query     syntax, of the query to execute.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/job} callback.job - The newly created job for your\n       query.","name":"callback.job","description":"<ul>\n<li>The newly created job for your        query.</li>\n</ul>\n","types":["module:bigquery/job"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"throws","string":"{Error} If a query is not specified.","types":["Error"],"description":"<p>If a query is not specified.</p>"},{"type":"throws","string":"{Error} If a Table is not provided as a destination.\n","types":["Error"],"description":"<p>If a Table is not provided as a destination. </p>"},{"type":"example","string":"var query = 'SELECT url FROM [publicdata:samples.github_nested] LIMIT 100';\n\n//-\n// You may pass only a query string, having a new table created to store the\n// results of the query.\n//-\nbigquery.startQuery(query, function(err, job) {});\n\n//-\n// You can also control the destination table by providing a\n// {module:bigquery/table} object.\n//-\nbigquery.startQuery({\n  destination: bigquery.dataset('higher_education').table('institutions'),\n  query: query\n}, function(err, job) {});\n\n//-\n// After you have run `startQuery`, your query will execute in a job. Your\n// callback is executed with a {module:bigquery/job} object so that you may\n// check for the results.\n//-\nbigquery.startQuery(query, function(err, job) {\n  if (!err) {\n    job.getQueryResults(function(err, rows, apiResponse) {});\n  }\n});","html":"<p>var query = &#39;SELECT url FROM [publicdata:samples.github_nested] LIMIT 100&#39;;</p><p>//-<br />// You may pass only a query string, having a new table created to store the<br />// results of the query.<br />//-<br />bigquery.startQuery(query, function(err, job) {});</p><p>//-<br />// You can also control the destination table by providing a<br />// {module:bigquery/table} object.<br />//-<br />bigquery.startQuery({<br />  destination: bigquery.dataset(&#39;higher_education&#39;).table(&#39;institutions&#39;),<br />  query: query<br />}, function(err, job) {});</p><p>//-<br />// After you have run <code>startQuery</code>, your query will execute in a job. Your<br />// callback is executed with a {module:bigquery/job} object so that you may<br />// check for the results.<br />//-<br />bigquery.startQuery(query, function(err, job) {<br />  if (!err) {<br />    job.getQueryResults(function(err, rows, apiResponse) {});<br />  }<br />});</p>"}],"description":{"full":"<p>Run a query as a job. No results are immediately returned. Instead, your<br />callback will be executed with a {module:bigquery/job} object that you must<br />ping for the results. See the Job documentation for explanations of how to<br />check on the status of the job.</p>","summary":"<p>Run a query as a job. No results are immediately returned. Instead, your<br />callback will be executed with a {module:bigquery/job} object that you must<br />ping for the results. See the Job documentation for explanations of how to<br />check on the status of the job.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":505,"codeStart":559,"code":"BigQuery.prototype.startQuery = function(options, callback) {\n  var that = this;\n\n  if (is.string(options)) {\n    options = {\n      query: options\n    };\n  }\n\n  options = options || {};\n\n  if (!options.query) {\n    throw new Error('A SQL query string is required.');\n  }\n\n  var defaults = {};\n\n  if (options.destination) {\n    if (!(options.destination instanceof Table)) {\n      throw new Error('Destination must be a Table object.');\n    }\n    defaults.destinationTable = {\n      datasetId: options.destination.dataset.id,\n      projectId: options.destination.dataset.bigQuery.projectId,\n      tableId: options.destination.id\n    };\n    delete options.destination;\n  }\n\n  var body = {\n    configuration: {\n      query: extend(true, defaults, options)\n    }\n  };\n\n  this.makeReq_('POST', '/jobs', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var job = that.job(resp.jobReference.jobId);\n    job.metadata = resp;\n\n    callback(null, job, resp);\n  });\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"startQuery","string":"BigQuery.prototype.startQuery()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":607,"codeStart":619,"code":"BigQuery.prototype.makeReq_ = function(method, path, query, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: query,\n    uri: BIGQUERY_BASE_URL + this.projectId + path\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"BigQuery","cons":"BigQuery","name":"makeReq_","string":"BigQuery.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":633,"codeStart":638,"code":"streamRouter.extend(BigQuery, ['getDatasets', 'getJobs', 'query']);\n\nmodule.exports = BigQuery;","ctx":false}],"bigquery/job":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"bigquery/job","html":"<p>bigquery/job</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar is = require('is');","ctx":false},{"tags":[{"type":"param","string":"{module:bigquery} bigQuery - BigQuery instance.","name":"bigQuery","description":"<ul>\n<li>BigQuery instance.</li>\n</ul>\n","types":["module:bigquery"],"typesDescription":"module:<a href=\"module%3Abigquery.html\">bigquery</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} id - The ID of the job.\n","name":"id","description":"<ul>\n<li>The ID of the job. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var bigquery = gcloud.bigquery({ projectId: 'grape-spaceship-123' });\nvar Job = require('gcloud/lib/bigquery/job');\nvar job = new Job(bigquery, 'job-id');","html":"<p>var bigquery = gcloud.bigquery({ projectId: &#39;grape-spaceship-123&#39; });<br />var Job = require(&#39;gcloud/lib/bigquery/job&#39;);<br />var job = new Job(bigquery, &#39;job-id&#39;);</p>"}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":25,"codeStart":35},{"tags":[{"type":"alias","string":"module:bigquery/job","html":"<p>module:bigquery/job</p>"},{"type":"constructor","string":"","html":""}],"description":{"full":"<p>Job objects are returned from various places in the BigQuery API:</p><ul>\n<li>{module:bigquery#getJobs}</li>\n<li>{module:bigquery#job}</li>\n<li>{module:bigquery#query}</li>\n<li>{module:bigquery#startJob}</li>\n<li>{module:bigquery/table#copy}</li>\n<li>{module:bigquery/table#createWriteStream}</li>\n<li>{module:bigquery/table#export}</li>\n<li>{module:bigquery/table#import}</li>\n</ul>\n<p>They can be used to check the status of a running job or fetching the results<br />of a previously-executed one.</p>","summary":"<p>Job objects are returned from various places in the BigQuery API:</p>","body":"<ul>\n<li>{module:bigquery#getJobs}</li>\n<li>{module:bigquery#job}</li>\n<li>{module:bigquery#query}</li>\n<li>{module:bigquery#startJob}</li>\n<li>{module:bigquery/table#copy}</li>\n<li>{module:bigquery/table#createWriteStream}</li>\n<li>{module:bigquery/table#export}</li>\n<li>{module:bigquery/table#import}</li>\n</ul>\n<p>They can be used to check the status of a running job or fetching the results<br />of a previously-executed one.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":35,"codeStart":53,"code":"function Job(bigQuery, id) {\n  this.bigQuery = bigQuery;\n  this.id = id;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Job","string":"Job()"}},{"tags":[{"type":"resource","string":"[Jobs: get API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/get} ","html":"<p>[Jobs: get API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/get}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The metadata of the job.","name":"callback.metadata","description":"<ul>\n<li>The metadata of the job.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var job = bigquery.job('id');\njob.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>var job = bigquery.job(&#39;id&#39;);<br />job.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the metadata of the job. This will mostly be useful for checking the<br />status of a previously-run job.</p>","summary":"<p>Get the metadata of the job. This will mostly be useful for checking the<br />status of a previously-run job.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":59,"codeStart":74,"code":"Job.prototype.getMetadata = function(callback) {\n  var that = this;\n\n  var path = '/jobs/' + this.id;\n\n  this.bigQuery.makeReq_('GET', path, null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Job","cons":"Job","name":"getMetadata","string":"Job.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Jobs: getQueryResults API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/getQueryResults} ","html":"<p>[Jobs: getQueryResults API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/getQueryResults}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/getQueryResults}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of results to read.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of results to read.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - Page token, returned by a previous call,\n    to request the next page of results. Note: This is automatically added to\n    the `nextQuery` argument of your callback.","name":"options.pageToken","description":"<ul>\n<li>Page token, returned by a previous call,     to request the next page of results. Note: This is automatically added to<br />  the <code>nextQuery</code> argument of your callback.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.startIndex - Zero-based index of the starting row.","name":"options.startIndex","description":"<ul>\n<li>Zero-based index of the starting row.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.timeoutMs - How long to wait for the query to\n    complete, in milliseconds, before returning. Default is to return\n    immediately. If the timeout passes before the job completes, the request\n    will fail with a `TIMEOUT` error.","name":"options.timeoutMs","description":"<ul>\n<li>How long to wait for the query to     complete, in milliseconds, before returning. Default is to return<br />  immediately. If the timeout passes before the job completes, the request<br />  will fail with a <code>TIMEOUT</code> error.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function. If you intend to\n    continuously run this query until all results are in as part of a stream,\n    do not pass a callback.","name":"callback","description":"<ul>\n<li>The callback function. If you intend to     continuously run this query until all results are in as part of a stream,<br />  do not pass a callback.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.rows - The results of a job.","name":"callback.rows","description":"<ul>\n<li>The results of a job.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Get all of the results of a query.\n//-\njob.getQueryResults(function(err, rows) {\n  if (!err) {\n    // rows is an array of results.\n  }\n});\n\n//-\n// Customize the results you want to fetch.\n//-\njob.getQueryResults({\n  maxResults: 100\n}, function(err, rows) {});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, rows, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    job.getQueryResults(nextQuery, callback);\n  }\n};\n\njob.getQueryResults({\n  autoPaginate: false\n}, callback);\n\n//-\n// Consume the results from the query as a readable object stream.\n//-\nvar through2 = require('through2');\nvar fs = require('fs');\n\njob.getQueryResults()\n  .pipe(through2.obj(function (row, enc, next) {\n    this.push(JSON.stringify(row) + '\\n');\n  }))\n  .pipe(fs.createWriteStream('./test/testdata/testfile.json'));","html":"<p>//-<br />// Get all of the results of a query.<br />//-<br />job.getQueryResults(function(err, rows) {<br />  if (!err) {<br />    // rows is an array of results.<br />  }<br />});</p><p>//-<br />// Customize the results you want to fetch.<br />//-<br />job.getQueryResults({<br />  maxResults: 100<br />}, function(err, rows) {});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, rows, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    job.getQueryResults(nextQuery, callback);<br />  }<br />};</p><p>job.getQueryResults({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Consume the results from the query as a readable object stream.<br />//-<br />var through2 = require(&#39;through2&#39;);<br />var fs = require(&#39;fs&#39;);</p><p>job.getQueryResults()<br />  .pipe(through2.obj(function (row, enc, next) {<br />    this.push(JSON.stringify(row) + &#39;\\n&#39;);<br />  }))<br />  .pipe(fs.createWriteStream(&#39;./test/testdata/testfile.json&#39;));</p>"}],"description":{"full":"<p>Get the results of a job.</p>","summary":"<p>Get the results of a job.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":91,"codeStart":161,"code":"Job.prototype.getQueryResults = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.job = this;\n\n  return this.bigQuery.query(options, callback);\n};\n\nmodule.exports = Job;","ctx":{"type":"method","constructor":"Job","cons":"Job","name":"getQueryResults","string":"Job.prototype.getQueryResults()"}}],"bigquery/table":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"bigquery/table","html":"<p>bigquery/table</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar crypto = require('crypto');\nvar duplexify = require('duplexify');\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar fs = require('fs');\nvar is = require('is');\nvar path = require('path');\nvar streamEvents = require('stream-events');","ctx":false},{"tags":[{"type":"type","string":"{module:storage/file}","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:storage/file}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":33,"codeStart":37,"code":"var File = require('../storage/file');","ctx":{"type":"declaration","name":"File","value":"require('../storage/file')","string":"File"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":39,"codeStart":43,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":45,"codeStart":49,"code":"var util = require('../common/util');","ctx":{"type":"declaration","name":"util","value":"require('../common/util')","string":"util"}},{"tags":[{"type":"param","string":"{module:bigquery/dataset} dataset - Dataset instance.","name":"dataset","description":"<ul>\n<li>Dataset instance.</li>\n</ul>\n","types":["module:bigquery/dataset"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fdataset.html\">bigquery/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} id - The ID of the table.\n","name":"id","description":"<ul>\n<li>The ID of the table. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var bigquery = gcloud.bigquery({ projectId: 'grape-spaceship-123' });\nvar Dataset = require('gcloud/lib/bigquery/dataset');\nvar dataset = new Dataset(bigquery, 'dataset-id');\nvar Table = require('gcloud/lib/bigquery/table');\nvar table = new Table(dataset, 'table-id');","html":"<p>var bigquery = gcloud.bigquery({ projectId: &#39;grape-spaceship-123&#39; });<br />var Dataset = require(&#39;gcloud/lib/bigquery/dataset&#39;);<br />var dataset = new Dataset(bigquery, &#39;dataset-id&#39;);<br />var Table = require(&#39;gcloud/lib/bigquery/table&#39;);<br />var table = new Table(dataset, &#39;table-id&#39;);</p>"}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":51,"codeStart":63},{"tags":[{"type":"alias","string":"module:bigquery/table","html":"<p>module:bigquery/table</p>"},{"type":"constructor","string":"","html":""},{"type":"example","string":"var table = dataset.table('my-table');","html":"<p>var table = dataset.table(&#39;my-table&#39;);</p>"}],"description":{"full":"<p>Table objects are returned by methods such as<br />{module:bigquery/dataset#table}, {module:bigquery/dataset#createTable}, and<br />{module:bigquery/dataset#getTables}.</p>","summary":"<p>Table objects are returned by methods such as<br />{module:bigquery/dataset#table}, {module:bigquery/dataset#createTable}, and<br />{module:bigquery/dataset#getTables}.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":63,"codeStart":74,"code":"function Table(dataset, id) {\n  this.bigQuery = dataset.bigQuery;\n  this.dataset = dataset;\n  this.id = id;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Table","string":"Table()"}},{"tags":[{"type":"static","string":"","html":""},{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} str - Comma-separated schema string.","name":"str","description":"<ul>\n<li>Comma-separated schema string.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object} Table schema in the format the API expects.","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>Table schema in the format the API expects.</p>"}],"description":{"full":"<p>Convert a comma-separated name:type string to a table schema object.</p>","summary":"<p>Convert a comma-separated name:type string to a table schema object.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":81,"codeStart":90,"code":"Table.createSchemaFromString_ = function(str) {\n  return str.split(/\\s*,\\s*/).reduce(function(acc, pair) {\n    acc.fields.push({\n      name: pair.split(':')[0],\n      type: pair.split(':')[1] || 'string'\n    });\n\n    return acc;\n  }, {\n    fields: []\n  });\n};","ctx":{"type":"method","receiver":"Table","name":"createSchemaFromString_","string":"Table.createSchemaFromString_()"}},{"tags":[{"type":"static","string":"","html":""},{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{object} schema","name":"schema","description":"","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{object} schema</p>"},{"type":"param","string":"{array} rows","name":"rows","description":"","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{array} rows</p>"},{"type":"return","string":"{array} Fields using their matching names from the table's schema.","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>Fields using their matching names from the table&#39;s schema.</p>"}],"description":{"full":"<p>Merge a rowset returned from the API with a table schema.</p>","summary":"<p>Merge a rowset returned from the API with a table schema.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":103,"codeStart":113,"code":"Table.mergeSchemaWithRows_ = function(schema, rows) {\n  return rows.map(mergeSchema).map(flattenRows);\n\n  function mergeSchema(row) {\n    return row.f.map(function(field, index) {\n      var fieldObject = {};\n      fieldObject[schema.fields[index].name] = field.v;\n      return fieldObject;\n    });\n  }\n\n  function flattenRows(rows) {\n    return rows.reduce(function(acc, row) {\n      var key = Object.keys(row)[0];\n      acc[key] = row[key];\n      return acc;\n    }, {});\n  }\n};","ctx":{"type":"method","receiver":"Table","name":"mergeSchemaWithRows_","string":"Table.mergeSchemaWithRows_()"}},{"tags":[{"type":"resource","string":"[Jobs: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert} ","html":"<p>[Jobs: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}</a> </p>"},{"type":"param","string":"{module:bigquery/table} destination - The destination table.","name":"destination","description":"<ul>\n<li>The destination table.</li>\n</ul>\n","types":["module:bigquery/table"],"typesDescription":"module:<a href=\"module%3Abigquery%2Ftable.html\">bigquery/table</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} metadata - Metadata to set with the copy operation. The\n    metadata object should be in the format of the\n    [`configuration.copy`](http://goo.gl/dKWIyS) property of a Jobs resource.","name":"metadata","description":"<ul>\n<li>Metadata to set with the copy operation. The     metadata object should be in the format of the<br />  <a href=\"http://goo.gl/dKWIyS\"><code>configuration.copy</code></a> property of a Jobs resource.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/job} callback.job - The job used to copy your table.","name":"callback.job","description":"<ul>\n<li>The job used to copy your table.</li>\n</ul>\n","types":["module:bigquery/job"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"throws","string":"{Error} If a destination other than a Table object is provided.\n","types":["Error"],"description":"<p>If a destination other than a Table object is provided. </p>"},{"type":"example","string":"var yourTable = dataset.table('your-table');\ntable.copy(yourTable, function(err, job, apiResponse) {});\n\n//-\n// See the [`configuration.copy`](http://goo.gl/dKWIyS) object for all\n// available options.\n//-\nvar metadata = {\n  createDisposition: 'CREATE_NEVER',\n  writeDisposition: 'WRITE_TRUNCATE'\n};\n\ntable.copy(yourTable, metadata, function(err, job, apiResponse) {});","html":"<p>var yourTable = dataset.table(&#39;your-table&#39;);<br />table.copy(yourTable, function(err, job, apiResponse) {});</p><p>//-<br />// See the <a href=\"http://goo.gl/dKWIyS\"><code>configuration.copy</code></a> object for all<br />// available options.<br />//-<br />var metadata = {<br />  createDisposition: &#39;CREATE_NEVER&#39;,<br />  writeDisposition: &#39;WRITE_TRUNCATE&#39;<br />};</p><p>table.copy(yourTable, metadata, function(err, job, apiResponse) {});</p>"}],"description":{"full":"<p>Copy data from one table to another, optionally creating that table.</p>","summary":"<p>Copy data from one table to another, optionally creating that table.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":133,"codeStart":164,"code":"Table.prototype.copy = function(destination, metadata, callback) {\n  var that = this;\n\n  if (!(destination instanceof Table)) {\n    throw new Error('Destination must be a Table object.');\n  }\n\n  if (is.fn(metadata)) {\n    callback = metadata;\n    metadata = {};\n  }\n\n  var body = {\n    configuration: {\n      copy: extend(true, metadata || {}, {\n        destinationTable: {\n          datasetId: destination.dataset.id,\n          projectId: destination.bigQuery.projectId,\n          tableId: destination.id\n        },\n        sourceTable: {\n          datasetId: this.dataset.id,\n          projectId: this.bigQuery.projectId,\n          tableId: this.id\n        }\n      })\n    }\n  };\n\n  this.bigQuery.makeReq_('POST', '/jobs', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var job = that.bigQuery.job(resp.jobReference.jobId);\n    job.metadata = resp;\n\n    callback(null, job, resp);\n  });\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"copy","string":"Table.prototype.copy()"}},{"tags":[{"type":"resource","string":"[Tabledata: list API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list} ","html":"<p>[Tabledata: list API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list}\">https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list}</a> </p>"},{"type":"return","string":"{ReadStream}\n","types":["ReadStream"],"typesDescription":"<a href=\"ReadStream.html\">ReadStream</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{ReadStream}</p>"},{"type":"example","string":"var through2 = require('through2');\nvar fs = require('fs');\n\ntable.createReadStream()\n  .pipe(through2.obj(function(row, enc, next) {\n    this.push(JSON.stringify(row) + '\\n');\n  }))\n  .pipe(fs.createWriteStream('./test/testdata/testfile.json'));","html":"<p>var through2 = require(&#39;through2&#39;);<br />var fs = require(&#39;fs&#39;);</p><p>table.createReadStream()<br />  .pipe(through2.obj(function(row, enc, next) {<br />    this.push(JSON.stringify(row) + &#39;\\n&#39;);<br />  }))<br />  .pipe(fs.createWriteStream(&#39;./test/testdata/testfile.json&#39;));</p>"}],"description":{"full":"<p>Create a readable stream of the rows of data in your table. This method is<br />simply a wrapper around {module:bigquery/table#getRows}.</p>","summary":"<p>Create a readable stream of the rows of data in your table. This method is<br />simply a wrapper around {module:bigquery/table#getRows}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":206,"codeStart":224,"code":"Table.prototype.createReadStream = function() {\n  return this.getRows();\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"createReadStream","string":"Table.prototype.createReadStream()"}},{"tags":[{"type":"resource","string":"[Jobs: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert} ","html":"<p>[Jobs: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}</a> </p>"},{"type":"param","string":"{string|object=} metadata - Metadata to set with the load operation.\n    The metadata object should be in the format of the\n    [`configuration.load`](http://goo.gl/BVcXk4) property of a Jobs resource.\n    If a string is given, it will be used as the filetype.","name":"metadata","description":"<ul>\n<li>Metadata to set with the load operation.     The metadata object should be in the format of the<br />  <a href=\"http://goo.gl/BVcXk4\"><code>configuration.load</code></a> property of a Jobs resource.<br />  If a string is given, it will be used as the filetype.</li>\n</ul>\n","types":["string","object"],"typesDescription":"<code>string</code>|<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{WriteStream}\n","types":["WriteStream"],"typesDescription":"<a href=\"WriteStream.html\">WriteStream</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{WriteStream}</p>"},{"type":"throws","string":"{Error} If source format isn't recognized.\n","types":["Error"],"description":"<p>If source format isn&#39;t recognized. </p>"},{"type":"example","string":"//-\n// Load data from a CSV file.\n//-\nvar request = require('request');\n\nvar csvUrl = 'http://goo.gl/kSE7z6';\n\nvar metadata = {\n  allowJaggedRows: true,\n  skipLeadingRows: 1\n};\n\nrequest.get(csvUrl)\n  .pipe(table.createWriteStream(metadata))\n  .on('complete', function(job) {\n    // job is a Job object, which you can use to check the status of the load\n    // operation.\n    job.getMetadata(function(err, metadata) {\n      // metadata.status\n    });\n  });\n\n//-\n// Load data from a JSON file.\n//-\nvar fs = require('fs');\n\nfs.createReadStream('./test/testdata/testfile.json')\n  .pipe(table.createWriteStream('json'))\n  .on('complete', function(job) {});","html":"<p>//-<br />// Load data from a CSV file.<br />//-<br />var request = require(&#39;request&#39;);</p><p>var csvUrl = &#39;<a href=\"http://goo.gl/kSE7z6\">http://goo.gl/kSE7z6</a>&#39;;</p><p>var metadata = {<br />  allowJaggedRows: true,<br />  skipLeadingRows: 1<br />};</p><p>request.get(csvUrl)<br />  .pipe(table.createWriteStream(metadata))<br />  .on(&#39;complete&#39;, function(job) {<br />    // job is a Job object, which you can use to check the status of the load<br />    // operation.<br />    job.getMetadata(function(err, metadata) {<br />      // metadata.status<br />    });<br />  });</p><p>//-<br />// Load data from a JSON file.<br />//-<br />var fs = require(&#39;fs&#39;);</p><p>fs.createReadStream(&#39;./test/testdata/testfile.json&#39;)<br />  .pipe(table.createWriteStream(&#39;json&#39;))<br />  .on(&#39;complete&#39;, function(job) {});</p>"}],"description":{"full":"<p>Load data into your table from a readable stream of JSON or CSV-formatted<br />data.</p>","summary":"<p>Load data into your table from a readable stream of JSON or CSV-formatted<br />data.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":228,"codeStart":274,"code":"Table.prototype.createWriteStream = function(metadata) {\n  var that = this;\n\n  metadata = metadata || {};\n\n  var fileTypeMap = {\n    csv: 'CSV',\n    json: 'NEWLINE_DELIMITED_JSON'\n  };\n  var fileTypes = Object.keys(fileTypeMap).map(function(key) {\n    return fileTypeMap[key];\n  });\n\n  if (is.string(metadata)) {\n    metadata = {\n      sourceFormat: fileTypeMap[metadata.toLowerCase()]\n    };\n  }\n\n  if (is.string(metadata.schema)) {\n    metadata.schema = Table.createSchemaFromString_(metadata.schema);\n  }\n\n  extend(true, metadata, {\n    destinationTable: {\n      projectId: that.bigQuery.projectId,\n      datasetId: that.dataset.id,\n      tableId: that.id\n    }\n  });\n\n  if (metadata.hasOwnProperty('sourceFormat') &&\n      fileTypes.indexOf(metadata.sourceFormat) < 0) {\n    throw new Error('Source format not recognized: ' + metadata.sourceFormat);\n  }\n\n  var dup = streamEvents(duplexify());\n\n  dup.once('writing', function() {\n    util.makeWritableStream(dup, {\n      makeAuthorizedRequest: that.bigQuery.makeAuthorizedRequest_,\n      metadata: {\n        configuration: {\n          load: metadata\n        }\n      },\n      request: {\n        uri: format('{base}/{projectId}/jobs', {\n          base: 'https://www.googleapis.com/upload/bigquery/v2/projects',\n          projectId: that.bigQuery.projectId\n        })\n      }\n    }, function(data) {\n      var job = that.bigQuery.job(data.jobReference.jobId);\n      job.metadata = data;\n\n      dup.emit('complete', job);\n    });\n  });\n\n  return dup;\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"createWriteStream","string":"Table.prototype.createWriteStream()"}},{"tags":[{"type":"resource","string":"[Tables: delete API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tables/delete} ","html":"<p>[Tables: delete API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables/delete}\">https://cloud.google.com/bigquery/docs/reference/v2/tables/delete}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"table.delete(function(err, apiResponse) {});","html":"<p>table.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete a table and all its data.</p>","summary":"<p>Delete a table and all its data.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":337,"codeStart":349,"code":"Table.prototype.delete = function(callback) {\n  this.makeReq_('DELETE', '', null, null, callback);\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"delete","string":"Table.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Jobs: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert} ","html":"<p>[Jobs: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}</a> </p>"},{"type":"param","string":"{module:storage/file} destination - Where the file should be exported\n    to.","name":"destination","description":"<ul>\n<li>Where the file should be exported     to.</li>\n</ul>\n","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.format - The format to export the data in. Allowed\n    options are \"CSV\", \"JSON\", or \"AVRO\". Default: \"CSV\".","name":"options.format","description":"<ul>\n<li>The format to export the data in. Allowed     options are &quot;CSV&quot;, &quot;JSON&quot;, or &quot;AVRO&quot;. Default: &quot;CSV&quot;.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.gzip - Specify if you would like the file compressed\n    with GZIP. Default: false.","name":"options.gzip","description":"<ul>\n<li>Specify if you would like the file compressed     with GZIP. Default: false.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/job} callback.job - The job used to export the table.","name":"callback.job","description":"<ul>\n<li>The job used to export the table.</li>\n</ul>\n","types":["module:bigquery/job"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"throws","string":"{Error} If destination isn't a File object.","types":["Error"],"description":"<p>If destination isn&#39;t a File object.</p>"},{"type":"throws","string":"{Error} If destination format isn't recongized.\n","types":["Error"],"description":"<p>If destination format isn&#39;t recongized. </p>"},{"type":"example","string":"var gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123'\n});\nvar exportedFile = gcs.bucket('institutions').file('2014.csv');\n\n//-\n// To use the default options, just pass a {module:storage/file} object.\n//\n// Note: The exported format type will be inferred by the file's extension.\n// If you wish to override this, or provide an array of destination files,\n// you must provide an `options` object.\n//-\ntable.export(exportedFile, function(err, job, apiResponse) {});\n\n//-\n// If you need more customization, pass an `options` object.\n//-\nvar options = {\n  format: 'json',\n  gzip: true\n};\n\ntable.export(exportedFile, options, function(err, job, apiResponse) {});\n\n//-\n// You can also specify multiple destination files.\n//-\ntable.export([\n  gcs.bucket('institutions').file('2014.json'),\n  gcs.bucket('institutions-copy').file('2014.json')\n], options, function(err, job, apiResponse) {});","html":"<p>var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});<br />var exportedFile = gcs.bucket(&#39;institutions&#39;).file(&#39;2014.csv&#39;);</p><p>//-<br />// To use the default options, just pass a {module:storage/file} object.<br />//<br />// Note: The exported format type will be inferred by the file&#39;s extension.<br />// If you wish to override this, or provide an array of destination files,<br />// you must provide an <code>options</code> object.<br />//-<br />table.export(exportedFile, function(err, job, apiResponse) {});</p><p>//-<br />// If you need more customization, pass an <code>options</code> object.<br />//-<br />var options = {<br />  format: &#39;json&#39;,<br />  gzip: true<br />};</p><p>table.export(exportedFile, options, function(err, job, apiResponse) {});</p><p>//-<br />// You can also specify multiple destination files.<br />//-<br />table.export([<br />  gcs.bucket(&#39;institutions&#39;).file(&#39;2014.json&#39;),<br />  gcs.bucket(&#39;institutions-copy&#39;).file(&#39;2014.json&#39;)<br />], options, function(err, job, apiResponse) {});</p>"}],"description":{"full":"<p>Export table to Google Cloud Storage.</p>","summary":"<p>Export table to Google Cloud Storage.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":353,"codeStart":406,"code":"Table.prototype.export = function(destination, options, callback) {\n  var that = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  var formats = {\n    avro: 'AVRO',\n    csv: 'CSV',\n    json: 'NEWLINE_DELIMITED_JSON'\n  };\n\n  extend(true, options, {\n    destinationUris: arrify(destination).map(function(dest) {\n      if (!(dest instanceof File)) {\n        throw new Error('Destination must be a File object.');\n      }\n\n      // If no explicit format was provided, attempt to find a match from the\n      // file's extension. If no match, don't set, and default upstream to CSV.\n      var format = path.extname(dest.name).substr(1).toLowerCase();\n      if (!options.destinationFormat && !options.format && formats[format]) {\n        options.destinationFormat = formats[format];\n      }\n\n      return 'gs://' + dest.bucket.name + '/' + dest.name;\n    })\n  });\n\n  if (options.format) {\n    options.format = options.format.toLowerCase();\n\n    if (formats[options.format]) {\n      options.destinationFormat = formats[options.format];\n      delete options.format;\n    } else {\n      throw new Error('Destination format not recognized: ' + options.format);\n    }\n  }\n\n  if (options.gzip) {\n    options.compression = 'GZIP';\n    delete options.gzip;\n  }\n\n  var body = {\n    configuration: {\n      extract: extend(true, options, {\n        sourceTable: {\n          datasetId: this.dataset.id,\n          projectId: this.bigQuery.projectId,\n          tableId: this.id\n        }\n      })\n    }\n  };\n\n  this.bigQuery.makeReq_('POST', '/jobs', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var job = that.bigQuery.job(resp.jobReference.jobId);\n    job.metadata = resp;\n\n    callback(null, job, resp);\n  });\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"export","string":"Table.prototype.export()"}},{"tags":[{"type":"resource","string":"[Tables: get API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tables/get} ","html":"<p>[Tables: get API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables/get}\">https://cloud.google.com/bigquery/docs/reference/v2/tables/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The metadata of the Table.","name":"callback.metadata","description":"<ul>\n<li>The metadata of the Table.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"table.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>table.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Return the metadata associated with the Table.</p>","summary":"<p>Return the metadata associated with the Table.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":478,"codeStart":491,"code":"Table.prototype.getMetadata = function(callback) {\n  var that = this;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"getMetadata","string":"Table.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Tabledata: list API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list} ","html":"<p>[Tabledata: list API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list}\">https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list}</a> </p>"},{"type":"param","string":"{object=} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of results to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.rows - The table data from specified set of rows.","name":"callback.rows","description":"<ul>\n<li>The table data from specified set of rows.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"table.getRows(function(err, rows) {\n  if (!err) {\n    // Handle results here.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, rows, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    table.getRows(nextQuery, callback);\n  }\n};\n\ntable.getRows({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the rows as a readable object stream.\n//-\ntable.getRows(options)\n  .on('error', console.error)\n  .on('data', function(row) {})\n  .on('end', function() {\n    // All rows have been retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ntable.getRows()\n  .on('data', function(row) {\n    this.end();\n  });","html":"<p>table.getRows(function(err, rows) {<br />  if (!err) {<br />    // Handle results here.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, rows, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    table.getRows(nextQuery, callback);<br />  }<br />};</p><p>table.getRows({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the rows as a readable object stream.<br />//-<br />table.getRows(options)<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(row) {})<br />  .on(&#39;end&#39;, function() {<br />    // All rows have been retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />table.getRows()<br />  .on(&#39;data&#39;, function(row) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Retrieves table data from a specified set of rows. The rows are returned to<br />your callback as an array of objects matching your table&#39;s schema.</p>","summary":"<p>Retrieves table data from a specified set of rows. The rows are returned to<br />your callback as an array of objects matching your table&#39;s schema.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":506,"codeStart":564,"code":"Table.prototype.getRows = function(options, callback) {\n  var that = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '/data', options, null, function(err, resp) {\n    if (err) {\n      onComplete(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.pageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.pageToken\n      });\n    }\n\n    if (resp.rows && resp.rows.length > 0 && !that.metadata.schema) {\n      // We don't know the schema for this table yet. Do a quick stat.\n      that.getMetadata(function(err) {\n        if (err) {\n          onComplete(err);\n          return;\n        }\n\n        onComplete(null, resp.rows, nextQuery, resp);\n      });\n\n      return;\n    }\n\n    onComplete(null, resp.rows, nextQuery, resp);\n  });\n\n  function onComplete(err, rows, nextQuery, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    rows = Table.mergeSchemaWithRows_(that.metadata.schema, rows || []);\n\n    callback(null, rows, nextQuery, resp);\n  }\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"getRows","string":"Table.prototype.getRows()"}},{"tags":[{"type":"resource","string":"[Jobs: insert API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert} ","html":"<p>[Jobs: insert API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}\">https://cloud.google.com/bigquery/docs/reference/v2/jobs/insert}</a> </p>"},{"type":"param","string":"{string|module:storage/file} source - The source file to import.","name":"source","description":"<ul>\n<li>The source file to import.</li>\n</ul>\n","types":["string","module:storage/file"],"typesDescription":"<code>string</code>|module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} metadata - Metadata to set with the load operation. The\n    metadata object should be in the format of the\n    [`configuration.load`](http://goo.gl/BVcXk4) property of a Jobs resource.","name":"metadata","description":"<ul>\n<li>Metadata to set with the load operation. The     metadata object should be in the format of the<br />  <a href=\"http://goo.gl/BVcXk4\"><code>configuration.load</code></a> property of a Jobs resource.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:bigquery/job} callback.job - The job used to import your data.","name":"callback.job","description":"<ul>\n<li>The job used to import your data.</li>\n</ul>\n","types":["module:bigquery/job"],"typesDescription":"module:<a href=\"module%3Abigquery%2Fjob.html\">bigquery/job</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"throws","string":"{Error} If the source isn't a string file name or a File instance.\n","types":["Error"],"description":"<p>If the source isn&#39;t a string file name or a File instance. </p>"},{"type":"example","string":"//-\n// Load data from a local file.\n//-\ntable.import('./institutions.csv', function(err, job, apiResponse) {});\n\n//-\n// You may also pass in metadata in the format of a Jobs resource. See\n// (http://goo.gl/BVcXk4) for a full list of supported values.\n//-\nvar metadata = {\n  encoding: 'ISO-8859-1',\n  sourceFormat: 'NEWLINE_DELIMITED_JSON'\n};\n\ntable.import('./my-data.csv', metadata, function(err, job, apiResponse) {});\n\n//-\n// Load data from a file in your Cloud Storage bucket.\n//-\nvar data = gcs.bucket('institutions').file('data.csv');\ntable.import(data, function(err, job, apiResponse) {});\n\n//-\n// Load data from multiple files in your Cloud Storage bucket(s).\n//-\ntable.import([\n  gcs.bucket('institutions').file('2011.csv'),\n  gcs.bucket('institutions').file('2012.csv')\n], function(err, job, apiResponse) {});","html":"<p>//-<br />// Load data from a local file.<br />//-<br />table.import(&#39;./institutions.csv&#39;, function(err, job, apiResponse) {});</p><p>//-<br />// You may also pass in metadata in the format of a Jobs resource. See<br />// (<a href=\"http://goo.gl/BVcXk4\">http://goo.gl/BVcXk4</a>) for a full list of supported values.<br />//-<br />var metadata = {<br />  encoding: &#39;ISO-8859-1&#39;,<br />  sourceFormat: &#39;NEWLINE_DELIMITED_JSON&#39;<br />};</p><p>table.import(&#39;./my-data.csv&#39;, metadata, function(err, job, apiResponse) {});</p><p>//-<br />// Load data from a file in your Cloud Storage bucket.<br />//-<br />var data = gcs.bucket(&#39;institutions&#39;).file(&#39;data.csv&#39;);<br />table.import(data, function(err, job, apiResponse) {});</p><p>//-<br />// Load data from multiple files in your Cloud Storage bucket(s).<br />//-<br />table.import([<br />  gcs.bucket(&#39;institutions&#39;).file(&#39;2011.csv&#39;),<br />  gcs.bucket(&#39;institutions&#39;).file(&#39;2012.csv&#39;)<br />], function(err, job, apiResponse) {});</p>"}],"description":{"full":"<p>Load data from a local file or Storage file ({module:storage/file}).</p><p>By loading data this way, you create a load job that will run your data load<br />asynchronously. If you would like instantaneous access to your data, insert<br />it using {module:bigquery/table#insert}.</p><p>Note: Only JSON and CSV source files are supported. The file type will be<br />inferred by the given file&#39;s extension. If you wish to override this, you<br />must provide a <code>metadata</code> object.</p>","summary":"<p>Load data from a local file or Storage file ({module:storage/file}).</p>","body":"<p>By loading data this way, you create a load job that will run your data load<br />asynchronously. If you would like instantaneous access to your data, insert<br />it using {module:bigquery/table#insert}.</p><p>Note: Only JSON and CSV source files are supported. The file type will be<br />inferred by the given file&#39;s extension. If you wish to override this, you<br />must provide a <code>metadata</code> object.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":617,"codeStart":672,"code":"Table.prototype.import = function(source, metadata, callback) {\n  var that = this;\n\n  if (is.fn(metadata)) {\n    callback = metadata;\n    metadata = {};\n  }\n\n  callback = callback || util.noop;\n  metadata = metadata || {};\n\n  var formats = {\n    csv: 'CSV',\n    json: 'NEWLINE_DELIMITED_JSON'\n  };\n\n  if (is.string(source)) {\n    // A path to a file was given. If a sourceFormat wasn't specified, try to\n    // find a match from the file's extension.\n    var format = formats[path.extname(source).substr(1).toLowerCase()];\n    if (!metadata.sourceFormat && format) {\n      metadata.sourceFormat = format;\n    }\n\n    // Read the file into a new write stream.\n    return fs.createReadStream(source)\n      .pipe(this.createWriteStream(metadata))\n      .on('error', function(err, resp) {\n        callback(err, null, resp);\n      })\n      .on('complete', function(resp) {\n        // TODO(ryanseys): Does this have to create a job object?\n        callback(null, resp, resp);\n      });\n  }\n\n  var body = {\n    configuration: {\n      load: {\n        destinationTable: {\n          projectId: this.bigQuery.projectId,\n          datasetId: this.dataset.id,\n          tableId: this.id\n        }\n      }\n    }\n  };\n\n  extend(true, body.configuration.load, metadata, {\n    sourceUris: arrify(source).map(function(src) {\n      if (!(src instanceof File)) {\n        throw new Error('Source must be a File object.');\n      }\n\n      // If no explicit format was provided, attempt to find a match from\n      // the file's extension. If no match, don't set, and default upstream\n      // to CSV.\n      var format = formats[path.extname(src.name).substr(1).toLowerCase()];\n      if (!metadata.sourceFormat && format) {\n        body.configuration.load.sourceFormat = format;\n      }\n\n      return 'gs://' + src.bucket.name + '/' + src.name;\n    })\n  });\n\n  this.bigQuery.makeReq_('POST', '/jobs', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var job = that.bigQuery.job(resp.jobReference.jobId);\n    job.metadata = resp;\n\n    callback(null, job, resp);\n  });\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"import","string":"Table.prototype.import()"}},{"tags":[{"type":"resource","string":"[Tabledata: insertAll API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tabledata/insertAll} ","html":"<p>[Tabledata: insertAll API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tabledata/insertAll}\">https://cloud.google.com/bigquery/docs/reference/v2/tabledata/insertAll}</a> </p>"},{"type":"param","string":"{object|object[]} rows - The rows to insert into the table.","name":"rows","description":"<ul>\n<li>The rows to insert into the table.</li>\n</ul>\n","types":["object","Array.<object>"],"typesDescription":"<code>object</code>|<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.insertErrors - A list of errors for insert failures.","name":"callback.insertErrors","description":"<ul>\n<li>A list of errors for insert failures.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Insert a single row.\n//-\ntable.insert({\n  INSTNM: 'Motion Picture Institute of Michigan',\n  CITY: 'Troy',\n  STABBR: 'MI'\n}, insertHandler);\n\n//-\n// Insert multiple rows at a time.\n//-\nvar rows = [\n  {\n    INSTNM: 'Motion Picture Institute of Michigan',\n    CITY: 'Troy',\n    STABBR: 'MI'\n  },\n  // ...\n];\n\ntable.insert(rows, insertHandler);\n\n//-\n// Handling the response.\n//-\nfunction insertHandler(err, insertErrors, apiResponse) {\n  // err (object):\n  //   An API error occurred.\n\n  // insertErrors (object[]):\n  //   If populated, some rows failed to insert, while others may have\n  //   succeeded.\n  //\n  // insertErrors[].row (original individual row object passed to `insert`)\n  // insertErrors[].errors[].reason\n  // insertErrors[].errors[].message\n\n  // See https://developers.google.com/bigquery/troubleshooting-errors for\n  // recommendations on handling errors.\n}","html":"<p>//-<br />// Insert a single row.<br />//-<br />table.insert({<br />  INSTNM: &#39;Motion Picture Institute of Michigan&#39;,<br />  CITY: &#39;Troy&#39;,<br />  STABBR: &#39;MI&#39;<br />}, insertHandler);</p><p>//-<br />// Insert multiple rows at a time.<br />//-<br />var rows = [<br />  {<br />    INSTNM: &#39;Motion Picture Institute of Michigan&#39;,<br />    CITY: &#39;Troy&#39;,<br />    STABBR: &#39;MI&#39;<br />  },<br />  // ...<br />];</p><p>table.insert(rows, insertHandler);</p><p>//-<br />// Handling the response.<br />//-<br />function insertHandler(err, insertErrors, apiResponse) {<br />  // err (object):<br />  //   An API error occurred.</p><p>  // insertErrors (object[]):<br />  //   If populated, some rows failed to insert, while others may have<br />  //   succeeded.<br />  //<br />  // insertErrors[].row (original individual row object passed to <code>insert</code>)<br />  // insertErrors[].errors[].reason<br />  // insertErrors[].errors[].message</p><p>  // See <a href=\"https://developers.google.com/bigquery/troubleshooting-errors\">https://developers.google.com/bigquery/troubleshooting-errors</a> for<br />  // recommendations on handling errors.<br />}</p>"}],"description":{"full":"<p>Stream data into BigQuery one record at a time without running a load job.</p><p>There are more strict quota limits using this method so it is highly<br />recommended that you load data into BigQuery using<br />{module:bigquery/table#import} instead.</p>","summary":"<p>Stream data into BigQuery one record at a time without running a load job.</p>","body":"<p>There are more strict quota limits using this method so it is highly<br />recommended that you load data into BigQuery using<br />{module:bigquery/table#import} instead.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":751,"codeStart":809,"code":"Table.prototype.insert = function(rows, callback) {\n  var body = {\n    rows: arrify(rows).map(function(row) {\n      var rowObject = {};\n      // Use the stringified contents of the row as a unique insert ID.\n      var md5 = crypto.createHash('md5');\n      md5.update(JSON.stringify(row));\n      rowObject.insertId = md5.digest('hex');\n      rowObject.json = row;\n      return rowObject;\n    })\n  };\n\n  this.makeReq_('POST', '/insertAll', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var failedToInsert = (resp.insertErrors || []).map(function(insertError) {\n      return {\n        errors: insertError.errors.map(function(error) {\n          return {\n            message: error.message,\n            reason: error.reason\n          };\n        }),\n        row: body.rows[insertError.index].json\n      };\n    });\n\n    callback(null, failedToInsert, resp);\n  });\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"insert","string":"Table.prototype.insert()"}},{"tags":[],"description":{"full":"<p>Run a query scoped to your dataset.</p><p>See {module:bigquery#query} for full documentation of this method.</p>","summary":"<p>Run a query scoped to your dataset.</p>","body":"<p>See {module:bigquery#query} for full documentation of this method.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":844,"codeStart":849,"code":"Table.prototype.query = function(query, callback) {\n  return this.dataset.query(query, callback);\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"query","string":"Table.prototype.query()"}},{"tags":[{"type":"resource","string":"[Tables: update API Documentation]{@link https://cloud.google.com/bigquery/docs/reference/v2/tables/update} ","html":"<p>[Tables: update API Documentation]{@link <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables/update}\">https://cloud.google.com/bigquery/docs/reference/v2/tables/update}</a> </p>"},{"type":"param","string":"{object} metadata - The metadata key/value object to set.","name":"metadata","description":"<ul>\n<li>The metadata key/value object to set.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} metadata.description - A user-friendly description of the\n    table.","name":"metadata.description","description":"<ul>\n<li>A user-friendly description of the     table.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} metadata.name - A descriptive name for the table.","name":"metadata.name","description":"<ul>\n<li>A descriptive name for the table.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|object} metadata.schema - A comma-separated list of name:type\n    pairs. Valid types are \"string\", \"integer\", \"float\", \"boolean\", and\n    \"timestamp\". If the type is omitted, it is assumed to be \"string\".\n    Example: \"name:string, age:integer\". Schemas can also be specified as a\n    JSON array of fields, which allows for nested and repeated fields. See\n    a [Table resource](http://goo.gl/sl8Dmg) for more detailed information.","name":"metadata.schema","description":"<ul>\n<li>A comma-separated list of name:type     pairs. Valid types are &quot;string&quot;, &quot;integer&quot;, &quot;float&quot;, &quot;boolean&quot;, and<br />  &quot;timestamp&quot;. If the type is omitted, it is assumed to be &quot;string&quot;.<br />  Example: &quot;name:string, age:integer&quot;. Schemas can also be specified as a<br />  JSON array of fields, which allows for nested and repeated fields. See<br />  a <a href=\"http://goo.gl/sl8Dmg\">Table resource</a> for more detailed information.</li>\n</ul>\n","types":["string","object"],"typesDescription":"<code>string</code>|<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The metadata of the Table.","name":"callback.metadata","description":"<ul>\n<li>The metadata of the Table.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var metadata = {\n  name: 'My recipes',\n  description: 'A table for storing my recipes.',\n  schema: 'name:string, servings:integer, cookingTime:float, quick:boolean'\n};\ntable.setMetadata(metadata, function(err, metadata, apiResponse) {});","html":"<p>var metadata = {<br />  name: &#39;My recipes&#39;,<br />  description: &#39;A table for storing my recipes.&#39;,<br />  schema: &#39;name:string, servings:integer, cookingTime:float, quick:boolean&#39;<br />};<br />table.setMetadata(metadata, function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Set the metadata on the table.</p>","summary":"<p>Set the metadata on the table.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":853,"codeStart":881,"code":"Table.prototype.setMetadata = function(metadata, callback) {\n  var that = this;\n\n  if (metadata.name) {\n    metadata.friendlyName = metadata.name;\n    delete metadata.name;\n  }\n\n  if (is.string(metadata.schema)) {\n    metadata.schema = Table.createSchemaFromString_(metadata.schema);\n  }\n\n  this.makeReq_('PUT', '', null, metadata, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"setMetadata","string":"Table.prototype.setMetadata()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Pass through this request to BigQuery&#39;s request handler, first prepending the<br />path with the dataset.</p>","summary":"<p>Pass through this request to BigQuery&#39;s request handler, first prepending the<br />path with the dataset.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":905,"codeStart":917,"code":"Table.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/tables/' + this.id + path;\n  this.dataset.makeReq_(method, path, query, body, callback);\n};","ctx":{"type":"method","constructor":"Table","cons":"Table","name":"makeReq_","string":"Table.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":922,"codeStart":927,"code":"streamRouter.extend(Table, 'getRows');\n\nmodule.exports = Table;","ctx":false}],"compute/address":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/address","html":"<p>compute/address</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":23,"codeStart":27,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:region} region - Region this address belongs to.","name":"region","description":"<ul>\n<li>Region this address belongs to.</li>\n</ul>\n","types":["module:region"],"typesDescription":"module:<a href=\"module%3Aregion.html\">region</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - The name of the address.","name":"name","description":"<ul>\n<li>The name of the address.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":29,"codeStart":34},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Address Resource]{@link https://cloud.google.com/compute/docs/reference/v1/addresses} * ","html":"<p>[Address Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses}\">https://cloud.google.com/compute/docs/reference/v1/addresses}</a> * </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/address ","html":"<p>module:compute/address </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar region = gce.region('region-name');\n\nvar address = region.address('address1');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var region = gce.region(&#39;region-name&#39;);</p><p>var address = region.address(&#39;address1&#39;);</p>"}],"description":{"full":"<p>An Address object allows you to interact with a Google Compute Engine<br />address.</p>","summary":"<p>An Address object allows you to interact with a Google Compute Engine<br />address.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":34,"codeStart":56,"code":"function Address(region, name) {\n  this.region = region;\n  this.name = name;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Address","string":"Address()"}},{"tags":[{"type":"resource","string":"[Addresses: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/addresses/delete} ","html":"<p>[Addresses: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses/delete}\">https://cloud.google.com/compute/docs/reference/v1/addresses/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"address.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>address.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Delete the address.</p>","summary":"<p>Delete the address.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":62,"codeStart":79,"code":"Address.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n\n  var region = this.region;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = region.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Address","cons":"Address","name":"delete","string":"Address.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Address Resource]{@link https://cloud.google.com/compute/docs/reference/v1/addresses}","html":"<p>[Address Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses}\">https://cloud.google.com/compute/docs/reference/v1/addresses}</a></p>"},{"type":"resource","string":"[Addresses: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/addresses/get} ","html":"<p>[Addresses: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses/get}\">https://cloud.google.com/compute/docs/reference/v1/addresses/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The address's metadata.","name":"callback.metadata","description":"<ul>\n<li>The address&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"address.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>address.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the metadata of this address.</p>","summary":"<p>Get the metadata of this address.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":97,"codeStart":111,"code":"Address.prototype.getMetadata = function(callback) {\n  callback = callback || util.noop;\n\n  var self = this;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Address","cons":"Address","name":"getMetadata","string":"Address.prototype.getMetadata()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":128,"codeStart":140,"code":"Address.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/addresses/' + this.name + path;\n  this.region.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Address;","ctx":{"type":"method","constructor":"Address","cons":"Address","name":"makeReq_","string":"Address.prototype.makeReq_()"}}],"compute/disk":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/disk","html":"<p>compute/disk</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":31,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:zone} zone - Zone this disk belongs to.","name":"zone","description":"<ul>\n<li>Zone this disk belongs to.</li>\n</ul>\n","types":["module:zone"],"typesDescription":"module:<a href=\"module%3Azone.html\">zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - The name of the disk.","name":"name","description":"<ul>\n<li>The name of the disk.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":33,"codeStart":38},{"tags":[{"type":"resource","string":"[Disks Overview]{@link https://cloud.google.com/compute/docs/disks}","html":"<p>[Disks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks}\">https://cloud.google.com/compute/docs/disks}</a></p>"},{"type":"resource","string":"[Disk Resource]{@link https://cloud.google.com/compute/docs/reference/v1/disks} ","html":"<p>[Disk Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks}\">https://cloud.google.com/compute/docs/reference/v1/disks}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/disk ","html":"<p>module:compute/disk </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar zone = gce.zone('zone-name');\n\nvar disk = zone.disk('disk1');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var zone = gce.zone(&#39;zone-name&#39;);</p><p>var disk = zone.disk(&#39;disk1&#39;);</p>"}],"description":{"full":"<p>A Disk object allows you to interact with a Google Compute Engine disk.</p>","summary":"<p>A Disk object allows you to interact with a Google Compute Engine disk.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":59,"code":"function Disk(zone, name) {\n  this.zone = zone;\n  this.name = name;\n  this.metadata = {};\n\n  this.formattedName = Disk.formatName_(zone, name);\n}","ctx":{"type":"constructor","name":"Disk","string":"Disk()"}},{"tags":[{"type":"param","string":"{module:compute/zone} zone - The Zone this disk belongs to.","name":"zone","description":"<ul>\n<li>The Zone this disk belongs to.</li>\n</ul>\n","types":["module:compute/zone"],"typesDescription":"module:<a href=\"module%3Acompute%2Fzone.html\">compute/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - The name of the disk.","name":"name","description":"<ul>\n<li>The name of the disk.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{string} - The formatted name.","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>The formatted name.</li>\n</ul>\n"}],"description":{"full":"<p>Format a disk&#39;s name how the API expects.</p>","summary":"<p>Format a disk&#39;s name how the API expects.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":67,"codeStart":74,"code":"Disk.formatName_ = function(zone, name) {\n  return format('projects/{pId}/zones/{zoneName}/disks/{diskName}', {\n    pId: zone.compute.projectId,\n    zoneName: zone.name,\n    diskName: name\n  });\n};","ctx":{"type":"method","receiver":"Disk","name":"formatName_","string":"Disk.formatName_()"}},{"tags":[{"type":"resource","string":"[Snapshots Overview]{@link https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}","html":"<p>[Snapshots Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}\">https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}</a></p>"},{"type":"resource","string":"[Disks: createSnapshot API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/disks/createSnapshot} ","html":"<p>[Disks: createSnapshot API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/createSnapshot}\">https://cloud.google.com/compute/docs/reference/v1/disks/createSnapshot}</a> </p>"},{"type":"param","string":"{string} name - Name of the snapshot.","name":"name","description":"<ul>\n<li>Name of the snapshot.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - See the\n    [Disks: createSnapshot](https://cloud.google.com/compute/docs/reference/v1/disks/createSnapshot)\n    request body.","name":"options","description":"<ul>\n<li>See the     <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/createSnapshot\">Disks: createSnapshot</a><br />  request body.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/snapshot} callback.snapshot - The created Snapshot\n    object.","name":"callback.snapshot","description":"<ul>\n<li>The created Snapshot     object.</li>\n</ul>\n","types":["module:compute/snapshot"],"typesDescription":"module:<a href=\"module%3Acompute%2Fsnapshot.html\">compute/snapshot</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"function callback(err, snapshot, operation, apiResponse) {\n  // `snapshot` is a Snapshot object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\ndisk.createSnapshot('new-snapshot-name', callback);","html":"<p>function callback(err, snapshot, operation, apiResponse) {<br />  // <code>snapshot</code> is a Snapshot object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>disk.createSnapshot(&#39;new-snapshot-name&#39;, callback);</p>"}],"description":{"full":"<p>Create a snapshot of a disk.</p>","summary":"<p>Create a snapshot of a disk.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":82,"codeStart":110,"code":"Disk.prototype.createSnapshot = function(name, options, callback) {\n  var zone = this.zone;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  var body = extend({}, options, {\n    name: name\n  });\n\n  this.makeReq_('POST', '/createSnapshot', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var snapshot = zone.compute.snapshot(name);\n\n    var operation = zone.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, snapshot, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Disk","cons":"Disk","name":"createSnapshot","string":"Disk.prototype.createSnapshot()"}},{"tags":[{"type":"resource","string":"[Disks: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/disks/delete} ","html":"<p>[Disks: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/delete}\">https://cloud.google.com/compute/docs/reference/v1/disks/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"disk.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>disk.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Delete the disk.</p>","summary":"<p>Delete the disk.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":137,"codeStart":154,"code":"Disk.prototype.delete = function(callback) {\n  var zone = this.zone;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = zone.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Disk","cons":"Disk","name":"delete","string":"Disk.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Disk Resource]{@link https://cloud.google.com/compute/docs/reference/v1/disks}","html":"<p>[Disk Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks}\">https://cloud.google.com/compute/docs/reference/v1/disks}</a></p>"},{"type":"resource","string":"[Disks: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/disks/get} ","html":"<p>[Disks: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/get}\">https://cloud.google.com/compute/docs/reference/v1/disks/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The disk's metadata.","name":"callback.metadata","description":"<ul>\n<li>The disk&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"disk.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>disk.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the disk&#39;s metadata.</p>","summary":"<p>Get the disk&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":172,"codeStart":186,"code":"Disk.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Disk","cons":"Disk","name":"getMetadata","string":"Disk.prototype.getMetadata()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":203,"codeStart":215,"code":"Disk.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/disks/' + this.name + path;\n  this.zone.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Disk;","ctx":{"type":"method","constructor":"Disk","cons":"Disk","name":"makeReq_","string":"Disk.prototype.makeReq_()"}}],"compute/firewall":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/firewall","html":"<p>compute/firewall</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":23,"codeStart":27,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:compute} compute - Compute object this firewall belongs to.","name":"compute","description":"<ul>\n<li>Compute object this firewall belongs to.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Name of the firewall.","name":"name","description":"<ul>\n<li>Name of the firewall.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":29,"codeStart":34},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"},{"type":"resource","string":"[Firewall Resource]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls} ","html":"<p>[Firewall Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls}\">https://cloud.google.com/compute/docs/reference/v1/firewalls}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/firewall ","html":"<p>module:compute/firewall </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar firewall = gce.firewall('tcp-3000');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var firewall = gce.firewall(&#39;tcp-3000&#39;);</p>"}],"description":{"full":"<p>A Firewall object allows you to interact with a Google Compute Engine<br />firewall.</p>","summary":"<p>A Firewall object allows you to interact with a Google Compute Engine<br />firewall.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":34,"codeStart":54,"code":"function Firewall(compute, name) {\n  this.compute = compute;\n  this.name = name;\n\n  this.metadata = {\n    network: 'global/networks/default'\n  };\n}","ctx":{"type":"constructor","name":"Firewall","string":"Firewall()"}},{"tags":[{"type":"resource","string":"[Firewalls: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/delete} ","html":"<p>[Firewalls: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/delete}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"firewall.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>firewall.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Delete the firewall.</p>","summary":"<p>Delete the firewall.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":63,"codeStart":80,"code":"Firewall.prototype.delete = function(callback) {\n  var compute = this.compute;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Firewall","cons":"Firewall","name":"delete","string":"Firewall.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Firewalls: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/get}","html":"<p>[Firewalls: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/get}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/get}</a></p>"},{"type":"resource","string":"[Firewall Resource]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls} ","html":"<p>[Firewall Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls}\">https://cloud.google.com/compute/docs/reference/v1/firewalls}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The network's metadata.","name":"callback.metadata","description":"<ul>\n<li>The network&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"firewall.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>firewall.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the firewall&#39;s metadata.</p>","summary":"<p>Get the firewall&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":98,"codeStart":112,"code":"Firewall.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Firewall","cons":"Firewall","name":"getMetadata","string":"Firewall.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Firewall Resource]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls} ","html":"<p>[Firewall Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls}\">https://cloud.google.com/compute/docs/reference/v1/firewalls}</a> </p>"},{"type":"param","string":"{object} metadata - See a\n    [Firewall resource](https://cloud.google.com/compute/docs/reference/v1/firewalls).","name":"metadata","description":"<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls\">Firewall resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var metadata = {\n  description: 'New description'\n};\n\nfirewall.setMetadata(metadata, function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>var metadata = {<br />  description: &#39;New description&#39;<br />};</p><p>firewall.setMetadata(metadata, function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Set the firewall&#39;s metadata.</p>","summary":"<p>Set the firewall&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":129,"codeStart":152,"code":"Firewall.prototype.setMetadata = function(metadata, callback) {\n  var compute = this.compute;\n\n  callback = callback || util.noop;\n\n  metadata = metadata || {};\n  metadata.name = this.name;\n  metadata.network = this.metadata.network;\n\n  this.makeReq_('PATCH', '', null, metadata, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Firewall","cons":"Firewall","name":"setMetadata","string":"Firewall.prototype.setMetadata()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":174,"codeStart":186,"code":"Firewall.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/global/firewalls/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Firewall;","ctx":{"type":"method","constructor":"Firewall","cons":"Firewall","name":"makeReq_","string":"Firewall.prototype.makeReq_()"}}],"compute":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute","html":"<p>compute</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:compute/firewall}","types":["module:compute/firewall"],"typesDescription":"module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/firewall}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":31,"code":"var Firewall = require('./firewall.js');","ctx":{"type":"declaration","name":"Firewall","value":"require('./firewall.js')","string":"Firewall"}},{"tags":[{"type":"type","string":"{module:compute/network}","types":["module:compute/network"],"typesDescription":"module:<a href=\"module%3Acompute%2Fnetwork.html\">compute/network</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/network}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":33,"codeStart":37,"code":"var Network = require('./network.js');","ctx":{"type":"declaration","name":"Network","value":"require('./network.js')","string":"Network"}},{"tags":[{"type":"type","string":"{module:compute/operation}","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/operation}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":39,"codeStart":43,"code":"var Operation = require('./operation.js');","ctx":{"type":"declaration","name":"Operation","value":"require('./operation.js')","string":"Operation"}},{"tags":[{"type":"type","string":"{module:compute/region}","types":["module:compute/region"],"typesDescription":"module:<a href=\"module%3Acompute%2Fregion.html\">compute/region</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/region}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":45,"codeStart":49,"code":"var Region = require('./region.js');","ctx":{"type":"declaration","name":"Region","value":"require('./region.js')","string":"Region"}},{"tags":[{"type":"type","string":"{module:compute/snapshot}","types":["module:compute/snapshot"],"typesDescription":"module:<a href=\"module%3Acompute%2Fsnapshot.html\">compute/snapshot</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/snapshot}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":51,"codeStart":55,"code":"var Snapshot = require('./snapshot.js');","ctx":{"type":"declaration","name":"Snapshot","value":"require('./snapshot.js')","string":"Snapshot"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":57,"codeStart":61,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":63,"codeStart":67,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:compute/zone}","types":["module:compute/zone"],"typesDescription":"module:<a href=\"module%3Acompute%2Fzone.html\">compute/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/zone}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":69,"codeStart":73,"code":"var Zone = require('./zone.js');","ctx":{"type":"declaration","name":"Zone","value":"require('./zone.js')","string":"Zone"}},{"tags":[{"type":"const","string":"{string}","html":"<p>{string}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":75,"codeStart":79,"code":"var COMPUTE_BASE_URL = 'https://www.googleapis.com/compute/v1/projects/';","ctx":{"type":"declaration","name":"COMPUTE_BASE_URL","value":"'https://www.googleapis.com/compute/v1/projects/'","string":"COMPUTE_BASE_URL"}},{"tags":[{"type":"const","string":"{array}","html":"<p>{array}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Required scopes for Google Compute Engine API.</p>","summary":"<p>Required scopes for Google Compute Engine API.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":81,"codeStart":86,"code":"var SCOPES = ['https://www.googleapis.com/auth/compute'];","ctx":{"type":"declaration","name":"SCOPES","value":"['https://www.googleapis.com/auth/compute']","string":"SCOPES"}},{"tags":[{"type":"alias","string":"module:compute","html":"<p>module:compute</p>"},{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p>"}],"description":{"full":"<p>A Compute object allows you to interact with the Google Compute Engine API.<br />Using this object, you can access your instances with {module:compute/vm},<br />disks with {module:compute/disk}, and firewalls with<br />{module:compute/firewall}.</p>","summary":"<p>A Compute object allows you to interact with the Google Compute Engine API.<br />Using this object, you can access your instances with {module:compute/vm},<br />disks with {module:compute/disk}, and firewalls with<br />{module:compute/firewall}.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":88,"codeStart":107,"code":"function Compute(options) {\n  if (!(this instanceof Compute)) {\n    return new Compute(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  var authConfig = {\n    credentials: options.credentials,\n    keyFile: options.keyFilename,\n    scopes: SCOPES,\n    email: options.email\n  };\n\n  // We store the authConfig for use with gceImages in Zone.\n  this.authConfig = authConfig;\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory(authConfig);\n  this.projectId = options.projectId;\n}","ctx":{"type":"constructor","name":"Compute","string":"Compute()"}},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"},{"type":"resource","string":"[Firewalls: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/insert} ","html":"<p>[Firewalls: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}</a> </p>"},{"type":"throws","string":"{Error} if a name is not provided.","types":["Error"],"description":"<p>if a name is not provided.</p>"},{"type":"throws","string":"{Error} if a config object is not provided.\n","types":["Error"],"description":"<p>if a config object is not provided. </p>"},{"type":"param","string":"{string} name - Name of the firewall.","name":"name","description":"<ul>\n<li>Name of the firewall.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config - See a\n    [Firewall resource](https://cloud.google.com/compute/docs/reference/v1/firewalls#resource).","name":"config","description":"<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls#resource\">Firewall resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config.protocols - A map of protocol to port range. The keys\n    of the object refer to a protocol (e.g. `tcp`, `udp`) and the value for\n    the key are the ports/port-ranges that are allowed to make a connection.","name":"config.protocols","description":"<ul>\n<li>A map of protocol to port range. The keys     of the object refer to a protocol (e.g. <code>tcp</code>, <code>udp</code>) and the value for<br />  the key are the ports/port-ranges that are allowed to make a connection.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]} config.ranges - The IP address blocks that this rule\n    applies to, expressed in\n    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\n    format.","name":"config.ranges","description":"<ul>\n<li>The IP address blocks that this rule     applies to, expressed in<br />  <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">CIDR</a><br />  format.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]} config.tags - Instance tags which this rule applies to.","name":"config.tags","description":"<ul>\n<li>Instance tags which this rule applies to.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/firewall} callback.firewall - The created Firewall\n    object.","name":"callback.firewall","description":"<ul>\n<li>The created Firewall     object.</li>\n</ul>\n","types":["module:compute/firewall"],"typesDescription":"module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var config = {\n  protocols: {\n    tcp: [3000],\n    udp: [] // An empty array means all ports are allowed.\n  },\n\n  ranges: ['0.0.0.0/0']\n};\n\nfunction callback(err, firewall, operation, apiResponse) {\n  // `firewall` is a Firewall object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\ngce.createFirewall('new-firewall-name', config, callback);","html":"<p>var config = {<br />  protocols: {<br />    tcp: [3000],<br />    udp: [] // An empty array means all ports are allowed.<br />  },</p><p>  ranges: [&#39;0.0.0.0/0&#39;]<br />};</p><p>function callback(err, firewall, operation, apiResponse) {<br />  // <code>firewall</code> is a Firewall object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>gce.createFirewall(&#39;new-firewall-name&#39;, config, callback);</p>"}],"description":{"full":"<p>Create a firewall.</p>","summary":"<p>Create a firewall.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":132,"codeStart":179,"code":"Compute.prototype.createFirewall = function(name, config, callback) {\n  var self = this;\n\n  if (!is.string(name)) {\n    throw new Error('A firewall name must be provided.');\n  }\n\n  if (!is.object(config)) {\n    throw new Error('A firewall configuration object must be provided.');\n  }\n\n  var body = extend({}, config, {\n    name: name\n  });\n\n  if (body.protocols) {\n    body.allowed = arrify(body.allowed);\n\n    for (var protocol in body.protocols) {\n      var allowedConfig = {\n        IPProtocol: protocol\n      };\n\n      var ports = arrify(body.protocols[protocol]);\n      if (ports.length > 0) {\n        allowedConfig.ports = ports;\n      }\n\n      body.allowed.push(allowedConfig);\n    }\n\n    delete body.protocols;\n  }\n\n  if (body.ranges) {\n    body.sourceRanges = arrify(body.ranges);\n    delete body.ranges;\n  }\n\n  if (body.tags) {\n    body.sourceTags = arrify(body.tags);\n    delete body.tags;\n  }\n\n  var path = '/global/firewalls';\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var firewall = self.firewall(name);\n\n    var operation = self.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, firewall, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"createFirewall","string":"Compute.prototype.createFirewall()"}},{"tags":[{"type":"resource","string":"[Networks Overview]{@link https://cloud.google.com/compute/docs/networking#networks}","html":"<p>[Networks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#networks}\">https://cloud.google.com/compute/docs/networking#networks}</a></p>"},{"type":"resource","string":"[Networks: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/networks/insert} ","html":"<p>[Networks: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks/insert}\">https://cloud.google.com/compute/docs/reference/v1/networks/insert}</a> </p>"},{"type":"param","string":"{string} name - Name of the network.","name":"name","description":"<ul>\n<li>Name of the network.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config - See a\n    [Network resource](https://cloud.google.com/compute/docs/reference/v1/networks#resource).","name":"config","description":"<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks#resource\">Network resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} config.gateway - A gateway address for default routing to\n    other networks. (Alias for `config.gatewayIPv4`)","name":"config.gateway","description":"<ul>\n<li>A gateway address for default routing to     other networks. (Alias for <code>config.gatewayIPv4</code>)</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} config.range -\n    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) range\n    of addresses that are legal on this network. (Alias for\n    `config.IPv4Range`)","name":"config.range","description":"<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">CIDR</a> range<br />of addresses that are legal on this network. (Alias for<br /><code>config.IPv4Range</code>)</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/network} callback.network - The created Network\n    object.","name":"callback.network","description":"<ul>\n<li>The created Network     object.</li>\n</ul>\n","types":["module:compute/network"],"typesDescription":"module:<a href=\"module%3Acompute%2Fnetwork.html\">compute/network</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var config = {\n  range: '10.240.0.0/16'\n};\n\nfunction callback(err, network, operation, apiResponse) {\n  // `network` is a Network object.\n\n  // `operation` is an Operation object and can be used to check the status\n  // of network creation.\n}\n\ngce.createNetwork('new-network', config, callback);","html":"<p>var config = {<br />  range: &#39;10.240.0.0/16&#39;<br />};</p><p>function callback(err, network, operation, apiResponse) {<br />  // <code>network</code> is a Network object.</p><p>  // <code>operation</code> is an Operation object and can be used to check the status<br />  // of network creation.<br />}</p><p>gce.createNetwork(&#39;new-network&#39;, config, callback);</p>"}],"description":{"full":"<p>Create a network.</p>","summary":"<p>Create a network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":240,"codeStart":277,"code":"Compute.prototype.createNetwork = function(name, config, callback) {\n  var self = this;\n\n  var body = extend({}, config, {\n    name: name\n  });\n\n  if (body.range) {\n    body.IPv4Range = body.range;\n    delete body.range;\n  }\n\n  if (body.gateway) {\n    body.gatewayIPv4 = body.gateway;\n    delete body.gateway;\n  }\n\n  this.makeReq_('POST', '/global/networks', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var network = self.network(name);\n\n    var operation = self.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, network, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"createNetwork","string":"Compute.prototype.createNetwork()"}},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls} ","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing firewall.","name":"name","description":"<ul>\n<li>Name of the existing firewall.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/firewall}\n","types":["module:compute/firewall"],"typesDescription":"module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/firewall}</p>"},{"type":"example","string":"var firewall = gce.firewall('existing-firewall');","html":"<p>var firewall = gce.firewall(&#39;existing-firewall&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine firewall.</p><p>See {module:compute/network#firewall} to get a Firewall object for a specific<br />network.</p>","summary":"<p>Get a reference to a Google Compute Engine firewall.</p>","body":"<p>See {module:compute/network#firewall} to get a Firewall object for a specific<br />network.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":309,"codeStart":323,"code":"Compute.prototype.firewall = function(name) {\n  return new Firewall(this, name);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"firewall","string":"Compute.prototype.firewall()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Addresses: aggregatedList API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/addresses/aggregatedList} ","html":"<p>[Addresses: aggregatedList API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses/aggregatedList}\">https://cloud.google.com/compute/docs/reference/v1/addresses/aggregatedList}</a> </p>"},{"type":"param","string":"{object=} options - Address search options.","name":"options","description":"<ul>\n<li>Address search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of addresses to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of addresses to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/address} callback.addresses - Address objects from\n    your project.","name":"callback.addresses","description":"<ul>\n<li>Address objects from     your project.</li>\n</ul>\n","types":["module:compute/address"],"typesDescription":"module:<a href=\"module%3Acompute%2Faddress.html\">compute/address</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getAddresses(function(err, addresses) {\n  // addresses is an array of `Address` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, addresses, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getAddresses(nextQuery, callback);\n  }\n}\n\ngce.getAddresses({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the addresses from your project as a readable object stream.\n//-\ngce.getAddresses()\n  .on('error', console.error)\n  .on('data', function(address) {\n    // `address` is an `Address` object.\n  })\n  .on('end', function() {\n    // All addresses retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getAddresses()\n  .on('data', function(address) {\n    this.end();\n  });","html":"<p>gce.getAddresses(function(err, addresses) {<br />  // addresses is an array of <code>Address</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, addresses, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getAddresses(nextQuery, callback);<br />  }<br />}</p><p>gce.getAddresses({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the addresses from your project as a readable object stream.<br />//-<br />gce.getAddresses()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(address) {<br />    // <code>address</code> is an <code>Address</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All addresses retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getAddresses()<br />  .on(&#39;data&#39;, function(address) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of addresses. For a detailed description of method&#39;s options see<br /><a href=\"https://goo.gl/r9XmXJ\">API reference</a>.</p>","summary":"<p>Get a list of addresses. For a detailed description of method&#39;s options see<br /><a href=\"https://goo.gl/r9XmXJ\">API reference</a>.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":327,"codeStart":396,"code":"Compute.prototype.getAddresses = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var path = '/aggregated/addresses';\n\n  this.makeReq_('GET', path, options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var regions = resp.items || {};\n\n    var addresses = Object.keys(regions).reduce(function(acc, regionName) {\n      var region = self.region(regionName.replace('regions/', ''));\n      var regionAddresses = regions[regionName].addresses || [];\n\n      regionAddresses.forEach(function(address) {\n        var addressInstance = region.address(address.name);\n        addressInstance.metadata = address;\n        acc.push(addressInstance);\n      });\n\n      return acc;\n    }, []);\n\n    callback(null, addresses, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getAddresses","string":"Compute.prototype.getAddresses()"}},{"tags":[{"type":"resource","string":"[Disks Overview]{@link https://cloud.google.com/compute/docs/disks}","html":"<p>[Disks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks}\">https://cloud.google.com/compute/docs/disks}</a></p>"},{"type":"resource","string":"[Disks: aggregatedList API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/disks/aggregatedList} ","html":"<p>[Disks: aggregatedList API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/aggregatedList}\">https://cloud.google.com/compute/docs/reference/v1/disks/aggregatedList}</a> </p>"},{"type":"param","string":"{object=} options - Disk search options.","name":"options","description":"<ul>\n<li>Disk search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of disks to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of disks to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/disk} callback.disks - Disk objects from your project.","name":"callback.disks","description":"<ul>\n<li>Disk objects from your project.</li>\n</ul>\n","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getDisks(function(err, disks) {\n  // `disks` is an array of `Disk` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, disks, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getDisks(nextQuery, callback);\n  }\n}\n\ngce.getDisks({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the disks from your project as a readable object stream.\n//-\ngce.getDisks()\n  .on('error', console.error)\n  .on('data', function(disk) {\n    // `disk` is a `Disk` object.\n  })\n  .on('end', function() {\n    // All disks retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getDisks()\n  .on('data', function(disk) {\n    this.end();\n  });","html":"<p>gce.getDisks(function(err, disks) {<br />  // <code>disks</code> is an array of <code>Disk</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, disks, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getDisks(nextQuery, callback);<br />  }<br />}</p><p>gce.getDisks({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the disks from your project as a readable object stream.<br />//-<br />gce.getDisks()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(disk) {<br />    // <code>disk</code> is a <code>Disk</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All disks retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getDisks()<br />  .on(&#39;data&#39;, function(disk) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of disks.</p>","summary":"<p>Get a list of disks.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":441,"codeStart":508,"code":"Compute.prototype.getDisks = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/aggregated/disks', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var zones = resp.items || {};\n\n    var disks = Object.keys(zones).reduce(function(acc, zoneName) {\n      var zone = self.zone(zoneName.replace('zones/', ''));\n      var disks = zones[zoneName].disks || [];\n\n      disks.forEach(function(disk) {\n        var diskInstance = zone.disk(disk.name);\n        diskInstance.metadata = disk;\n        acc.push(diskInstance);\n      });\n\n      return acc;\n    }, []);\n\n    callback(null, disks, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getDisks","string":"Compute.prototype.getDisks()"}},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"},{"type":"resource","string":"[Firewalls: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/list} ","html":"<p>[Firewalls: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/list}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/list}</a> </p>"},{"type":"param","string":"{object=} options - Firewall search options.","name":"options","description":"<ul>\n<li>Firewall search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of firewalls to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of firewalls to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/firewall} callback.firewalls - Firewall objects from\n    your project.","name":"callback.firewalls","description":"<ul>\n<li>Firewall objects from     your project.</li>\n</ul>\n","types":["module:compute/firewall"],"typesDescription":"module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getFirewalls(function(err, firewalls) {\n  // `firewalls` is an array of `Firewall` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, firewalls, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getFirewalls(nextQuery, callback);\n  }\n}\n\ngce.getFirewalls({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the firewalls from your project as a readable object stream.\n//-\ngce.getFirewalls()\n  .on('error', console.error)\n  .on('data', function(firewall) {\n    // `firewall` is a `Firewall` object.\n  })\n  .on('end', function() {\n    // All firewalls retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getFirewalls()\n  .on('data', function(firewall) {\n    this.end();\n  });","html":"<p>gce.getFirewalls(function(err, firewalls) {<br />  // <code>firewalls</code> is an array of <code>Firewall</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, firewalls, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getFirewalls(nextQuery, callback);<br />  }<br />}</p><p>gce.getFirewalls({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the firewalls from your project as a readable object stream.<br />//-<br />gce.getFirewalls()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(firewall) {<br />    // <code>firewall</code> is a <code>Firewall</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All firewalls retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getFirewalls()<br />  .on(&#39;data&#39;, function(firewall) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of firewalls.</p>","summary":"<p>Get a list of firewalls.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":551,"codeStart":619,"code":"Compute.prototype.getFirewalls = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/global/firewalls', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var firewalls = (resp.items || []).map(function(firewall) {\n      var firewallInstance = self.firewall(firewall.name);\n      firewallInstance.metadata = firewall;\n      return firewallInstance;\n    });\n\n    callback(null, firewalls, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getFirewalls","string":"Compute.prototype.getFirewalls()"}},{"tags":[{"type":"resource","string":"[Networks Overview]{@link https://cloud.google.com/compute/docs/networking#networks}","html":"<p>[Networks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#networks}\">https://cloud.google.com/compute/docs/networking#networks}</a></p>"},{"type":"resource","string":"[Networks: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/networks/list} ","html":"<p>[Networks: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks/list}\">https://cloud.google.com/compute/docs/reference/v1/networks/list}</a> </p>"},{"type":"param","string":"{object=} options - Network search options.","name":"options","description":"<ul>\n<li>Network search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of networks to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of networks to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/network} callback.networks - Network objects from your\n    project.","name":"callback.networks","description":"<ul>\n<li>Network objects from your     project.</li>\n</ul>\n","types":["module:compute/network"],"typesDescription":"module:<a href=\"module%3Acompute%2Fnetwork.html\">compute/network</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getNetworks(function(err, networks) {\n  // `networks` is an array of `Network` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, networks, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getNetworks(nextQuery, callback);\n  }\n}\n\ngce.getNetworks({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the networks from your project as a readable object stream.\n//-\ngce.getNetworks()\n  .on('error', console.error)\n  .on('data', function(network) {\n    // `network` is a `Network` object.\n  })\n  .on('end', function() {\n    // All networks retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getNetworks()\n  .on('data', function(network) {\n    this.end();\n  });","html":"<p>gce.getNetworks(function(err, networks) {<br />  // <code>networks</code> is an array of <code>Network</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, networks, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getNetworks(nextQuery, callback);<br />  }<br />}</p><p>gce.getNetworks({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the networks from your project as a readable object stream.<br />//-<br />gce.getNetworks()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(network) {<br />    // <code>network</code> is a <code>Network</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All networks retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getNetworks()<br />  .on(&#39;data&#39;, function(network) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of networks.</p>","summary":"<p>Get a list of networks.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":653,"codeStart":721,"code":"Compute.prototype.getNetworks = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var self = this;\n  this.makeReq_('GET', '/global/networks', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var networks = (resp.items || []).map(function(network) {\n      var networkInstance = self.network(network.name);\n      networkInstance.metadata = network;\n      return networkInstance;\n    });\n\n    callback(null, networks, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getNetworks","string":"Compute.prototype.getNetworks()"}},{"tags":[{"type":"resource","string":"[Global Operation Overview]{@link https://cloud.google.com/compute/docs/reference/v1/globalOperations}","html":"<p>[Global Operation Overview]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations}\">https://cloud.google.com/compute/docs/reference/v1/globalOperations}</a></p>"},{"type":"resource","string":"[GlobalOperations: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/globalOperations/list} ","html":"<p>[GlobalOperations: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations/list}\">https://cloud.google.com/compute/docs/reference/v1/globalOperations/list}</a> </p>"},{"type":"param","string":"{object=} options - Operation search options.","name":"options","description":"<ul>\n<li>Operation search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of operations to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of operations to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operations - Operation objects\n    from your project.","name":"callback.operations","description":"<ul>\n<li>Operation objects     from your project.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getOperations(function(err, operations) {\n  // `operations` is an array of `Operation` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, operations, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getOperations(nextQuery, callback);\n  }\n}\n\ngce.getOperations({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the operations from your project as a readable object stream.\n//-\ngce.getOperations()\n  .on('error', console.error)\n  .on('data', function(operation) {\n    // `operation` is a `Operation` object.\n  })\n  .on('end', function() {\n    // All operations retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getOperations()\n  .on('data', function(operation) {\n    this.end();\n  });","html":"<p>gce.getOperations(function(err, operations) {<br />  // <code>operations</code> is an array of <code>Operation</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, operations, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getOperations(nextQuery, callback);<br />  }<br />}</p><p>gce.getOperations({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the operations from your project as a readable object stream.<br />//-<br />gce.getOperations()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(operation) {<br />    // <code>operation</code> is a <code>Operation</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All operations retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getOperations()<br />  .on(&#39;data&#39;, function(operation) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of global operations.</p>","summary":"<p>Get a list of global operations.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":754,"codeStart":822,"code":"Compute.prototype.getOperations = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var path = '/global/operations';\n\n  this.makeReq_('GET', path, options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var operations = (resp.items || []).map(function(operation) {\n      var operationInstance = self.operation(operation.name);\n      operationInstance.metadata = operation;\n      return operationInstance;\n    });\n\n    callback(null, operations, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getOperations","string":"Compute.prototype.getOperations()"}},{"tags":[{"type":"resource","string":"[Regions & Zones Overview]{@link https://cloud.google.com/compute/docs/zones}","html":"<p>[Regions &amp; Zones Overview]{@link <a href=\"https://cloud.google.com/compute/docs/zones}\">https://cloud.google.com/compute/docs/zones}</a></p>"},{"type":"resource","string":"[Regions: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/regions/list} ","html":"<p>[Regions: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regions/list}\">https://cloud.google.com/compute/docs/reference/v1/regions/list}</a> </p>"},{"type":"param","string":"{object=} options - Instance search options.","name":"options","description":"<ul>\n<li>Instance search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of instances to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of instances to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/region} callback.regions - Region objects that are\n    available to your project.","name":"callback.regions","description":"<ul>\n<li>Region objects that are     available to your project.</li>\n</ul>\n","types":["module:compute/region"],"typesDescription":"module:<a href=\"module%3Acompute%2Fregion.html\">compute/region</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getRegions(function(err, regions) {\n  // `regions` is an array of `Region` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, regions, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getRegions(nextQuery, callback);\n  }\n}\n\ngce.getRegions({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the regions available to your project as a readable object stream.\n//-\ngce.getRegions()\n  .on('error', console.error)\n  .on('data', function(region) {\n    // `region` is a `Region` object.\n  })\n  .on('end', function() {\n    // All regions retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getRegions()\n  .on('data', function(region) {\n    this.end();\n  });","html":"<p>gce.getRegions(function(err, regions) {<br />  // <code>regions</code> is an array of <code>Region</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, regions, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getRegions(nextQuery, callback);<br />  }<br />}</p><p>gce.getRegions({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the regions available to your project as a readable object stream.<br />//-<br />gce.getRegions()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(region) {<br />    // <code>region</code> is a <code>Region</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All regions retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getRegions()<br />  .on(&#39;data&#39;, function(region) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Return the regions available to your project.</p>","summary":"<p>Return the regions available to your project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":858,"codeStart":926,"code":"Compute.prototype.getRegions = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  this.makeReq_('GET', '/regions', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var regions = resp.items.map(function(region) {\n      var regionInstance = self.region(region.name);\n      regionInstance.metadata = region;\n      return regionInstance;\n    });\n\n    callback(null, regions, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getRegions","string":"Compute.prototype.getRegions()"}},{"tags":[{"type":"resource","string":"[Snapshots Overview]{@link https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}","html":"<p>[Snapshots Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}\">https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}</a></p>"},{"type":"resource","string":"[Snapshots: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/snapshots/list} ","html":"<p>[Snapshots: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/snapshots/list}\">https://cloud.google.com/compute/docs/reference/v1/snapshots/list}</a> </p>"},{"type":"param","string":"{object=} options - Snapshot search options.","name":"options","description":"<ul>\n<li>Snapshot search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of snapshots to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of snapshots to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/snapshot} callback.snapshots - Snapshot objects from\n    your project.","name":"callback.snapshots","description":"<ul>\n<li>Snapshot objects from     your project.</li>\n</ul>\n","types":["module:compute/snapshot"],"typesDescription":"module:<a href=\"module%3Acompute%2Fsnapshot.html\">compute/snapshot</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getSnapshots(function(err, snapshots) {\n  // `snapshots` is an array of `Snapshot` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, snapshots, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getSnapshots(nextQuery, callback);\n  }\n}\n\ngce.getSnapshots({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the snapshots from your project as a readable object stream.\n//-\ngce.getSnapshots()\n  .on('error', console.error)\n  .on('data', function(snapshot) {\n    // `snapshot` is a `Snapshot` object.\n  })\n  .on('end', function() {\n    // All snapshots retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getSnapshots()\n  .on('data', function(snapshot) {\n    this.end();\n  });","html":"<p>gce.getSnapshots(function(err, snapshots) {<br />  // <code>snapshots</code> is an array of <code>Snapshot</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, snapshots, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getSnapshots(nextQuery, callback);<br />  }<br />}</p><p>gce.getSnapshots({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the snapshots from your project as a readable object stream.<br />//-<br />gce.getSnapshots()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(snapshot) {<br />    // <code>snapshot</code> is a <code>Snapshot</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All snapshots retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getSnapshots()<br />  .on(&#39;data&#39;, function(snapshot) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of snapshots.</p>","summary":"<p>Get a list of snapshots.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":958,"codeStart":1026,"code":"Compute.prototype.getSnapshots = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n\n  this.makeReq_('GET', '/global/snapshots', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var snapshots = (resp.items || []).map(function(snapshot) {\n      var snapshotInstance = self.snapshot(snapshot.name);\n      snapshotInstance.metadata = snapshot;\n      return snapshotInstance;\n    });\n\n    callback(null, snapshots, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getSnapshots","string":"Compute.prototype.getSnapshots()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Instances: aggregatedList API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/aggregatedList} ","html":"<p>[Instances: aggregatedList API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/aggregatedList}\">https://cloud.google.com/compute/docs/reference/v1/instances/aggregatedList}</a> </p>"},{"type":"param","string":"{object=} options - Instance search options.","name":"options","description":"<ul>\n<li>Instance search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of instances to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of instances to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/vm} callback.vms - VM objects from your project.","name":"callback.vms","description":"<ul>\n<li>VM objects from your project.</li>\n</ul>\n","types":["module:compute/vm"],"typesDescription":"module:<a href=\"module%3Acompute%2Fvm.html\">compute/vm</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getVMs(function(err, vms) {\n  // `vms` is an array of `VM` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, vms, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getVMs(nextQuery, callback);\n  }\n}\n\ngce.getVMs({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the VM instances from your project as a readable object stream.\n//-\ngce.getVMs()\n  .on('error', console.error)\n  .on('data', function(vm) {\n    // `vm` is a `VM` object.\n  })\n  .on('end', function() {\n    // All vms retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getVMs()\n  .on('data', function(vm) {\n    this.end();\n  });","html":"<p>gce.getVMs(function(err, vms) {<br />  // <code>vms</code> is an array of <code>VM</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, vms, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getVMs(nextQuery, callback);<br />  }<br />}</p><p>gce.getVMs({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the VM instances from your project as a readable object stream.<br />//-<br />gce.getVMs()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(vm) {<br />    // <code>vm</code> is a <code>VM</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All vms retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getVMs()<br />  .on(&#39;data&#39;, function(vm) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of virtual machine instances.</p>","summary":"<p>Get a list of virtual machine instances.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1061,"codeStart":1128,"code":"Compute.prototype.getVMs = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var path = '/aggregated/instances';\n\n  this.makeReq_('GET', path, options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var zones = resp.items || {};\n\n    var vms = Object.keys(zones).reduce(function(acc, zoneName) {\n      var zone = self.zone(zoneName.replace('zones/', ''));\n      var instances = zones[zoneName].instances || [];\n\n      instances.forEach(function(instance) {\n        var vmInstance = zone.vm(instance.name);\n        vmInstance.metadata = instance;\n        acc.push(vmInstance);\n      });\n\n      return acc;\n    }, []);\n\n    callback(null, vms, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getVMs","string":"Compute.prototype.getVMs()"}},{"tags":[{"type":"resource","string":"[Regions & Zones Overview]{@link https://cloud.google.com/compute/docs/zones}","html":"<p>[Regions &amp; Zones Overview]{@link <a href=\"https://cloud.google.com/compute/docs/zones}\">https://cloud.google.com/compute/docs/zones}</a></p>"},{"type":"resource","string":"[Zones: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/zones/list} ","html":"<p>[Zones: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zones/list}\">https://cloud.google.com/compute/docs/reference/v1/zones/list}</a> </p>"},{"type":"param","string":"{object=} options - Instance search options.","name":"options","description":"<ul>\n<li>Instance search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of instances to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of instances to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/zone} callback.zones - Zone objects that are available\n    to your project.","name":"callback.zones","description":"<ul>\n<li>Zone objects that are available     to your project.</li>\n</ul>\n","types":["module:compute/zone"],"typesDescription":"module:<a href=\"module%3Acompute%2Fzone.html\">compute/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gce.getZones(function(err, zones) {\n  // `zones` is an array of `Zone` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, zones, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gce.getZones(nextQuery, callback);\n  }\n}\n\ngce.getZones({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the zones available to your project as a readable object stream.\n//-\ngce.getZones()\n  .on('error', console.error)\n  .on('data', function(zone) {\n    // `zone` is a `Zone` object.\n  })\n  .on('end', function() {\n    // All zones retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngce.getZones()\n  .on('data', function(zone) {\n    this.end();\n  });","html":"<p>gce.getZones(function(err, zones) {<br />  // <code>zones</code> is an array of <code>Zone</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, zones, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gce.getZones(nextQuery, callback);<br />  }<br />}</p><p>gce.getZones({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the zones available to your project as a readable object stream.<br />//-<br />gce.getZones()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(zone) {<br />    // <code>zone</code> is a <code>Zone</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All zones retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gce.getZones()<br />  .on(&#39;data&#39;, function(zone) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Return the zones available to your project.</p>","summary":"<p>Return the zones available to your project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1173,"codeStart":1241,"code":"Compute.prototype.getZones = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  this.makeReq_('GET', '/zones', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var zones = resp.items.map(function(zone) {\n      var zoneInstance = self.zone(zone.name);\n      zoneInstance.metadata = zone;\n      return zoneInstance;\n    });\n\n    callback(null, zones, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"getZones","string":"Compute.prototype.getZones()"}},{"tags":[{"type":"resource","string":"[Networks Overview]{@link https://cloud.google.com/compute/docs/networking#networks} ","html":"<p>[Networks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#networks}\">https://cloud.google.com/compute/docs/networking#networks}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing network.","name":"name","description":"<ul>\n<li>Name of the existing network.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/network}\n","types":["module:compute/network"],"typesDescription":"module:<a href=\"module%3Acompute%2Fnetwork.html\">compute/network</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/network}</p>"},{"type":"example","string":"var network = gce.network('network-name');","html":"<p>var network = gce.network(&#39;network-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine network.</p>","summary":"<p>Get a reference to a Google Compute Engine network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1273,"codeStart":1284,"code":"Compute.prototype.network = function(name) {\n  return new Network(this, name);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"network","string":"Compute.prototype.network()"}},{"tags":[{"type":"resource","string":"[Global Operation Overview]{@link https://cloud.google.com/compute/docs/reference/v1/globalOperations} ","html":"<p>[Global Operation Overview]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations}\">https://cloud.google.com/compute/docs/reference/v1/globalOperations}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing operation.","name":"name","description":"<ul>\n<li>Name of the existing operation.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/operation}\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/operation}</p>"},{"type":"example","string":"var operation = gce.operation('operation-name');","html":"<p>var operation = gce.operation(&#39;operation-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a global Google Compute Engine operation.</p>","summary":"<p>Get a reference to a global Google Compute Engine operation.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1288,"codeStart":1299,"code":"Compute.prototype.operation = function(name) {\n  return new Operation(this, name);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"operation","string":"Compute.prototype.operation()"}},{"tags":[{"type":"resource","string":"[Regions & Zones Overview]{@link https://cloud.google.com/compute/docs/zones} ","html":"<p>[Regions &amp; Zones Overview]{@link <a href=\"https://cloud.google.com/compute/docs/zones}\">https://cloud.google.com/compute/docs/zones}</a> </p>"},{"type":"param","string":"{string} name - Name of the region.","name":"name","description":"<ul>\n<li>Name of the region.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/region}\n","types":["module:compute/region"],"typesDescription":"module:<a href=\"module%3Acompute%2Fregion.html\">compute/region</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/region}</p>"},{"type":"example","string":"var region = gce.region('region-name');","html":"<p>var region = gce.region(&#39;region-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine region.</p>","summary":"<p>Get a reference to a Google Compute Engine region.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1303,"codeStart":1314,"code":"Compute.prototype.region = function(name) {\n  return new Region(this, name);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"region","string":"Compute.prototype.region()"}},{"tags":[{"type":"resource","string":"[Snapshots Overview]{@link https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots} ","html":"<p>[Snapshots Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}\">https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing snapshot.","name":"name","description":"<ul>\n<li>Name of the existing snapshot.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/snapshot}\n","types":["module:compute/snapshot"],"typesDescription":"module:<a href=\"module%3Acompute%2Fsnapshot.html\">compute/snapshot</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/snapshot}</p>"},{"type":"example","string":"var snapshot = gce.snapshot('snapshot-name');","html":"<p>var snapshot = gce.snapshot(&#39;snapshot-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine snapshot.</p>","summary":"<p>Get a reference to a Google Compute Engine snapshot.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1318,"codeStart":1329,"code":"Compute.prototype.snapshot = function(name) {\n  return new Snapshot(this, name);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"snapshot","string":"Compute.prototype.snapshot()"}},{"tags":[{"type":"resource","string":"[Regions & Zones Overview]{@link https://cloud.google.com/compute/docs/zones} ","html":"<p>[Regions &amp; Zones Overview]{@link <a href=\"https://cloud.google.com/compute/docs/zones}\">https://cloud.google.com/compute/docs/zones}</a> </p>"},{"type":"param","string":"{string} name - Name of the zone.","name":"name","description":"<ul>\n<li>Name of the zone.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/zone}\n","types":["module:compute/zone"],"typesDescription":"module:<a href=\"module%3Acompute%2Fzone.html\">compute/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/zone}</p>"},{"type":"example","string":"var zone = gce.zone('zone-name');","html":"<p>var zone = gce.zone(&#39;zone-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine zone.</p>","summary":"<p>Get a reference to a Google Compute Engine zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1333,"codeStart":1344,"code":"Compute.prototype.zone = function(name) {\n  return new Zone(this, name);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"zone","string":"Compute.prototype.zone()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1348,"codeStart":1360,"code":"Compute.prototype.makeReq_ = function(method, path, query, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: query,\n    uri: COMPUTE_BASE_URL + this.projectId + path\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"Compute","cons":"Compute","name":"makeReq_","string":"Compute.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1374,"codeStart":1379,"code":"streamRouter.extend(Compute, [\n  'getAddresses',\n  'getDisks',\n  'getFirewalls',\n  'getNetworks',\n  'getOperations',\n  'getRegions',\n  'getSnapshots',\n  'getVMs',\n  'getZones'\n]);\n\nmodule.exports = Compute;","ctx":false}],"compute/network":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/network","html":"<p>compute/network</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":31,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:compute} compute - The Compute module this network belongs to.","name":"compute","description":"<ul>\n<li>The Compute module this network belongs to.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Network name.","name":"name","description":"<ul>\n<li>Network name.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":33,"codeStart":38},{"tags":[{"type":"resource","string":"[Networks Overview]{@link https://cloud.google.com/compute/docs/networking#networks}","html":"<p>[Networks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#networks}\">https://cloud.google.com/compute/docs/networking#networks}</a></p>"},{"type":"resource","string":"[Network Resource]{@link https://cloud.google.com/compute/docs/reference/v1/networks} ","html":"<p>[Network Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks}\">https://cloud.google.com/compute/docs/reference/v1/networks}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/network ","html":"<p>module:compute/network </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar network = gce.network('network-name');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var network = gce.network(&#39;network-name&#39;);</p>"}],"description":{"full":"<p>A Network object allows you to interact with a Google Compute Engine network.</p>","summary":"<p>A Network object allows you to interact with a Google Compute Engine network.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":57,"code":"function Network(compute, name) {\n  this.compute = compute;\n  this.name = name;\n  this.metadata = {};\n\n  this.formattedName = Network.formatName_(compute, name);\n}","ctx":{"type":"constructor","name":"Network","string":"Network()"}},{"tags":[{"type":"param","string":"{module:compute} compute - The Compute object this network belongs to.","name":"compute","description":"<ul>\n<li>The Compute object this network belongs to.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - The name of the network.","name":"name","description":"<ul>\n<li>The name of the network.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{string} - The formatted name.","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>The formatted name.</li>\n</ul>\n"}],"description":{"full":"<p>Format a network&#39;s name how the API expects.</p>","summary":"<p>Format a network&#39;s name how the API expects.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":65,"codeStart":72,"code":"Network.formatName_ = function(compute, name) {\n  return format('projects/{projectId}/global/networks/{name}', {\n    projectId: compute.projectId,\n    name: name\n  });\n};","ctx":{"type":"method","receiver":"Network","name":"formatName_","string":"Network.formatName_()"}},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"},{"type":"resource","string":"[Firewalls: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/insert} ","html":"<p>[Firewalls: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}</a> </p>"},{"type":"param","string":"{string} name - Name of the firewall.","name":"name","description":"<ul>\n<li>Name of the firewall.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config - See a\n    [Firewall resource](https://cloud.google.com/compute/docs/reference/v1/firewalls#resource).","name":"config","description":"<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls#resource\">Firewall resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config.protocols - A map of protocol to port range. The keys\n    of the object refer to a protocol (e.g. `tcp`, `udp`) and the value for\n    the key are the ports/port-ranges that are allowed to make a connection.","name":"config.protocols","description":"<ul>\n<li>A map of protocol to port range. The keys     of the object refer to a protocol (e.g. <code>tcp</code>, <code>udp</code>) and the value for<br />  the key are the ports/port-ranges that are allowed to make a connection.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]} config.ranges - The IP address blocks that this rule\n    applies to, expressed in\n    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\n    format.","name":"config.ranges","description":"<ul>\n<li>The IP address blocks that this rule     applies to, expressed in<br />  <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">CIDR</a><br />  format.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/firewall} callback.firewall - The created Firewall\n    object.","name":"callback.firewall","description":"<ul>\n<li>The created Firewall     object.</li>\n</ul>\n","types":["module:compute/firewall"],"typesDescription":"module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var config = {\n  protocols: {\n    tcp: [3000],\n    udp: [] // An empty array means all ports are allowed.\n  },\n\n  ranges: ['0.0.0.0/0']\n};\n\nfunction callback(err, firewall, operation, apiResponse) {\n  // `firewall` is a Firewall object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\nnetwork.createFirewall('new-firewall-name', config, callback);","html":"<p>var config = {<br />  protocols: {<br />    tcp: [3000],<br />    udp: [] // An empty array means all ports are allowed.<br />  },</p><p>  ranges: [&#39;0.0.0.0/0&#39;]<br />};</p><p>function callback(err, firewall, operation, apiResponse) {<br />  // <code>firewall</code> is a Firewall object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>network.createFirewall(&#39;new-firewall-name&#39;, config, callback);</p>"}],"description":{"full":"<p>Create a firewall for this network.</p>","summary":"<p>Create a firewall for this network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":79,"codeStart":122,"code":"Network.prototype.createFirewall = function(name, config, callback) {\n  config = extend({}, config, {\n    network: this.formattedName\n  });\n\n  this.compute.createFirewall(name, config, callback);\n};","ctx":{"type":"method","constructor":"Network","cons":"Network","name":"createFirewall","string":"Network.prototype.createFirewall()"}},{"tags":[{"type":"resource","string":"[Networks: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/networks/delete} ","html":"<p>[Networks: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks/delete}\">https://cloud.google.com/compute/docs/reference/v1/networks/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"network.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>network.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Delete the network.</p>","summary":"<p>Delete the network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":130,"codeStart":147,"code":"Network.prototype.delete = function(callback) {\n  var compute = this.compute;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Network","cons":"Network","name":"delete","string":"Network.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls} ","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing firewall.\n","name":"name","description":"<ul>\n<li>Name of the existing firewall. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var firewall = network.firewall('firewall-name');","html":"<p>var firewall = network.firewall(&#39;firewall-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine firewall in this network.</p>","summary":"<p>Get a reference to a Google Compute Engine firewall in this network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":165,"codeStart":175,"code":"Network.prototype.firewall = function(name) {\n  var firewall = this.compute.firewall(name);\n\n  firewall.metadata = {\n    network: this.formattedName\n  };\n\n  return firewall;\n};","ctx":{"type":"method","constructor":"Network","cons":"Network","name":"firewall","string":"Network.prototype.firewall()"}},{"tags":[{"type":"resource","string":"[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}","html":"<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"},{"type":"resource","string":"[Firewalls: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/list} ","html":"<p>[Firewalls: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/list}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/list}</a> </p>"},{"type":"param","string":"{object=} options - Firewall search options.","name":"options","description":"<ul>\n<li>Firewall search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of firewalls to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of firewalls to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/firewall} callback.firewalls - Firewall objects from\n    this network.","name":"callback.firewalls","description":"<ul>\n<li>Firewall objects from     this network.</li>\n</ul>\n","types":["module:compute/firewall"],"typesDescription":"module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"network.getFirewalls(function(err, firewalls) {\n  // `firewalls` is an array of `Firewall` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, firewalls, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    network.getFirewalls(nextQuery, callback);\n  }\n}\n\nnetwork.getFirewalls({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the firewalls from your project as a readable object stream.\n//-\nnetwork.getFirewalls()\n  .on('error', console.error)\n  .on('data', function(firewall) {\n    // `firewall` is a `Firewall` object.\n  })\n  .on('end', function() {\n    // All firewalls retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nnetwork.getFirewalls()\n  .on('data', function(firewall) {\n    this.end();\n  });","html":"<p>network.getFirewalls(function(err, firewalls) {<br />  // <code>firewalls</code> is an array of <code>Firewall</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, firewalls, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    network.getFirewalls(nextQuery, callback);<br />  }<br />}</p><p>network.getFirewalls({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the firewalls from your project as a readable object stream.<br />//-<br />network.getFirewalls()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(firewall) {<br />    // <code>firewall</code> is a <code>Firewall</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All firewalls retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />network.getFirewalls()<br />  .on(&#39;data&#39;, function(firewall) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of firewalls for this network.</p>","summary":"<p>Get a list of firewalls for this network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":185,"codeStart":246,"code":"Network.prototype.getFirewalls = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = extend({}, options, {\n    filter: 'network eq .*' + this.formattedName\n  });\n\n  return this.compute.getFirewalls(options, callback);\n};","ctx":{"type":"method","constructor":"Network","cons":"Network","name":"getFirewalls","string":"Network.prototype.getFirewalls()"}},{"tags":[{"type":"resource","string":"[Network Resource]{@link https://cloud.google.com/compute/docs/reference/v1/networks}","html":"<p>[Network Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks}\">https://cloud.google.com/compute/docs/reference/v1/networks}</a></p>"},{"type":"resource","string":"[Networks: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/networks/delete} ","html":"<p>[Networks: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks/delete}\">https://cloud.google.com/compute/docs/reference/v1/networks/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The network's metadata.","name":"callback.metadata","description":"<ul>\n<li>The network&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"network.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>network.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the network&#39;s metadata.</p>","summary":"<p>Get the network&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":259,"codeStart":273,"code":"Network.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Network","cons":"Network","name":"getMetadata","string":"Network.prototype.getMetadata()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":290,"codeStart":302,"code":"Network.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/global/networks/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Network;","ctx":{"type":"method","constructor":"Network","cons":"Network","name":"makeReq_","string":"Network.prototype.makeReq_()"}}],"compute/operation":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/operation","html":"<p>compute/operation</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:compute} scope - The scope of the operation: a `Compute`,\n    `Zone`, or `Region` object.","name":"scope","description":"<ul>\n<li>The scope of the operation: a <code>Compute</code>,     <code>Zone</code>, or <code>Region</code> object.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Operation name.","name":"name","description":"<ul>\n<li>Operation name.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":32,"codeStart":38},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/operation ","html":"<p>module:compute/operation </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\n//-\n// Reference a global operation.\n//-\nvar operation = gce.operation('operation-id');\n\n//-\n// Reference a region operation.\n//-\nvar region = gce.region('us-central1');\nvar operation = region.operation('operation-id');\n\n//-\n// Reference a zone operation.\n//-\nvar zone = gce.zone('us-central1-a');\nvar operation = zone.operation('operation-id');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>//-<br />// Reference a global operation.<br />//-<br />var operation = gce.operation(&#39;operation-id&#39;);</p><p>//-<br />// Reference a region operation.<br />//-<br />var region = gce.region(&#39;us-central1&#39;);<br />var operation = region.operation(&#39;operation-id&#39;);</p><p>//-<br />// Reference a zone operation.<br />//-<br />var zone = gce.zone(&#39;us-central1-a&#39;);<br />var operation = zone.operation(&#39;operation-id&#39;);</p>"}],"description":{"full":"<p>An Operation object allows you to interact with a Google Compute Engine<br />operation.</p><p>An operation can be a<br /><a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations\">GlobalOperation</a>,<br /><a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations\">RegionOperation</a>,<br />or<br /><a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations\">ZoneOperation</a>.</p>","summary":"<p>An Operation object allows you to interact with a Google Compute Engine<br />operation.</p>","body":"<p>An operation can be a<br /><a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations\">GlobalOperation</a>,<br /><a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations\">RegionOperation</a>,<br />or<br /><a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations\">ZoneOperation</a>.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":76,"code":"function Operation(scope, name) {\n  this.scope = scope;\n  this.name = name;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Operation","string":"Operation()"}},{"tags":[{"type":"resource","string":"[GlobalOperations: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/globalOperations/delete}","html":"<p>[GlobalOperations: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations/delete}\">https://cloud.google.com/compute/docs/reference/v1/globalOperations/delete}</a></p>"},{"type":"resource","string":"[RegionOperations: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/regionOperations/delete}","html":"<p>[RegionOperations: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations/delete}\">https://cloud.google.com/compute/docs/reference/v1/regionOperations/delete}</a></p>"},{"type":"resource","string":"[ZoneOperations: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/zoneOperations/delete} ","html":"<p>[ZoneOperations: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations/delete}\">https://cloud.google.com/compute/docs/reference/v1/zoneOperations/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"operation.delete(function(err, apiResponse) {});","html":"<p>operation.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete the operation.</p>","summary":"<p>Delete the operation.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":82,"codeStart":96,"code":"Operation.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    callback(err, resp);\n  });\n};","ctx":{"type":"method","constructor":"Operation","cons":"Operation","name":"delete","string":"Operation.prototype.delete()"}},{"tags":[{"type":"resource","string":"[GlobalOperations: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/globalOperations/get}","html":"<p>[GlobalOperations: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations/get}\">https://cloud.google.com/compute/docs/reference/v1/globalOperations/get}</a></p>"},{"type":"resource","string":"[RegionOperations: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/regionOperations/get}","html":"<p>[RegionOperations: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations/get}\">https://cloud.google.com/compute/docs/reference/v1/regionOperations/get}</a></p>"},{"type":"resource","string":"[ZoneOperations: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/zoneOperations/get} ","html":"<p>[ZoneOperations: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations/get}\">https://cloud.google.com/compute/docs/reference/v1/zoneOperations/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The disk's metadata.","name":"callback.metadata","description":"<ul>\n<li>The disk&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"operation.getMetadata(function(err, metadata, apiResponse) {\n  // `metadata.error`: Contains errors if the operation failed.\n  // `metadata.warnings`: Contains warnings.\n});","html":"<p>operation.getMetadata(function(err, metadata, apiResponse) {<br />  // <code>metadata.error</code>: Contains errors if the operation failed.<br />  // <code>metadata.warnings</code>: Contains warnings.<br />});</p>"}],"description":{"full":"<p>Get the operation&#39;s metadata. For a detailed description of metadata see<br /><a href=\"https://goo.gl/sWm1rt\">Operation resource</a>.</p>","summary":"<p>Get the operation&#39;s metadata. For a detailed description of metadata see<br /><a href=\"https://goo.gl/sWm1rt\">Operation resource</a>.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":104,"codeStart":123,"code":"Operation.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    // An Operation entity contains a property named `error`. This makes\n    // `makeReq_` think the operation failed, and will return an ApiError to\n    // this callback. We have to make sure this isn't a false error by seeing if\n    // the response body contains a property that wouldn't exist on a failed API\n    // request (`name`).\n    var isActualError = err && (!resp || resp.name !== self.name);\n\n    if (isActualError) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Operation","cons":"Operation","name":"getMetadata","string":"Operation.prototype.getMetadata()"}},{"tags":[{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxAttempts - Maximum number of attempts to make an\n    API request to check if the operation is complete. (Default: `10`)","name":"options.maxAttempts","description":"<ul>\n<li>Maximum number of attempts to make an     API request to check if the operation is complete. (Default: <code>10</code>)</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.interval - Amount of time in milliseconds between\n    each request. (Default: `3000`)","name":"options.interval","description":"<ul>\n<li>Amount of time in milliseconds between     each request. (Default: <code>3000</code>)</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The operation's metadata.\n","name":"callback.metadata","description":"<ul>\n<li>The operation&#39;s metadata. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"operation.onComplete(function(err, metadata) {\n  if (err.code === 'OPERATION_INCOMPLETE') {\n    // The operation is not complete yet. You may want to register another\n    // `onComplete` listener or queue for later.\n  }\n\n  if (!err) {\n    // Operation complete!\n  }\n});","html":"<p>operation.onComplete(function(err, metadata) {<br />  if (err.code === &#39;OPERATION_INCOMPLETE&#39;) {<br />    // The operation is not complete yet. You may want to register another<br />    // <code>onComplete</code> listener or queue for later.<br />  }</p><p>  if (!err) {<br />    // Operation complete!<br />  }<br />});</p>"}],"description":{"full":"<p>Register a callback for when the operation is complete.</p><p>If the operation doesn&#39;t complete after the maximum number of attempts have<br />been made (see <code>options.maxAttempts</code> and <code>options.interval</code>), an error will<br />be provided to your callback with code: <code>OPERATION_INCOMPLETE</code>.</p>","summary":"<p>Register a callback for when the operation is complete.</p>","body":"<p>If the operation doesn&#39;t complete after the maximum number of attempts have<br />been made (see <code>options.maxAttempts</code> and <code>options.interval</code>), an error will<br />be provided to your callback with code: <code>OPERATION_INCOMPLETE</code>.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":147,"codeStart":175,"code":"Operation.prototype.onComplete = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = extend({\n    maxAttempts: 10,\n    interval: 3000\n  }, options);\n\n  var didNotCompleteError = new Error('Operation did not complete.');\n  didNotCompleteError.code = 'OPERATION_INCOMPLETE';\n\n  var numAttempts = 0;\n\n  function checkMetadata() {\n    numAttempts++;\n\n    if (numAttempts > options.maxAttempts) {\n      callback(didNotCompleteError, self.metadata);\n      return;\n    }\n\n    setTimeout(function() {\n      self.getMetadata(onMetadata);\n    }, options.interval);\n  }\n\n  function onMetadata(err, metadata) {\n    if (err) {\n      callback(err, metadata);\n      return;\n    }\n\n    if (metadata.status !== 'DONE') {\n      checkMetadata();\n      return;\n    }\n\n    // The operation is complete.\n    callback(null, metadata);\n  }\n\n  checkMetadata();\n};","ctx":{"type":"method","constructor":"Operation","cons":"Operation","name":"onComplete","string":"Operation.prototype.onComplete()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":224,"codeStart":236,"code":"Operation.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/operations/' + this.name + path;\n\n  if (this.scope.constructor.name === 'Compute') {\n    path = '/global' + path;\n  }\n\n  this.scope.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Operation;","ctx":{"type":"method","constructor":"Operation","cons":"Operation","name":"makeReq_","string":"Operation.prototype.makeReq_()"}}],"compute/region":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/region","html":"<p>compute/region</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:compute/address}","types":["module:compute/address"],"typesDescription":"module:<a href=\"module%3Acompute%2Faddress.html\">compute/address</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/address}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var Address = require('./address.js');","ctx":{"type":"declaration","name":"Address","value":"require('./address.js')","string":"Address"}},{"tags":[{"type":"type","string":"{module:compute/operation}","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/operation}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var Operation = require('./operation.js');","ctx":{"type":"declaration","name":"Operation","value":"require('./operation.js')","string":"Operation"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":42,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":44,"codeStart":48,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:compute} compute - Compute object this region belongs to.","name":"compute","description":"<ul>\n<li>Compute object this region belongs to.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Name of the region.","name":"name","description":"<ul>\n<li>Name of the region.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":50,"codeStart":55},{"tags":[{"type":"resource","string":"[Regions & Zones Overview]{@link https://cloud.google.com/compute/docs/zones}","html":"<p>[Regions &amp; Zones Overview]{@link <a href=\"https://cloud.google.com/compute/docs/zones}\">https://cloud.google.com/compute/docs/zones}</a></p>"},{"type":"resource","string":"[Region Resource]{@link https://cloud.google.com/compute/docs/reference/v1/regions} ","html":"<p>[Region Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regions}\">https://cloud.google.com/compute/docs/reference/v1/regions}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/region ","html":"<p>module:compute/region </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar region = gce.region('us-central1');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var region = gce.region(&#39;us-central1&#39;);</p>"}],"description":{"full":"<p>A Region object allows you to interact with a Google Compute Engine region.</p>","summary":"<p>A Region object allows you to interact with a Google Compute Engine region.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":55,"codeStart":74,"code":"function Region(compute, name) {\n  this.compute = compute;\n  this.name = name;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Region","string":"Region()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network} ","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing address.","name":"name","description":"<ul>\n<li>Name of the existing address.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/address}\n","types":["module:compute/address"],"typesDescription":"module:<a href=\"module%3Acompute%2Faddress.html\">compute/address</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/address}</p>"},{"type":"example","string":"var address = region.address('address-name');","html":"<p>var address = region.address(&#39;address-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine address in this region.</p>","summary":"<p>Get a reference to a Google Compute Engine address in this region.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":80,"codeStart":91,"code":"Region.prototype.address = function(name) {\n  return new Address(this, name);\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"address","string":"Region.prototype.address()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Address Resource]{@link https://cloud.google.com/compute/docs/reference/v1/addresses}","html":"<p>[Address Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses}\">https://cloud.google.com/compute/docs/reference/v1/addresses}</a></p>"},{"type":"resource","string":"[Addresses: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/addresses/insert} ","html":"<p>[Addresses: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses/insert}\">https://cloud.google.com/compute/docs/reference/v1/addresses/insert}</a> </p>"},{"type":"param","string":"{string} name - Name of the address.","name":"name","description":"<ul>\n<li>Name of the address.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - See an\n    [Address resource](https://cloud.google.com/compute/docs/reference/v1/addresses).","name":"options","description":"<ul>\n<li>See an     <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses\">Address resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/address} callback.address - The created Address\n    object.","name":"callback.address","description":"<ul>\n<li>The created Address     object.</li>\n</ul>\n","types":["module:compute/address"],"typesDescription":"module:<a href=\"module%3Acompute%2Faddress.html\">compute/address</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"function callback(err, address, operation, apiResponse) {\n  // `address` is an Address object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\nregion.createAddress('new-address', callback);","html":"<p>function callback(err, address, operation, apiResponse) {<br />  // <code>address</code> is an Address object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>region.createAddress(&#39;new-address&#39;, callback);</p>"}],"description":{"full":"<p>Create an address in this region.</p>","summary":"<p>Create an address in this region.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":95,"codeStart":123,"code":"Region.prototype.createAddress = function(name, options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  var body = extend({}, options, {\n    name: name\n  });\n\n  this.makeReq_('POST', '/addresses', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var address = self.address(name);\n\n    var operation = self.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, address, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"createAddress","string":"Region.prototype.createAddress()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Addresses: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/addresses/list} ","html":"<p>[Addresses: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/addresses/list}\">https://cloud.google.com/compute/docs/reference/v1/addresses/list}</a> </p>"},{"type":"param","string":"{object=} options - Address search options.","name":"options","description":"<ul>\n<li>Address search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of addresses to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of addresses to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/address} callback.addresses - Address objects from\n    this region.","name":"callback.addresses","description":"<ul>\n<li>Address objects from     this region.</li>\n</ul>\n","types":["module:compute/address"],"typesDescription":"module:<a href=\"module%3Acompute%2Faddress.html\">compute/address</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"region.getAddresses(function (err, addresses) {\n  // `addresses` is an array of `Address` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, addresses, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    region.getAddresses(nextQuery, callback);\n  }\n}\n\nregion.getAddresses({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the addresses from your project as a readable object stream.\n//-\nregion.getAddresses()\n  .on('error', console.error)\n  .on('data', function(address) {\n    // `address` is an `Address` object.\n  })\n  .on('end', function() {\n    // All addresses retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nregion.getAddresses()\n  .on('data', function(address) {\n    this.end();\n  });","html":"<p>region.getAddresses(function (err, addresses) {<br />  // <code>addresses</code> is an array of <code>Address</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, addresses, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    region.getAddresses(nextQuery, callback);<br />  }<br />}</p><p>region.getAddresses({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the addresses from your project as a readable object stream.<br />//-<br />region.getAddresses()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(address) {<br />    // <code>address</code> is an <code>Address</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All addresses retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />region.getAddresses()<br />  .on(&#39;data&#39;, function(address) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of addresses in this region.</p>","summary":"<p>Get a list of addresses in this region.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":150,"codeStart":218,"code":"Region.prototype.getAddresses = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/addresses', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var addresses = (resp.items || []).map(function(address) {\n      var addressInstance = self.address(address.name);\n      addressInstance.metadata = address;\n      return addressInstance;\n    });\n\n    callback(null, addresses, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"getAddresses","string":"Region.prototype.getAddresses()"}},{"tags":[{"type":"resource","string":"[Region Resource]{@link https://cloud.google.com/compute/docs/reference/v1/regions}","html":"<p>[Region Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regions}\">https://cloud.google.com/compute/docs/reference/v1/regions}</a></p>"},{"type":"resource","string":"[Regions: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/regions/get} ","html":"<p>[Regions: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regions/get}\">https://cloud.google.com/compute/docs/reference/v1/regions/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The region's metadata.","name":"callback.metadata","description":"<ul>\n<li>The region&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"region.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>region.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the region&#39;s metadata.</p>","summary":"<p>Get the region&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":252,"codeStart":266,"code":"Region.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"getMetadata","string":"Region.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Region Operation Overview]{@link https://cloud.google.com/compute/docs/reference/v1/regionOperations}","html":"<p>[Region Operation Overview]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations}\">https://cloud.google.com/compute/docs/reference/v1/regionOperations}</a></p>"},{"type":"resource","string":"[RegionOperations: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/regionOperations/list} ","html":"<p>[RegionOperations: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations/list}\">https://cloud.google.com/compute/docs/reference/v1/regionOperations/list}</a> </p>"},{"type":"param","string":"{object=} options - Operation search options.","name":"options","description":"<ul>\n<li>Operation search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of operations to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of operations to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operations - Operation objects\n    from this region.","name":"callback.operations","description":"<ul>\n<li>Operation objects     from this region.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"region.getOperations(function(err, operations) {\n  // `operations` is an array of `Operation` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, operations, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    region.getOperations(nextQuery, callback);\n  }\n}\n\nregion.getOperations({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the operations from your project as a readable object stream.\n//-\nregion.getOperations()\n  .on('error', console.error)\n  .on('data', function(operation) {\n    // `operation` is an `Operation` object.\n  })\n  .on('end', function() {\n    // All operations retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nregion.getOperations()\n  .on('data', function(operation) {\n    this.end();\n  });","html":"<p>region.getOperations(function(err, operations) {<br />  // <code>operations</code> is an array of <code>Operation</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, operations, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    region.getOperations(nextQuery, callback);<br />  }<br />}</p><p>region.getOperations({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the operations from your project as a readable object stream.<br />//-<br />region.getOperations()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(operation) {<br />    // <code>operation</code> is an <code>Operation</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All operations retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />region.getOperations()<br />  .on(&#39;data&#39;, function(operation) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of operations for this region.</p>","summary":"<p>Get a list of operations for this region.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":283,"codeStart":351,"code":"Region.prototype.getOperations = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/operations', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var operations = (resp.items || []).map(function(operation) {\n      var operationInstance = self.operation(operation.name);\n      operationInstance.metadata = operation;\n      return operationInstance;\n    });\n\n    callback(null, operations, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"getOperations","string":"Region.prototype.getOperations()"}},{"tags":[{"type":"resource","string":"[Region Operation Overview]{@link https://cloud.google.com/compute/docs/reference/v1/regionOperations} ","html":"<p>[Region Operation Overview]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations}\">https://cloud.google.com/compute/docs/reference/v1/regionOperations}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing operation.","name":"name","description":"<ul>\n<li>Name of the existing operation.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/operation}\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/operation}</p>"},{"type":"example","string":"var operation = region.operation('operation-name');","html":"<p>var operation = region.operation(&#39;operation-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine region operation.</p>","summary":"<p>Get a reference to a Google Compute Engine region operation.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":385,"codeStart":396,"code":"Region.prototype.operation = function(name) {\n  return new Operation(this, name);\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"operation","string":"Region.prototype.operation()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":400,"codeStart":412,"code":"Region.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/regions/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};","ctx":{"type":"method","constructor":"Region","cons":"Region","name":"makeReq_","string":"Region.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":417,"codeStart":422,"code":"streamRouter.extend(Region, ['getAddresses', 'getOperations']);\n\nmodule.exports = Region;","ctx":false}],"compute/snapshot":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/snapshot","html":"<p>compute/snapshot</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":23,"codeStart":27,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:compute} compute - Compute object this snapshot belongs to.","name":"compute","description":"<ul>\n<li>Compute object this snapshot belongs to.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Snapshot name.","name":"name","description":"<ul>\n<li>Snapshot name.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":29,"codeStart":34},{"tags":[{"type":"resource","string":"[Snapshots Overview]{@link https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}","html":"<p>[Snapshots Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}\">https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots}</a></p>"},{"type":"resource","string":"[Snapshot Resource]{@link https://cloud.google.com/compute/docs/reference/v1/snapshots} ","html":"<p>[Snapshot Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/snapshots}\">https://cloud.google.com/compute/docs/reference/v1/snapshots}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/snapshot ","html":"<p>module:compute/snapshot </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar snapshot = gce.snapshot('snapshot-name');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var snapshot = gce.snapshot(&#39;snapshot-name&#39;);</p>"}],"description":{"full":"<p>A Snapshot object allows you to interact with a Google Compute Engine<br />snapshot.</p>","summary":"<p>A Snapshot object allows you to interact with a Google Compute Engine<br />snapshot.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":34,"codeStart":54,"code":"function Snapshot(compute, name) {\n  this.compute = compute;\n  this.name = name;\n  this.metadata = {};\n}","ctx":{"type":"constructor","name":"Snapshot","string":"Snapshot()"}},{"tags":[{"type":"resource","string":"[Snapshots: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/snapshots/delete} ","html":"<p>[Snapshots: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/snapshots/delete}\">https://cloud.google.com/compute/docs/reference/v1/snapshots/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"snapshot.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>snapshot.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Delete the snapshot.</p>","summary":"<p>Delete the snapshot.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":60,"codeStart":77,"code":"Snapshot.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n\n  var compute = this.compute;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Snapshot","cons":"Snapshot","name":"delete","string":"Snapshot.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Snapshot Resource]{@link https://cloud.google.com/compute/docs/reference/v1/snapshots}","html":"<p>[Snapshot Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/snapshots}\">https://cloud.google.com/compute/docs/reference/v1/snapshots}</a></p>"},{"type":"resource","string":"[Snapshots: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/snapshots/get} ","html":"<p>[Snapshots: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/snapshots/get}\">https://cloud.google.com/compute/docs/reference/v1/snapshots/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The zone's metadata.","name":"callback.metadata","description":"<ul>\n<li>The zone&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"snapshot.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>snapshot.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the snapshots&#39;s metadata.</p>","summary":"<p>Get the snapshots&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":95,"codeStart":109,"code":"Snapshot.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Snapshot","cons":"Snapshot","name":"getMetadata","string":"Snapshot.prototype.getMetadata()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":126,"codeStart":138,"code":"Snapshot.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/global/snapshots/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Snapshot;","ctx":{"type":"method","constructor":"Snapshot","cons":"Snapshot","name":"makeReq_","string":"Snapshot.prototype.makeReq_()"}}],"compute/vm":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/vm","html":"<p>compute/vm</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:compute/disk}","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/disk}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var Disk = require('./disk.js');","ctx":{"type":"declaration","name":"Disk","value":"require('./disk.js')","string":"Disk"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"param","string":"{module:zone} zone - Zone object this instance belongs to.","name":"zone","description":"<ul>\n<li>Zone object this instance belongs to.</li>\n</ul>\n","types":["module:zone"],"typesDescription":"module:<a href=\"module%3Azone.html\">zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Name of the instance.","name":"name","description":"<ul>\n<li>Name of the instance.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":38,"codeStart":43},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Instance Resource]{@link https://cloud.google.com/compute/docs/reference/v1/instances} ","html":"<p>[Instance Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances}\">https://cloud.google.com/compute/docs/reference/v1/instances}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/vm ","html":"<p>module:compute/vm </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar zone = gce.zone('zone-name');\n\nvar vm = zone.vm('vm-name');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var zone = gce.zone(&#39;zone-name&#39;);</p><p>var vm = zone.vm(&#39;vm-name&#39;);</p>"}],"description":{"full":"<p>An Instance object allows you to interact with a Google Compute Engine<br />instance.</p>","summary":"<p>An Instance object allows you to interact with a Google Compute Engine<br />instance.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":43,"codeStart":65,"code":"function VM(zone, name) {\n  this.zone = zone;\n  this.name = name;\n}","ctx":{"type":"constructor","name":"VM","string":"VM()"}},{"tags":[{"type":"resource","string":"[Disks Overview]{@link https://cloud.google.com/compute/docs/disks}","html":"<p>[Disks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks}\">https://cloud.google.com/compute/docs/disks}</a></p>"},{"type":"resource","string":"[Disk Resource]{@link https://cloud.google.com/compute/docs/reference/v1/disks}","html":"<p>[Disk Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks}\">https://cloud.google.com/compute/docs/reference/v1/disks}</a></p>"},{"type":"resource","string":"[Instance: attachDisk API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/attachDisk} ","html":"<p>[Instance: attachDisk API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/attachDisk}\">https://cloud.google.com/compute/docs/reference/v1/instances/attachDisk}</a> </p>"},{"type":"throws","string":"{Error} if a {module:compute/disk} is not provided.\n","types":["Error"],"description":"<p>if a {module:compute/disk} is not provided. </p>"},{"type":"param","string":"{module:compute/disk} disk - The disk to attach.","name":"disk","description":"<ul>\n<li>The disk to attach.</li>\n</ul>\n","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - See the\n    [Instances: attachDisk](https://cloud.google.com/compute/docs/reference/v1/instances/attachDisk)\n    request body.","name":"options","description":"<ul>\n<li>See the     <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/attachDisk\">Instances: attachDisk</a><br />  request body.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.readOnly - Attach the disk in read-only mode. (Alias\n    for `options.mode = READ_ONLY`)","name":"options.readOnly","description":"<ul>\n<li>Attach the disk in read-only mode. (Alias     for <code>options.mode = READ_ONLY</code>)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var disk = zone.disk('my-disk');\n\nfunction callback(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\nvm.attachDisk(disk, callback);\n\n//-\n// Provide an options object to customize the request.\n//-\nvar options = {\n  autoDelete: true,\n  readOnly: true\n};\n\nvm.attachDisk(disk, options, callback);","html":"<p>var disk = zone.disk(&#39;my-disk&#39;);</p><p>function callback(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>vm.attachDisk(disk, callback);</p><p>//-<br />// Provide an options object to customize the request.<br />//-<br />var options = {<br />  autoDelete: true,<br />  readOnly: true<br />};</p><p>vm.attachDisk(disk, options, callback);</p>"}],"description":{"full":"<p>Attach a disk to the instance.</p>","summary":"<p>Attach a disk to the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":70,"codeStart":111,"code":"VM.prototype.attachDisk = function(disk, options, callback) {\n  if (!(disk instanceof Disk)) {\n    throw new Error('A Disk object must be provided.');\n  }\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  var body = extend({}, options, {\n    source: disk.formattedName\n  });\n\n  if (body.readOnly) {\n    body.mode = 'READ_ONLY';\n    delete body.readOnly;\n  }\n\n  this.makeReq_('POST', '/attachDisk', null, body, callback);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"attachDisk","string":"VM.prototype.attachDisk()"}},{"tags":[{"type":"resource","string":"[Instance: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/delete} ","html":"<p>[Instance: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/delete}\">https://cloud.google.com/compute/docs/reference/v1/instances/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>vm.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Delete the instance.</p>","summary":"<p>Delete the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":133,"codeStart":150,"code":"VM.prototype.delete = function(callback) {\n  this.makeReq_('DELETE', '', null, null, callback || util.noop);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"delete","string":"VM.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Instance: detachDisk API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/detachDisk} ","html":"<p>[Instance: detachDisk API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/detachDisk}\">https://cloud.google.com/compute/docs/reference/v1/instances/detachDisk}</a> </p>"},{"type":"throws","string":"{Error} if a {module:compute/disk} is not provided.\n","types":["Error"],"description":"<p>if a {module:compute/disk} is not provided. </p>"},{"type":"param","string":"{module:compute/disk} disk - The disk to detach.","name":"disk","description":"<ul>\n<li>The disk to detach.</li>\n</ul>\n","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var disk = zone.disk('my-disk');\n\nvm.detachDisk(disk, function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>var disk = zone.disk(&#39;my-disk&#39;);</p><p>vm.detachDisk(disk, function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Detach a disk from the instance.</p>","summary":"<p>Detach a disk from the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":154,"codeStart":176,"code":"VM.prototype.detachDisk = function(disk, callback) {\n  if (!(disk instanceof Disk)) {\n    throw new Error('A Disk object must be provided.');\n  }\n\n  var query = {\n    deviceName: disk.name\n  };\n\n  this.makeReq_('POST', '/detachDisk', query, null, callback || util.noop);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"detachDisk","string":"VM.prototype.detachDisk()"}},{"tags":[{"type":"resource","string":"[Instance Resource]{@link https://cloud.google.com/compute/docs/reference/v1/instances}","html":"<p>[Instance Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances}\">https://cloud.google.com/compute/docs/reference/v1/instances}</a></p>"},{"type":"resource","string":"[Instance: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/get} ","html":"<p>[Instance: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/get}\">https://cloud.google.com/compute/docs/reference/v1/instances/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The instance's metadata.","name":"callback.metadata","description":"<ul>\n<li>The instance&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>vm.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the instances&#39;s metadata.</p>","summary":"<p>Get the instances&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":188,"codeStart":202,"code":"VM.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, _, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"getMetadata","string":"VM.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Instances: getSerialPortOutput API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/getSerialPortOutput} ","html":"<p>[Instances: getSerialPortOutput API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/getSerialPortOutput}\">https://cloud.google.com/compute/docs/reference/v1/instances/getSerialPortOutput}</a> </p>"},{"type":"param","string":"{number=} port - The port from which the output is retrieved (1-4).\n   Default: `1`.","name":"port","description":"<ul>\n<li>The port from which the output is retrieved (1-4).    Default: <code>1</code>.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.output - The output from the port.","name":"callback.output","description":"<ul>\n<li>The output from the port.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.getSerialPortOutput(function(err, output, apiResponse) {});","html":"<p>vm.getSerialPortOutput(function(err, output, apiResponse) {});</p>"}],"description":{"full":"<p>Returns the serial port output for the instance.</p>","summary":"<p>Returns the serial port output for the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":219,"codeStart":234,"code":"VM.prototype.getSerialPortOutput = function(port, callback) {\n  if (is.fn(port)) {\n    callback = port;\n    port = 1;\n  }\n\n  var query = {\n    port: port\n  };\n\n  this.makeReq_('GET', '/serialPort', query, null, function(err, _, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, resp.contents, resp);\n  });\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"getSerialPortOutput","string":"VM.prototype.getSerialPortOutput()"}},{"tags":[{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object[]} callback.tags - Tag objects from this VM.","name":"callback.tags","description":"<ul>\n<li>Tag objects from this VM.</li>\n</ul>\n","types":["Array.<object>"],"typesDescription":"<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} callback.fingerprint - The current tag fingerprint.","name":"callback.fingerprint","description":"<ul>\n<li>The current tag fingerprint.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.getTags(function(err, tags, fingerprint, apiResponse) {});","html":"<p>vm.getTags(function(err, tags, fingerprint, apiResponse) {});</p>"}],"description":{"full":"<p>Get the instance&#39;s tags and their fingerprint.</p><p>This method wraps {module:compute/vm#getMetadata}, returning only the <code>tags</code><br />property.</p>","summary":"<p>Get the instance&#39;s tags and their fingerprint.</p>","body":"<p>This method wraps {module:compute/vm#getMetadata}, returning only the <code>tags</code><br />property.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":254,"codeStart":269,"code":"VM.prototype.getTags = function(callback) {\n  this.getMetadata(function(err, metadata, apiResponse) {\n    if (err) {\n      callback(err, null, null, apiResponse);\n      return;\n    }\n\n    callback(null, metadata.tags.items, metadata.tags.fingerprint, apiResponse);\n  });\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"getTags","string":"VM.prototype.getTags()"}},{"tags":[{"type":"resource","string":"[Instances: reset API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/reset} ","html":"<p>[Instances: reset API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/reset}\">https://cloud.google.com/compute/docs/reference/v1/instances/reset}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.reset(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>vm.reset(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Reset the instance.</p>","summary":"<p>Reset the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":280,"codeStart":297,"code":"VM.prototype.reset = function(callback) {\n  this.makeReq_('POST', '/reset', null, null, callback || util.noop);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"reset","string":"VM.prototype.reset()"}},{"tags":[{"type":"resource","string":"[Instances: setTags API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/setTags} ","html":"<p>[Instances: setTags API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/setTags}\">https://cloud.google.com/compute/docs/reference/v1/instances/setTags}</a> </p>"},{"type":"param","string":"{string[]} tags - The new tags for the instance.","name":"tags","description":"<ul>\n<li>The new tags for the instance.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} fingerprint - The current tags fingerprint. An up-to-date\n    fingerprint must be provided.","name":"fingerprint","description":"<ul>\n<li>The current tags fingerprint. An up-to-date     fingerprint must be provided.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.getTags(function(err, tags, fingerprint) {\n  tags.push('new-tag');\n\n vm.setTags(tags, fingerprint, function(err, operation, apiResponse) {\n    // `operation` is an Operation object that can be used to check the\n    //  status of the request.\n  });\n});","html":"<p>vm.getTags(function(err, tags, fingerprint) {<br />  tags.push(&#39;new-tag&#39;);</p><p> vm.setTags(tags, fingerprint, function(err, operation, apiResponse) {<br />    // <code>operation</code> is an Operation object that can be used to check the<br />    //  status of the request.<br />  });<br />});</p>"}],"description":{"full":"<p>Set the instance&#39;s tags.</p>","summary":"<p>Set the instance&#39;s tags.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":301,"codeStart":325,"code":"VM.prototype.setTags = function(tags, fingerprint, callback) {\n  var body = {\n    items: tags,\n    fingerprint: fingerprint\n  };\n\n  this.makeReq_('POST', '/setTags', null, body, callback || util.noop);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"setTags","string":"VM.prototype.setTags()"}},{"tags":[{"type":"resource","string":"[Instances: start API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/start} ","html":"<p>[Instances: start API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/start}\">https://cloud.google.com/compute/docs/reference/v1/instances/start}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.start(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>vm.start(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Start the instance.</p>","summary":"<p>Start the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":334,"codeStart":351,"code":"VM.prototype.start = function(callback) {\n  this.makeReq_('POST', '/start', null, null, callback || util.noop);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"start","string":"VM.prototype.start()"}},{"tags":[{"type":"resource","string":"[Instances: stop API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/stop} ","html":"<p>[Instances: stop API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/stop}\">https://cloud.google.com/compute/docs/reference/v1/instances/stop}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"vm.stop(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>vm.stop(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Stop the instance.</p>","summary":"<p>Stop the instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":355,"codeStart":372,"code":"VM.prototype.stop = function(callback) {\n  this.makeReq_('POST', '/stop', null, null, callback || util.noop);\n};","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"stop","string":"VM.prototype.stop()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p><p>Most operations on a VM are long-running. This method handles building an<br />operation and returning it to the user&#39;s provided callback. In methods that<br />don&#39;t require an operation, we simply don&#39;t do anything with the <code>Operation</code><br />object.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":"<p>Most operations on a VM are long-running. This method handles building an<br />operation and returning it to the user&#39;s provided callback. In methods that<br />don&#39;t require an operation, we simply don&#39;t do anything with the <code>Operation</code><br />object.</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":376,"codeStart":393,"code":"VM.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/instances/' + this.name + path;\n\n  var zone = this.zone;\n\n  zone.makeReq_(method, path, query, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = zone.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};\n\nmodule.exports = VM;","ctx":{"type":"method","constructor":"VM","cons":"VM","name":"makeReq_","string":"VM.prototype.makeReq_()"}}],"compute/zone":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"compute/zone","html":"<p>compute/zone</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar gceImages = require('gce-images');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:compute/disk}","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/disk}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":28,"codeStart":32,"code":"var Disk = require('./disk.js');","ctx":{"type":"declaration","name":"Disk","value":"require('./disk.js')","string":"Disk"}},{"tags":[{"type":"type","string":"{module:compute/operation}","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/operation}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":34,"codeStart":38,"code":"var Operation = require('./operation.js');","ctx":{"type":"declaration","name":"Operation","value":"require('./operation.js')","string":"Operation"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":40,"codeStart":44,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":46,"codeStart":50,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:compute/vm}","types":["module:compute/vm"],"typesDescription":"module:<a href=\"module%3Acompute%2Fvm.html\">compute/vm</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute/vm}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":52,"codeStart":56,"code":"var VM = require('./vm.js');","ctx":{"type":"declaration","name":"VM","value":"require('./vm.js')","string":"VM"}},{"tags":[{"type":"param","string":"{module:compute} compute - Compute object this zone belongs to.","name":"compute","description":"<ul>\n<li>Compute object this zone belongs to.</li>\n</ul>\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Name of the zone.","name":"name","description":"<ul>\n<li>Name of the zone.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":58,"codeStart":63},{"tags":[{"type":"resource","string":"[Regions & Zones Overview]{@link https://cloud.google.com/compute/docs/zones}","html":"<p>[Regions &amp; Zones Overview]{@link <a href=\"https://cloud.google.com/compute/docs/zones}\">https://cloud.google.com/compute/docs/zones}</a></p>"},{"type":"resource","string":"[Zone Resource]{@link https://cloud.google.com/compute/docs/reference/v1/zones} ","html":"<p>[Zone Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zones}\">https://cloud.google.com/compute/docs/reference/v1/zones}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:compute/zone ","html":"<p>module:compute/zone </p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar zone = gce.zone('us-central1-a');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var zone = gce.zone(&#39;us-central1-a&#39;);</p>"}],"description":{"full":"<p>A Zone object allows you to interact with a Google Compute Engine zone.</p>","summary":"<p>A Zone object allows you to interact with a Google Compute Engine zone.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":63,"codeStart":82,"code":"function Zone(compute, name) {\n  this.compute = compute;\n  this.name = name;\n  this.metadata = {};\n\n  this.gceImages = gceImages(compute.authConfig);\n}","ctx":{"type":"constructor","name":"Zone","string":"Zone()"}},{"tags":[{"type":"resource","string":"[Disk Resource]{@link https://cloud.google.com/compute/docs/reference/v1/disks}","html":"<p>[Disk Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks}\">https://cloud.google.com/compute/docs/reference/v1/disks}</a></p>"},{"type":"resource","string":"[Disks: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/disks/insert} ","html":"<p>[Disks: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/insert}\">https://cloud.google.com/compute/docs/reference/v1/disks/insert}</a> </p>"},{"type":"param","string":"{string} name - Name of the disk.","name":"name","description":"<ul>\n<li>Name of the disk.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config - See a\n    [Disk resource](https://cloud.google.com/compute/docs/reference/v1/disks).","name":"config","description":"<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks\">Disk resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} config.os - Specify the name of an OS, and we will use the\n    latest version as the source image of a new boot disk. See\n    [this list of accepted OS names](https://github.com/stephenplusplus/gce-images#accepted-os-names).","name":"config.os","description":"<ul>\n<li>Specify the name of an OS, and we will use the     latest version as the source image of a new boot disk. See<br />  <a href=\"https://github.com/stephenplusplus/gce-images#accepted-os-names\">this list of accepted OS names</a>.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/disk} callback.disk - The created Disk object.","name":"callback.disk","description":"<ul>\n<li>The created Disk object.</li>\n</ul>\n","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var config = {\n  os: 'ubuntu',\n  sizeGb: 10\n};\n\nzone.createDisk('name', config, function(err, disk, operation, apiResponse) {\n  // `disk` is a Disk object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});","html":"<p>var config = {<br />  os: &#39;ubuntu&#39;,<br />  sizeGb: 10<br />};</p><p>zone.createDisk(&#39;name&#39;, config, function(err, disk, operation, apiResponse) {<br />  // <code>disk</code> is a Disk object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"}],"description":{"full":"<p>Create a persistent disk in this zone.</p>","summary":"<p>Create a persistent disk in this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":90,"codeStart":122,"code":"Zone.prototype.createDisk = function(name, config, callback) {\n  var self = this;\n\n  var query = {};\n  var body = extend({}, config, {\n    name: name\n  });\n\n  if (body.image) {\n    query.sourceImage = body.image;\n    delete body.image;\n  }\n\n  if (body.os) {\n    this.gceImages.getLatest(body.os, function(err, image) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      delete body.os;\n      body.sourceImage = image.selfLink;\n\n      self.createDisk(name, body, callback);\n    });\n    return;\n  }\n\n  this.makeReq_('POST', '/disks', query, body, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var disk = self.disk(name);\n\n    var operation = self.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, disk, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"createDisk","string":"Zone.prototype.createDisk()"}},{"tags":[{"type":"resource","string":"[Instance Resource]{@link https://cloud.google.com/compute/docs/reference/v1/instances}","html":"<p>[Instance Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances}\">https://cloud.google.com/compute/docs/reference/v1/instances}</a></p>"},{"type":"resource","string":"[Instances: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/insert} ","html":"<p>[Instances: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/insert}\">https://cloud.google.com/compute/docs/reference/v1/instances/insert}</a> </p>"},{"type":"param","string":"{string} name - Name of the instance.","name":"name","description":"<ul>\n<li>Name of the instance.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config - See an\n    [Instance resource](https://cloud.google.com/compute/docs/reference/v1/instances).","name":"config","description":"<ul>\n<li>See an     <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances\">Instance resource</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object[]=} config.disks - See a\n    [Disk resource](https://cloud.google.com/compute/docs/reference/v1/disks).","name":"config.disks","description":"<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks\">Disk resource</a>.</li>\n</ul>\n","types":["Array.<object>"],"typesDescription":"<code>Array</code>.&lt;<code>object</code>&gt;|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} config.http - Allow HTTP traffic. Default: `false`","name":"config.http","description":"<ul>\n<li>Allow HTTP traffic. Default: <code>false</code></li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} config.https - Allow HTTPS traffic. Default: `false`","name":"config.https","description":"<ul>\n<li>Allow HTTPS traffic. Default: <code>false</code></li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object[]=} config.networkInterfaces - An array of configurations for\n    this interface. This specifies how this interface should interact with\n    other network services, such as connecting to the internet. Default:\n    `[ { network: 'global/networks/default' } ]`","name":"config.networkInterfaces","description":"<ul>\n<li>An array of configurations for     this interface. This specifies how this interface should interact with<br />  other network services, such as connecting to the internet. Default:<br />  <code>[ { network: &#39;global/networks/default&#39; } ]</code></li>\n</ul>\n","types":["Array.<object>"],"typesDescription":"<code>Array</code>.&lt;<code>object</code>&gt;|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} config.machineType - The machine type resource to use.\n    Provide only the name of the machine, e.g. `n1-standard-16`. Refer to\n    [Available Machine Types](https://goo.gl/jrHEbo). Default:\n    `n1-standard-1`","name":"config.machineType","description":"<ul>\n<li>The machine type resource to use.     Provide only the name of the machine, e.g. <code>n1-standard-16</code>. Refer to<br />  <a href=\"https://goo.gl/jrHEbo\">Available Machine Types</a>. Default:<br />  <code>n1-standard-1</code></li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} config.os - Specify the name of an OS, and we will use the\n    latest version as the source image of a new boot disk. See\n    [this list of accepted OS names](https://github.com/stephenplusplus/gce-images#accepted-os-names).","name":"config.os","description":"<ul>\n<li>Specify the name of an OS, and we will use the     latest version as the source image of a new boot disk. See<br />  <a href=\"https://github.com/stephenplusplus/gce-images#accepted-os-names\">this list of accepted OS names</a>.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]=} config.tags - An array of tags.","name":"config.tags","description":"<ul>\n<li>An array of tags.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/vm} callback.vm - The created VM object.","name":"callback.vm","description":"<ul>\n<li>The created VM object.</li>\n</ul>\n","types":["module:compute/vm"],"typesDescription":"module:<a href=\"module%3Acompute%2Fvm.html\">compute/vm</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.","name":"callback.operation","description":"<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Create a new instance using the latest Debian version as the source image\n// for a new boot disk.\n//-\nvar config = {\n  os: 'debian',\n  http: true,\n  tags: ['debian-server']\n};\n\n//-\n// The above object will auto-expand behind the scenes to something like the\n// following. The Debian version may be different when you run the command.\n//-\nvar config = {\n  machineType: 'n1-standard-1',\n  disks: [\n    {\n      boot: true,\n      initializeParams: {\n        sourceImage:\n          'https://www.googleapis.com/compute/v1/projects' +\n          '/debian-cloud/global/images/debian-7-wheezy-v20150710'\n      }\n    }\n  ],\n  networkInterfaces: [\n    {\n      network: 'global/networks/default'\n    }\n  ],\n  tags: [\n    {\n      items: [\n        'debian-server',\n        'http-server'\n      ]\n    }\n  ]\n};\n\nfunction callback(err, vm, operation, apiResponse) {\n  // `vm` is a VM object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\nzone.createVM('new-vm-name', config, callback);","html":"<p>//-<br />// Create a new instance using the latest Debian version as the source image<br />// for a new boot disk.<br />//-<br />var config = {<br />  os: &#39;debian&#39;,<br />  http: true,<br />  tags: [&#39;debian-server&#39;]<br />};</p><p>//-<br />// The above object will auto-expand behind the scenes to something like the<br />// following. The Debian version may be different when you run the command.<br />//-<br />var config = {<br />  machineType: &#39;n1-standard-1&#39;,<br />  disks: [<br />    {<br />      boot: true,<br />      initializeParams: {<br />        sourceImage:<br />          &#39;<a href=\"https://www.googleapis.com/compute/v1/projects\">https://www.googleapis.com/compute/v1/projects</a>&#39; +<br />          &#39;/debian-cloud/global/images/debian-7-wheezy-v20150710&#39;<br />      }<br />    }<br />  ],<br />  networkInterfaces: [<br />    {<br />      network: &#39;global/networks/default&#39;<br />    }<br />  ],<br />  tags: [<br />    {<br />      items: [<br />        &#39;debian-server&#39;,<br />        &#39;http-server&#39;<br />      ]<br />    }<br />  ]<br />};</p><p>function callback(err, vm, operation, apiResponse) {<br />  // <code>vm</code> is a VM object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>zone.createVM(&#39;new-vm-name&#39;, config, callback);</p>"}],"description":{"full":"<p>Create a virtual machine in this zone.</p>","summary":"<p>Create a virtual machine in this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":165,"codeStart":248,"code":"Zone.prototype.createVM = function(name, config, callback) {\n  var self = this;\n\n  var body = extend({\n    name: name,\n    machineType: 'n1-standard-1',\n    networkInterfaces: [\n      {\n        network: 'global/networks/default'\n      }\n    ]\n  }, config);\n\n  if (body.machineType.indexOf('/') === -1) {\n    // The specified machineType is only a partial name, e.g. 'n1-standard-1'.\n    body.machineType = format('zones/{zoneName}/machineTypes/{machineType}', {\n      zoneName: this.name,\n      machineType: body.machineType\n    });\n  }\n\n  if (is.array(body.tags)) {\n    body.tags = {\n      items: body.tags\n    };\n  }\n\n  if (body.http || body.https) {\n    body.networkInterfaces[0].accessConfigs = [\n      {\n        type: 'ONE_TO_ONE_NAT'\n      }\n    ];\n\n    body.tags = body.tags || {};\n    body.tags.items = body.tags.items || [];\n\n    if (body.http) {\n      delete body.http;\n      if (body.tags.items.indexOf('http-server') === -1) {\n        body.tags.items.push('http-server');\n      }\n    }\n\n    if (body.https) {\n      delete body.https;\n      if (body.tags.items.indexOf('https-server') === -1) {\n        body.tags.items.push('https-server');\n      }\n    }\n  }\n\n  if (body.os) {\n    this.gceImages.getLatest(body.os, function(err, image) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      delete body.os;\n      body.disks = body.disks || [];\n      body.disks.push({\n        boot: true,\n        initializeParams: {\n          sourceImage: image.selfLink\n        }\n      });\n\n      self.createVM(name, body, callback);\n    });\n    return;\n  }\n\n  this.makeReq_('POST', '/instances', null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var vm = self.vm(name);\n\n    var operation = self.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, vm, operation, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"createVM","string":"Zone.prototype.createVM()"}},{"tags":[{"type":"resource","string":"[Disks Overview]{@link https://cloud.google.com/compute/docs/disks} ","html":"<p>[Disks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks}\">https://cloud.google.com/compute/docs/disks}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing disk.","name":"name","description":"<ul>\n<li>Name of the existing disk.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/disk}\n","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/disk}</p>"},{"type":"example","string":"var disk = zone.disk('disk1');","html":"<p>var disk = zone.disk(&#39;disk1&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine disk in this zone.</p>","summary":"<p>Get a reference to a Google Compute Engine disk in this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":336,"codeStart":347,"code":"Zone.prototype.disk = function(name) {\n  return new Disk(this, name);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"disk","string":"Zone.prototype.disk()"}},{"tags":[{"type":"resource","string":"[Disks Overview]{@link https://cloud.google.com/compute/docs/disks}","html":"<p>[Disks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/disks}\">https://cloud.google.com/compute/docs/disks}</a></p>"},{"type":"resource","string":"[Disks: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/disks/list} ","html":"<p>[Disks: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/disks/list}\">https://cloud.google.com/compute/docs/reference/v1/disks/list}</a> </p>"},{"type":"param","string":"{object=} options - Disk search options.","name":"options","description":"<ul>\n<li>Disk search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of disks to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of disks to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/disk} callback.disks - Disk objects from this zone.","name":"callback.disks","description":"<ul>\n<li>Disk objects from this zone.</li>\n</ul>\n","types":["module:compute/disk"],"typesDescription":"module:<a href=\"module%3Acompute%2Fdisk.html\">compute/disk</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"zone.getDisks(function(err, disks) {\n  // `disks` is an array of `Disk` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, disks, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    zone.getDisks(nextQuery, callback);\n  }\n}\n\nzone.getDisks({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the disks from your project as a readable object stream.\n//-\nzone.getDisks()\n  .on('error', console.error)\n  .on('data', function(disk) {\n    // `disk` is a `Disk` object.\n  })\n  .on('end', function() {\n    // All disks retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nzone.getDisks()\n  .on('data', function(disk) {\n    this.end();\n  });","html":"<p>zone.getDisks(function(err, disks) {<br />  // <code>disks</code> is an array of <code>Disk</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, disks, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    zone.getDisks(nextQuery, callback);<br />  }<br />}</p><p>zone.getDisks({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the disks from your project as a readable object stream.<br />//-<br />zone.getDisks()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(disk) {<br />    // <code>disk</code> is a <code>Disk</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All disks retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />zone.getDisks()<br />  .on(&#39;data&#39;, function(disk) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of disks in this zone.</p>","summary":"<p>Get a list of disks in this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":351,"codeStart":418,"code":"Zone.prototype.getDisks = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/disks', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var disks = (resp.items || []).map(function(disk) {\n      var diskInstance = self.disk(disk.name);\n      diskInstance.metadata = disk;\n      return diskInstance;\n    });\n\n    callback(null, disks, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getDisks","string":"Zone.prototype.getDisks()"}},{"tags":[{"type":"resource","string":"[Zone Resource]{@link https://cloud.google.com/compute/docs/reference/v1/zones}","html":"<p>[Zone Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zones}\">https://cloud.google.com/compute/docs/reference/v1/zones}</a></p>"},{"type":"resource","string":"[Zones: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/zones/get} ","html":"<p>[Zones: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zones/get}\">https://cloud.google.com/compute/docs/reference/v1/zones/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The zone's metadata.","name":"callback.metadata","description":"<ul>\n<li>The zone&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"zone.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>zone.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the zone&#39;s metadata.</p>","summary":"<p>Get the zone&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":452,"codeStart":466,"code":"Zone.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getMetadata","string":"Zone.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Zone Operation Overview]{@link https://cloud.google.com/compute/docs/reference/v1/zoneOperations}","html":"<p>[Zone Operation Overview]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations}\">https://cloud.google.com/compute/docs/reference/v1/zoneOperations}</a></p>"},{"type":"resource","string":"[ZoneOperations: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/zoneOperations/list} ","html":"<p>[ZoneOperations: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations/list}\">https://cloud.google.com/compute/docs/reference/v1/zoneOperations/list}</a> </p>"},{"type":"param","string":"{object=} options - Operation search options.","name":"options","description":"<ul>\n<li>Operation search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Maximum number of operations to return.","name":"options.maxResults","description":"<ul>\n<li>Maximum number of operations to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/operation} callback.operations - Operation objects\n    from this zone.","name":"callback.operations","description":"<ul>\n<li>Operation objects     from this zone.</li>\n</ul>\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"zone.getOperations(function(err, operations) {\n  // `operations` is an array of `Operation` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, operations, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    zone.getOperations(nextQuery, callback);\n  }\n}\n\nzone.getOperations({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the operations from your project as a readable object stream.\n//-\nzone.getOperations()\n  .on('error', console.error)\n  .on('data', function(operation) {\n    // `operation` is an `Operation` object.\n  })\n  .on('end', function() {\n    // All operations retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nzone.getOperations()\n  .on('data', function(operation) {\n    this.end();\n  });","html":"<p>zone.getOperations(function(err, operations) {<br />  // <code>operations</code> is an array of <code>Operation</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, operations, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    zone.getOperations(nextQuery, callback);<br />  }<br />}</p><p>zone.getOperations({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the operations from your project as a readable object stream.<br />//-<br />zone.getOperations()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(operation) {<br />    // <code>operation</code> is an <code>Operation</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All operations retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />zone.getOperations()<br />  .on(&#39;data&#39;, function(operation) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of operations for this zone.</p>","summary":"<p>Get a list of operations for this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":483,"codeStart":551,"code":"Zone.prototype.getOperations = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/operations', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var operations = (resp.items || []).map(function(operation) {\n      var operationInstance = self.operation(operation.name);\n      operationInstance.metadata = operation;\n      return operationInstance;\n    });\n\n    callback(null, operations, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getOperations","string":"Zone.prototype.getOperations()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network}","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a></p>"},{"type":"resource","string":"[Instances: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/instances/list} ","html":"<p>[Instances: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/instances/list}\">https://cloud.google.com/compute/docs/reference/v1/instances/list}</a> </p>"},{"type":"param","string":"{object=} options - Instance search options.","name":"options","description":"<ul>\n<li>Instance search options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.filter - Search filter in the format of\n    `{name} {comparison} {filterString}`.\n    - **`name`**: the name of the field to compare\n    - **`comparison`**: the comparison operator, `eq` (equal) or `ne`\n      (not equal)\n    - **`filterString`**: the string to filter to. For string fields, this\n      can be a regular expression.","name":"options.filter","description":"<ul>\n<li>Search filter in the format of     <code>{name} {comparison} {filterString}</code>.<ul>\n<li><strong><code>name</code></strong>: the name of the field to compare</li>\n<li><strong><code>comparison</code></strong>: the comparison operator, <code>eq</code> (equal) or <code>ne</code><br />(not equal)</li>\n<li><strong><code>filterString</code></strong>: the string to filter to. For string fields, this<br />can be a regular expression.</li>\n</ul>\n</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"options.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:compute/vm} callback.vms - VM objects from this zone.","name":"callback.vms","description":"<ul>\n<li>VM objects from this zone.</li>\n</ul>\n","types":["module:compute/vm"],"typesDescription":"module:<a href=\"module%3Acompute%2Fvm.html\">compute/vm</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"zone.getVMs(function(err, vms) {\n  // `vms` is an array of `VM` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, vms, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    zone.getVMs(nextQuery, callback);\n  }\n}\n\nzone.getVMs({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the VM instances from your project as a readable object stream.\n//-\nzone.getVMs()\n  .on('error', console.error)\n  .on('data', function(vm) {\n    // `vm` is a `VM` object.\n  })\n  .on('end', function() {\n    // All instances retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nzone.getVMs()\n  .on('data', function(vm) {\n    this.end();\n  });","html":"<p>zone.getVMs(function(err, vms) {<br />  // <code>vms</code> is an array of <code>VM</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, vms, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    zone.getVMs(nextQuery, callback);<br />  }<br />}</p><p>zone.getVMs({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the VM instances from your project as a readable object stream.<br />//-<br />zone.getVMs()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(vm) {<br />    // <code>vm</code> is a <code>VM</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All instances retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />zone.getVMs()<br />  .on(&#39;data&#39;, function(vm) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of VM instances in this zone.</p>","summary":"<p>Get a list of VM instances in this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":585,"codeStart":651,"code":"Zone.prototype.getVMs = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  this.makeReq_('GET', '/instances', options, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, options, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var vms = (resp.items || []).map(function(instance) {\n      var vmInstance = self.vm(instance.name);\n      vmInstance.metadata = instance;\n      return vmInstance;\n    });\n\n    callback(null, vms, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getVMs","string":"Zone.prototype.getVMs()"}},{"tags":[{"type":"resource","string":"[Zone Operation Overview]{@link https://cloud.google.com/compute/docs/reference/v1/zoneOperations} ","html":"<p>[Zone Operation Overview]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations}\">https://cloud.google.com/compute/docs/reference/v1/zoneOperations}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing operation.","name":"name","description":"<ul>\n<li>Name of the existing operation.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/operation}\n","types":["module:compute/operation"],"typesDescription":"module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/operation}</p>"},{"type":"example","string":"var operation = zone.operation('operation-name');","html":"<p>var operation = zone.operation(&#39;operation-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine zone operation.</p>","summary":"<p>Get a reference to a Google Compute Engine zone operation.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":685,"codeStart":696,"code":"Zone.prototype.operation = function(name) {\n  return new Operation(this, name);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"operation","string":"Zone.prototype.operation()"}},{"tags":[{"type":"resource","string":"[Instances and Networks]{@link https://cloud.google.com/compute/docs/instances-and-network} ","html":"<p>[Instances and Networks]{@link <a href=\"https://cloud.google.com/compute/docs/instances-and-network}\">https://cloud.google.com/compute/docs/instances-and-network}</a> </p>"},{"type":"param","string":"{string} name - Name of the existing virtual machine.","name":"name","description":"<ul>\n<li>Name of the existing virtual machine.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:compute/vm}\n","types":["module:compute/vm"],"typesDescription":"module:<a href=\"module%3Acompute%2Fvm.html\">compute/vm</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute/vm}</p>"},{"type":"example","string":"var vm = zone.vm('vm-name');","html":"<p>var vm = zone.vm(&#39;vm-name&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Compute Engine virtual machine instance.</p>","summary":"<p>Get a reference to a Google Compute Engine virtual machine instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":700,"codeStart":711,"code":"Zone.prototype.vm = function(name) {\n  return new VM(this, name);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"vm","string":"Zone.prototype.vm()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":715,"codeStart":727,"code":"Zone.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/zones/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"makeReq_","string":"Zone.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":732,"codeStart":737,"code":"streamRouter.extend(Zone, ['getDisks', 'getOperations', 'getVMs']);\n\nmodule.exports = Zone;","ctx":false}],"datastore/dataset":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"datastore/dataset","html":"<p>datastore/dataset</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar is = require('is');\nvar nodeutil = require('util');","ctx":false},{"tags":[{"type":"type","string":"{module:datastore/entity}","types":["module:datastore/entity"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fentity.html\">datastore/entity</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/entity}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":31,"code":"var entity = require('./entity.js');","ctx":{"type":"declaration","name":"entity","value":"require('./entity.js')","string":"entity"}},{"tags":[{"type":"type","string":"{module:datastore/query}","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/query}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":33,"codeStart":37,"code":"var Query = require('./query.js');","ctx":{"type":"declaration","name":"Query","value":"require('./query.js')","string":"Query"}},{"tags":[{"type":"type","string":"{module:datastore/transaction}","types":["module:datastore/transaction"],"typesDescription":"module:<a href=\"module%3Adatastore%2Ftransaction.html\">datastore/transaction</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/transaction}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":39,"codeStart":43,"code":"var Transaction = require('./transaction.js');","ctx":{"type":"declaration","name":"Transaction","value":"require('./transaction.js')","string":"Transaction"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":45,"codeStart":49,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:datastore/request}","types":["module:datastore/request"],"typesDescription":"module:<a href=\"module%3Adatastore%2Frequest.html\">datastore/request</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/request}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":51,"codeStart":55,"code":"var DatastoreRequest = require('./request.js');","ctx":{"type":"declaration","name":"DatastoreRequest","value":"require('./request.js')","string":"DatastoreRequest"}},{"tags":[{"type":"const","string":"{array} SCOPES","html":"<p>{array} SCOPES</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Scopes for Google Datastore access.</p>","summary":"<p>Scopes for Google Datastore access.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":57,"codeStart":62,"code":"var SCOPES = [\n  'https://www.googleapis.com/auth/datastore',\n  'https://www.googleapis.com/auth/userinfo.email'\n];","ctx":{"type":"declaration","name":"SCOPES","value":"[","string":"SCOPES"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:datastore/dataset","html":"<p>module:datastore/dataset</p>"},{"type":"mixes","string":"module:datastore/request ","html":"<p>module:datastore/request </p>"},{"type":"param","string":"{object=} options - [Configuration object](#/docs/?method=gcloud).","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.apiEndpoint - Override the default API endpoint used\n    to reach Datastore. This is useful for connecting to your local Datastore\n    server (usually \"http://localhost:8080\").","name":"options.apiEndpoint","description":"<ul>\n<li>Override the default API endpoint used     to reach Datastore. This is useful for connecting to your local Datastore<br />  server (usually &quot;<a href=\"http://localhost:8080\">http://localhost:8080</a>&quot;).</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.namespace - Namespace to isolate transactions to.\n","name":"options.namespace","description":"<ul>\n<li>Namespace to isolate transactions to. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var datastore = gcloud.datastore;\n\nvar dataset = datastore.dataset({\n  projectId: 'my-project',\n  keyFilename: '/path/to/keyfile.json'\n});\n\n//-\n// Connect to your local Datastore server.\n//-\nvar dataset = datastore.dataset({\n  projectId: 'my-project',\n  apiEndpoint: 'http://localhost:8080'\n});\n\n//-\n// The `process.env.DATASTORE_HOST` environment variable is also recognized.\n// If set, you may omit the `apiEndpoint` option.\n//-","html":"<p>var datastore = gcloud.datastore;</p><p>var dataset = datastore.dataset({<br />  projectId: &#39;my-project&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p><p>//-<br />// Connect to your local Datastore server.<br />//-<br />var dataset = datastore.dataset({<br />  projectId: &#39;my-project&#39;,<br />  apiEndpoint: &#39;<a href=\"http://localhost:8080\">http://localhost:8080</a>&#39;<br />});</p><p>//-<br />// The <code>process.env.DATASTORE_HOST</code> environment variable is also recognized.<br />// If set, you may omit the <code>apiEndpoint</code> option.<br />//-</p>"}],"description":{"full":"<p>Interact with a dataset from the<br /><a href=\"https://developers.google.com/datastore/\">Google Cloud Datastore</a>.</p>","summary":"<p>Interact with a dataset from the<br /><a href=\"https://developers.google.com/datastore/\">Google Cloud Datastore</a>.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":67,"codeStart":102,"code":"function Dataset(options) {\n  if (!(this instanceof Dataset)) {\n    return new Dataset(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory({\n    customEndpoint: typeof options.apiEndpoint !== 'undefined',\n    credentials: options.credentials,\n    keyFile: options.keyFilename,\n    scopes: SCOPES,\n    email: options.email\n  });\n\n  this.apiEndpoint = Dataset.determineApiEndpoint_(options);\n  this.namespace = options.namespace;\n  this.projectId = options.projectId;\n}\n\nnodeutil.inherits(Dataset, DatastoreRequest);","ctx":{"type":"constructor","name":"Dataset","string":"Dataset()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.apiEndpoint - Custom API endpoint.","name":"options.apiEndpoint","description":"<ul>\n<li>Custom API endpoint.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Determine the appropriate endpoint to use for API requests. If not explicitly<br />defined, check for the &quot;DATASTORE_HOST&quot; environment variable, used to connect<br />to a local Datastore server.</p>","summary":"<p>Determine the appropriate endpoint to use for API requests. If not explicitly<br />defined, check for the &quot;DATASTORE_HOST&quot; environment variable, used to connect<br />to a local Datastore server.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":128,"codeStart":138,"code":"Dataset.determineApiEndpoint_ = function(options) {\n  var apiEndpoint = 'https://www.googleapis.com';\n  var trailingSlashes = new RegExp('/*$');\n\n  if (options.apiEndpoint) {\n    apiEndpoint = options.apiEndpoint;\n  } else if (process.env.DATASTORE_HOST) {\n    apiEndpoint = process.env.DATASTORE_HOST;\n  }\n\n  if (apiEndpoint.indexOf('http') !== 0) {\n    apiEndpoint = 'http://' + apiEndpoint;\n  }\n\n  return apiEndpoint.replace(trailingSlashes, '');\n};","ctx":{"type":"method","receiver":"Dataset","name":"determineApiEndpoint_","string":"Dataset.determineApiEndpoint_()"}},{"tags":[{"type":"param","string":"{...*=} options - Key path. To specify or override a namespace,\n    you must use an object here to explicitly state it.","name":"options","description":"<ul>\n<li>Key path. To specify or override a namespace,     you must use an object here to explicitly state it.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":true,"nullable":false,"nonNullable":false,"variable":true},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{...*=} options.path - Key path.","name":"options.path","description":"<ul>\n<li>Key path.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":true,"nullable":false,"nonNullable":false,"variable":true},{"type":"param","string":"{string=} options.namespace - Optional namespace.","name":"options.namespace","description":"<ul>\n<li>Optional namespace.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{Key} A newly created Key from the options given.\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>A newly created Key from the options given. </p>"},{"type":"example","string":"var key;\n\n// Create an incomplete key from the dataset namespace, kind='Company'\nkey = dataset.key('Company');\n\n// A complete key from the dataset namespace, kind='Company', id=123\nkey = dataset.key(['Company', 123]);\n\n// A complete key from the dataset namespace, kind='Company', name='Google'\n// Note: `id` is used for numeric identifiers and `name` is used otherwise\nkey = dataset.key(['Company', 'Google']);\n\n// A complete key from a provided namespace and path.\nkey = dataset.key({\n  namespace: 'My-NS',\n  path: ['Company', 123]\n});","html":"<p>var key;</p><p>// Create an incomplete key from the dataset namespace, kind=&#39;Company&#39;<br />key = dataset.key(&#39;Company&#39;);</p><p>// A complete key from the dataset namespace, kind=&#39;Company&#39;, id=123<br />key = dataset.key([&#39;Company&#39;, 123]);</p><p>// A complete key from the dataset namespace, kind=&#39;Company&#39;, name=&#39;Google&#39;<br />// Note: <code>id</code> is used for numeric identifiers and <code>name</code> is used otherwise<br />key = dataset.key([&#39;Company&#39;, &#39;Google&#39;]);</p><p>// A complete key from a provided namespace and path.<br />key = dataset.key({<br />  namespace: &#39;My-NS&#39;,<br />  path: [&#39;Company&#39;, 123]<br />});</p>"}],"description":{"full":"<p>Helper to create a Key object, scoped to the dataset&#39;s namespace by default.</p><p>You may also specify a configuration object to define a namespace and path.</p>","summary":"<p>Helper to create a Key object, scoped to the dataset&#39;s namespace by default.</p>","body":"<p>You may also specify a configuration object to define a namespace and path.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":155,"codeStart":186,"code":"Dataset.prototype.key = function(options) {\n  options = is.object(options) ? options : {\n    namespace: this.namespace,\n    path: arrify(options)\n  };\n\n  return new entity.Key(options);\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"key","string":"Dataset.prototype.key()"}},{"tags":[{"type":"resource","string":"[Datastore Queries]{@link http://goo.gl/Cag0r6} ","html":"<p>[Datastore Queries]{@link <a href=\"http://goo.gl/Cag0r6}\">http://goo.gl/Cag0r6}</a> </p>"},{"type":"borrows","string":"{module:datastore/query} as createQuery","otherMemberName":"{module:datastore/query}","thisMemberName":"createQuery","html":"<p>{module:datastore/query} as createQuery</p>"},{"type":"see","string":"{module:datastore/query}\n","local":"{module:datastore/query} ","html":"<p>{module:datastore/query}</p>"},{"type":"param","string":"{string=} namespace - Optional namespace.","name":"namespace","description":"<ul>\n<li>Optional namespace.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} kind - Kind to query.","name":"kind","description":"<ul>\n<li>Kind to query.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"}],"description":{"full":"<p>Create a query from the current dataset to query the specified kind, scoped<br />to the namespace provided at the initialization of the dataset.</p>","summary":"<p>Create a query from the current dataset to query the specified kind, scoped<br />to the namespace provided at the initialization of the dataset.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":195,"codeStart":208,"code":"Dataset.prototype.createQuery = function(namespace, kind) {\n  if (arguments.length === 1) {\n    kind = arrify(namespace);\n    namespace = this.namespace;\n  }\n\n  return new Query(namespace, arrify(kind));\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"createQuery","string":"Dataset.prototype.createQuery()"}},{"tags":[{"type":"resource","string":"[Datasets: beginTransaction API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/beginTransaction} ","html":"<p>[Datasets: beginTransaction API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/beginTransaction}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/beginTransaction}</a> </p>"},{"type":"borrows","string":"{module:datastore/transaction#begin} as runInTransaction\n","otherMemberName":"{module:datastore/transaction#begin}","thisMemberName":"runInTransaction ","html":"<p>{module:datastore/transaction#begin} as runInTransaction</p>"},{"type":"param","string":"{function} fn - The function to run in the context of a transaction.","name":"fn","description":"<ul>\n<li>The function to run in the context of a transaction.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:datastore/transaction} fn.transaction - The Transaction.","name":"fn.transaction","description":"<ul>\n<li>The Transaction.</li>\n</ul>\n","types":["module:datastore/transaction"],"typesDescription":"module:<a href=\"module%3Adatastore%2Ftransaction.html\">datastore/transaction</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} fn.done - Function used to commit changes.","name":"fn.done","description":"<ul>\n<li>Function used to commit changes.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request\n\n","name":"callback.err","description":"<ul>\n<li>An error returned while making this request </li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"dataset.runInTransaction(function(transaction, done) {\n  // From the `transaction` object, execute dataset methods as usual.\n  // Call `done` when you're ready to commit all of the changes.\n  transaction.get(dataset.key(['Company', 123]), function(err, entity) {\n    if (err) {\n      transaction.rollback(done);\n      return;\n    }\n\n    done();\n  });\n}, function(err) {});","html":"<p>dataset.runInTransaction(function(transaction, done) {<br />  // From the <code>transaction</code> object, execute dataset methods as usual.<br />  // Call <code>done</code> when you&#39;re ready to commit all of the changes.<br />  transaction.get(dataset.key([&#39;Company&#39;, 123]), function(err, entity) {<br />    if (err) {<br />      transaction.rollback(done);<br />      return;<br />    }</p><pre><code>done();\n</code></pre><p>  });<br />}, function(err) {});</p>"}],"description":{"full":"<p>Run a function in the context of a new transaction. Transactions allow you to<br />perform multiple operations, committing your changes atomically. When you are<br />finished making your changes within the transaction, run the done() function<br />provided in the callback function to commit your changes. See an example<br />below for more information.</p>","summary":"<p>Run a function in the context of a new transaction. Transactions allow you to<br />perform multiple operations, committing your changes atomically. When you are<br />finished making your changes within the transaction, run the done() function<br />provided in the callback function to commit your changes. See an example<br />below for more information.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":217,"codeStart":249,"code":"Dataset.prototype.runInTransaction = function(fn, callback) {\n  var newTransaction = this.createTransaction_();\n\n  newTransaction.begin_(function(err) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    fn(newTransaction, newTransaction.commit_.bind(newTransaction, callback));\n  });\n};","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"runInTransaction","string":"Dataset.prototype.runInTransaction()"}},{"tags":[{"type":"return","string":"{module:datastore/transaction}","types":["module:datastore/transaction"],"typesDescription":"module:<a href=\"module%3Adatastore%2Ftransaction.html\">datastore/transaction</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/transaction}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Create a new Transaction object using the existing connection and dataset.</p>","summary":"<p>Create a new Transaction object using the existing connection and dataset.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":262,"codeStart":268,"code":"Dataset.prototype.createTransaction_ = function() {\n  return new Transaction(this, this.projectId);\n};\n\nmodule.exports = Dataset;","ctx":{"type":"method","constructor":"Dataset","cons":"Dataset","name":"createTransaction_","string":"Dataset.prototype.createTransaction_()"}}],"datastore/entity":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":16},{"tags":[{"type":"private","string":"","visibility":"private","html":""},{"type":"module","string":"datastore/entity","html":"<p>datastore/entity</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":17,"codeStart":22,"code":"'use strict';","ctx":false},{"tags":[{"type":"const","string":"{object} Map for query operation -> operation protocol value.","html":"<p>{object} Map for query operation -&gt; operation protocol value.</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":24,"codeStart":25,"code":"var OP_TO_OPERATOR = {\n  '=':  'EQUAL',\n  '>':  'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<':  'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  HAS_ANCESTOR: 'HAS_ANCESTOR'\n};","ctx":{"type":"declaration","name":"OP_TO_OPERATOR","value":"{","string":"OP_TO_OPERATOR"}},{"tags":[{"type":"const","string":"{object} Conversion map for query sign -> order protocol value.","html":"<p>{object} Conversion map for query sign -&gt; order protocol value.</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":34,"codeStart":35,"code":"var SIGN_TO_ORDER = {\n  '-': 'DESCENDING',\n  '+': 'ASCENDING'\n};","ctx":{"type":"declaration","name":"SIGN_TO_ORDER","value":"{","string":"SIGN_TO_ORDER"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} - Configuration object.","name":"-","description":"<p>Configuration object.</p>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{...*} options.path - Key path.","name":"options.path","description":"<ul>\n<li>Key path.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":true},{"type":"param","string":"{string=} options.namespace - Optional namespace.\n","name":"options.namespace","description":"<ul>\n<li>Optional namespace. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var key = new Key({\n  namespace: 'ns',\n  path: ['Company', 123]\n});","html":"<p>var key = new Key({<br />  namespace: &#39;ns&#39;,<br />  path: [&#39;Company&#39;, 123]<br />});</p>"}],"description":{"full":"<p>Build a Datastore Key object.</p>","summary":"<p>Build a Datastore Key object.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":40,"codeStart":54,"code":"function Key(options) {\n  Object.defineProperties(this, {\n    namespace: {\n      enumerable: true,\n      value: options.namespace\n    },\n    path: {\n      enumerable: true,\n      value: options.path,\n      writable: true\n    }\n  });\n}\n\nmodule.exports.Key = Key;","ctx":{"type":"constructor","name":"Key","string":"Key()"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"param","string":"{number} val - The integer value.\n","name":"val","description":"<ul>\n<li>The integer value. </li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var anInt = new Int(7);","html":"<p>var anInt = new Int(7);</p>"}],"description":{"full":"<p>Build a Datastore Int object.</p>","summary":"<p>Build a Datastore Int object.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":70,"codeStart":79,"code":"function Int(val) {\n  this.val_ = val;\n}","ctx":{"type":"constructor","name":"Int","string":"Int()"}},{"tags":[{"type":"return","string":"{number}","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{number}</p>"}],"description":{"full":"<p>Retrieve the Integer value.</p>","summary":"<p>Retrieve the Integer value.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":83,"codeStart":88,"code":"Int.prototype.get = function() {\n  return this.val_;\n};\n\nmodule.exports.Int = Int;","ctx":{"type":"method","constructor":"Int","cons":"Int","name":"get","string":"Int.prototype.get()"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"param","string":"{number} val - The double value.\n","name":"val","description":"<ul>\n<li>The double value. </li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var aDouble = new Double(7.3);","html":"<p>var aDouble = new Double(7.3);</p>"}],"description":{"full":"<p>Build a Datastore Double object.</p>","summary":"<p>Build a Datastore Double object.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":94,"codeStart":103,"code":"function Double(val) {\n  this.val_ = val;\n}","ctx":{"type":"constructor","name":"Double","string":"Double()"}},{"tags":[{"type":"return","string":"{number}","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{number}</p>"}],"description":{"full":"<p>Retrieve the Double value.</p>","summary":"<p>Retrieve the Double value.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":107,"codeStart":112,"code":"Double.prototype.get = function() {\n  return this.val_;\n};\n\nmodule.exports.Double = Double;","ctx":{"type":"method","constructor":"Double","cons":"Double","name":"get","string":"Double.prototype.get()"}},{"tags":[{"type":"todo","string":"Use registered metadata if provided. ","html":"<p>Use registered metadata if provided. </p>"},{"type":"param","string":"{object} proto - The protocol entity object to convert.","name":"proto","description":"<ul>\n<li>The protocol entity object to convert.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"var entity = entityFromEntityProto({\n  property: [\n    {\n      name: {\n        stringValue: 'Burcu Dogan'\n      }\n    }\n  ]\n});\n\n// entity:\n// {\n//   name: 'Burcu Dogan'\n// }","html":"<p>var entity = entityFromEntityProto({<br />  property: [<br />    {<br />      name: {<br />        stringValue: &#39;Burcu Dogan&#39;<br />      }<br />    }<br />  ]<br />});</p><p>// entity:<br />// {<br />//   name: &#39;Burcu Dogan&#39;<br />// }</p>"}],"description":{"full":"<p>Convert any entity protocol to a plain object.</p>","summary":"<p>Convert any entity protocol to a plain object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":118,"codeStart":142,"code":"function entityFromEntityProto(proto) {\n  var properties = proto.property || [];\n  return Object.keys(properties).reduce(function(acc, key) {\n    var property = properties[key];\n    acc[property.name] = propertyToValue(property.value);\n    return acc;\n  }, {});\n}\n\nmodule.exports.entityFromEntityProto = entityFromEntityProto;","ctx":{"type":"function","name":"entityFromEntityProto","string":"entityFromEntityProto()"}},{"tags":[{"type":"param","string":"{object} proto - The key protocol object to convert.","name":"proto","description":"<ul>\n<li>The key protocol object to convert.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{Key}\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{Key}</p>"},{"type":"example","string":"var key = keyFromKeyProto({\n  partitionId: {\n    datasetId: 'project-id',\n    namespace: ''\n  },\n  path: [\n    {\n      kind: 'Kind',\n      id: '4790047639339008'\n    }\n  ]\n});","html":"<p>var key = keyFromKeyProto({<br />  partitionId: {<br />    datasetId: &#39;project-id&#39;,<br />    namespace: &#39;&#39;<br />  },<br />  path: [<br />    {<br />      kind: &#39;Kind&#39;,<br />      id: &#39;4790047639339008&#39;<br />    }<br />  ]<br />});</p>"}],"description":{"full":"<p>Convert a key protocol object to a Key object.</p>","summary":"<p>Convert a key protocol object to a Key object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":153,"codeStart":173,"code":"function keyFromKeyProto(proto) {\n  var keyOptions = {\n    path: []\n  };\n\n  if (proto.partition_id && proto.partition_id.namespace) {\n    keyOptions.namespace = proto.partition_id.namespace;\n  }\n\n  proto.path_element.forEach(function(path, index) {\n    var id = Number(path.id) || path.name;\n    keyOptions.path.push(path.kind);\n    if (id) {\n      keyOptions.path.push(id);\n    } else if (index < proto.path_element.length - 1) {\n      throw new Error('Invalid key. Ancestor keys require an id or name.');\n    }\n  });\n\n  return new Key(keyOptions);\n}\n\nmodule.exports.keyFromKeyProto = keyFromKeyProto;","ctx":{"type":"function","name":"keyFromKeyProto","string":"keyFromKeyProto()"}},{"tags":[{"type":"param","string":"{Key} key - The Key object to convert.","name":"key","description":"<ul>\n<li>The Key object to convert.</li>\n</ul>\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"var keyProto = keyToKeyProto(new Key(['Company', 1]));\n\n// keyProto:\n// {\n//   path: [\n//     {\n//       kind: 'Company',\n//       id: 1\n//     }\n//   ]\n// }","html":"<p>var keyProto = keyToKeyProto(new Key([&#39;Company&#39;, 1]));</p><p>// keyProto:<br />// {<br />//   path: [<br />//     {<br />//       kind: &#39;Company&#39;,<br />//       id: 1<br />//     }<br />//   ]<br />// }</p>"}],"description":{"full":"<p>Convert a Key object to a key protocol object.</p>","summary":"<p>Convert a Key object to a key protocol object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":197,"codeStart":216,"code":"function keyToKeyProto(key) {\n  var keyPath = key.path;\n  if (keyPath.length === 0) {\n    throw new Error('A key should contain at least a kind.');\n  }\n  var path = [];\n  for (var i = 0; i < keyPath.length; i += 2) {\n    var p = { kind: keyPath[i] };\n    var val = keyPath[i + 1];\n    if (val) {\n      // if not numeric, set key name.\n      if (isNaN(val)) {\n        p.name = val;\n      } else {\n        p.id = val;\n      }\n    } else if (i < keyPath.length - 2) { // i is second last path item\n      throw new Error('Invalid key. Ancestor keys require an id or name.');\n    }\n    path.push(p);\n  }\n  var proto = {\n    path_element: path\n  };\n  if (key.namespace) {\n    proto.partition_id = {\n      namespace: key.namespace\n    };\n  }\n  return proto;\n}\n\nmodule.exports.keyToKeyProto = keyToKeyProto;","ctx":{"type":"function","name":"keyToKeyProto","string":"keyToKeyProto()"}},{"tags":[{"type":"param","string":"{object[]} results - The response array.","name":"results","description":"<ul>\n<li>The response array.</li>\n</ul>\n","types":["Array.<object>"],"typesDescription":"<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} results.entity - An entity object.","name":"results.entity","description":"<ul>\n<li>An entity object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} results.entity.key - The entity's key.","name":"results.entity.key","description":"<ul>\n<li>The entity&#39;s key.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object[]}\n","types":["Array.<object>"],"typesDescription":"<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object[]}</p>"},{"type":"example","string":"makeReq('runQuery', {}, function(err, response) {\n  var entityObjects = formatArray(response.batch.entityResults);\n\n  // entityObjects:\n  // {\n  //   key: {},\n  //   data: {\n  //     fieldName: 'value'\n  //   }\n  // }\n  //\n});","html":"<p>makeReq(&#39;runQuery&#39;, {}, function(err, response) {<br />  var entityObjects = formatArray(response.batch.entityResults);</p><p>  // entityObjects:<br />  // {<br />  //   key: {},<br />  //   data: {<br />  //     fieldName: &#39;value&#39;<br />  //   }<br />  // }<br />  //<br />});</p>"}],"description":{"full":"<p>Convert an API response array to a qualified Key and data object.</p>","summary":"<p>Convert an API response array to a qualified Key and data object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":250,"codeStart":272,"code":"function formatArray(results) {\n  return results.map(function(result) {\n    return {\n      key: keyFromKeyProto(result.entity.key),\n      data: entityFromEntityProto(result.entity)\n    };\n  });\n}\n\nmodule.exports.formatArray = formatArray;","ctx":{"type":"function","name":"formatArray","string":"formatArray()"}},{"tags":[{"type":"param","string":"{Key} key - The Key object.","name":"key","description":"<ul>\n<li>The Key object.</li>\n</ul>\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{boolean}\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{boolean}</p>"},{"type":"example","string":"isKeyComplete(new Key(['Company', 'Google'])); // true\nisKeyComplete(new Key('Company')); // false","html":"<p>isKeyComplete(new Key([&#39;Company&#39;, &#39;Google&#39;])); // true<br />isKeyComplete(new Key(&#39;Company&#39;)); // false</p>"}],"description":{"full":"<p>Check if a key is complete.</p>","summary":"<p>Check if a key is complete.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":283,"codeStart":293,"code":"module.exports.isKeyComplete = function(key) {\n  var proto = keyToKeyProto(key);\n  for (var i = 0; i < proto.path_element.length; i++) {\n    if (!proto.path_element[i].kind) {\n      return false;\n    }\n    if (!proto.path_element[i].id && !proto.path_element[i].name) {\n      return false;\n    }\n  }\n  return true;\n};","ctx":{"type":"method","receiver":"module.exports","name":"isKeyComplete","string":"module.exports.isKeyComplete()"}},{"tags":[{"type":"todo","string":"Do we need uint64s and keep Long.js support? ","html":"<p>Do we need uint64s and keep Long.js support? </p>"},{"type":"param","string":"{object} property - The property object to convert.","name":"property","description":"<ul>\n<li>The property object to convert.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{*}\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{*}</p>"},{"type":"example","string":"propertyToValue({\n  boolean_value: false\n});\n// false\n\npropertyToValue({\n  string_value: 'Hi'\n});\n// 'Hi'\n\npropertyToValue({\n  blob_value: new Buffer('68656c6c6f')\n});\n// <Buffer 68 65 6c 6c 6f>","html":"<p>propertyToValue({<br />  boolean_value: false<br />});<br />// false</p><p>propertyToValue({<br />  string_value: &#39;Hi&#39;<br />});<br />// &#39;Hi&#39;</p><p>propertyToValue({<br />  blob_value: new Buffer(&#39;68656c6c6f&#39;)<br />});<br />// <Buffer 68 65 6c 6c 6f></p>"}],"description":{"full":"<p>Convert a protocol property to it&#39;s native value.</p>","summary":"<p>Convert a protocol property to it&#39;s native value.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":306,"codeStart":330,"code":"function propertyToValue(property) {\n  if (exists(property.integer_value)) {\n    return parseInt(property.integer_value.toString(), 10);\n  }\n  if (exists(property.double_value)) {\n    return property.double_value;\n  }\n  if (exists(property.string_value)) {\n    return property.string_value;\n  }\n  if (exists(property.blob_value)) {\n    return property.blob_value.toBuffer();\n  }\n  if (exists(property.timestamp_microseconds_value)) {\n    var microSecs = parseInt(\n        property.timestamp_microseconds_value.toString(), 10);\n    return new Date(microSecs / 1000);\n  }\n  if (exists(property.key_value)) {\n    return keyFromKeyProto(property.key_value);\n  }\n  if (exists(property.entity_value)) {\n    return entityFromEntityProto(property.entity_value);\n  }\n  if (exists(property.boolean_value)) {\n    return property.boolean_value;\n  }\n  if (exists(property.list_value)) {\n    var list = [];\n    for (var i = 0; i < property.list_value.length; i++) {\n      list.push(propertyToValue(property.list_value[i]));\n    }\n    return list;\n  }\n}\n\nmodule.exports.propertyToValue = propertyToValue;","ctx":{"type":"function","name":"propertyToValue","string":"propertyToValue()"}},{"tags":[{"type":"param","string":"{*} v - Original value.","name":"v","description":"<ul>\n<li>Original value.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"valueToProperty('Hi');\n// {\n//   stringValue: 'Hi'\n// }","html":"<p>valueToProperty(&#39;Hi&#39;);<br />// {<br />//   stringValue: &#39;Hi&#39;<br />// }</p>"}],"description":{"full":"<p>Convert any native value to a property object.</p>","summary":"<p>Convert any native value to a property object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":368,"codeStart":380,"code":"function valueToProperty(v) {\n  var p = {};\n  if (v instanceof Boolean || typeof v === 'boolean') {\n    p.boolean_value = v;\n    return p;\n  }\n  if (v instanceof Int) {\n    p.integer_value = v.get();\n    return p;\n  }\n  if (v instanceof Double) {\n    p.double_value = v.get();\n    return p;\n  }\n  if (v instanceof Number || typeof v === 'number') {\n    if (v % 1 === 0) {\n      p.integer_value = v;\n    } else {\n      p.double_value = v;\n    }\n    return p;\n  }\n  if (v instanceof Date) {\n    p.timestamp_microseconds_value = v.getTime() * 1000;\n    return p;\n  }\n  if (v instanceof String || typeof v === 'string') {\n    p.string_value = v;\n    return p;\n  }\n  if (v instanceof Buffer) {\n    p.blob_value = v;\n    return p;\n  }\n  if (Array.isArray(v)) {\n    p.list_value = v.map(function(item) {\n      return valueToProperty(item);\n    });\n    return p;\n  }\n  if (v instanceof Key) {\n    p.key_value = keyToKeyProto(v);\n    return p;\n  }\n  if (v instanceof Object && Object.keys(v).length > 0) {\n    var property = [];\n    Object.keys(v).forEach(function(k) {\n      property.push({\n        name: k,\n        value: valueToProperty(v[k])\n      });\n    });\n    p.entity_value = { property: property };\n    p.indexed = false;\n    return p;\n  }\n  throw new Error('Unsupported field value, ' + v + ', is provided.');\n}\n\nmodule.exports.valueToProperty = valueToProperty;","ctx":{"type":"function","name":"valueToProperty","string":"valueToProperty()"}},{"tags":[{"type":"param","string":"{object} entity - The entity object to convert.","name":"entity","description":"<ul>\n<li>The entity object to convert.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"entityToEntityProto({\n  name: 'Burcu',\n  legit: true\n});\n// {\n//   key: null,\n//   property: [\n//     {\n//       name: 'name',\n//       value: {\n//         string_value: 'Burcu'\n//       }\n//     },\n//     {\n//       name: 'legit',\n//       value: {\n//         boolean_value: true\n//       }\n//     }\n//   }\n// }","html":"<p>entityToEntityProto({<br />  name: &#39;Burcu&#39;,<br />  legit: true<br />});<br />// {<br />//   key: null,<br />//   property: [<br />//     {<br />//       name: &#39;name&#39;,<br />//       value: {<br />//         string_value: &#39;Burcu&#39;<br />//       }<br />//     },<br />//     {<br />//       name: &#39;legit&#39;,<br />//       value: {<br />//         boolean_value: true<br />//       }<br />//     }<br />//   }<br />// }</p>"}],"description":{"full":"<p>Convert an entity object to an entity protocol object.</p>","summary":"<p>Convert an entity object to an entity protocol object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":441,"codeStart":470,"code":"function entityToEntityProto(entity) {\n  return {\n    key: null,\n    property: Object.keys(entity).map(function(key) {\n        return {\n          name: key,\n          value: valueToProperty(entity[key])\n        };\n      })\n  };\n}\n\nmodule.exports.entityToEntityProto = entityToEntityProto;","ctx":{"type":"function","name":"entityToEntityProto","string":"entityToEntityProto()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{object} q - The query object to convert.","name":"q","description":"<ul>\n<li>The query object to convert.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"queryToQueryProto({\n  namespace: '',\n  kinds: [\n    'Kind'\n  ],\n  filters: [],\n  orders: [],\n  groupByVal: [],\n  selectVal: [],\n  startVal: null,\n  endVal: null,\n  limitVal: -1,\n  offsetVal: -1\n});\n// {\n//   projection: [],\n//   kinds: [\n//     {\n//       name: 'Kind'\n//     }\n//   ],\n//   order: [],\n//   groupBy: []\n// }","html":"<p>queryToQueryProto({<br />  namespace: &#39;&#39;,<br />  kinds: [<br />    &#39;Kind&#39;<br />  ],<br />  filters: [],<br />  orders: [],<br />  groupByVal: [],<br />  selectVal: [],<br />  startVal: null,<br />  endVal: null,<br />  limitVal: -1,<br />  offsetVal: -1<br />});<br />// {<br />//   projection: [],<br />//   kinds: [<br />//     {<br />//       name: &#39;Kind&#39;<br />//     }<br />//   ],<br />//   order: [],<br />//   groupBy: []<br />// }</p>"}],"description":{"full":"<p>Convert a query object to a query protocol object.</p>","summary":"<p>Convert a query object to a query protocol object.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":484,"codeStart":518,"code":"function queryToQueryProto(q) {\n  var query = {};\n  query.projection = q.selectVal.map(function(v) {\n    return { property: { name: v } };\n  });\n  query.kind = q.kinds.map(function(k) {\n    return { name: k };\n  });\n  // filters\n  if (q.filters.length > 0) {\n    var filters = q.filters.map(function(f) {\n      var val = {};\n      if (f.name === '__key__') {\n        val.key_value = keyToKeyProto(f.val);\n      } else {\n        val = valueToProperty(f.val);\n      }\n      var property = {\n        property: { name: f.name },\n        operator: OP_TO_OPERATOR[f.op],\n        value: val\n      };\n      return { property_filter: property };\n    });\n    query.filter = {\n      composite_filter: { filter: filters, operator: 'AND' }\n    };\n  }\n  query.order = q.orders.map(function(o) {\n    return {\n      property:  { name: o.name },\n      direction: SIGN_TO_ORDER[o.sign]\n    };\n  });\n  query.group_by = q.groupByVal.map(function(g) {\n    return { name: g };\n  });\n  // pagination\n  if (q.startVal) {\n    query.start_cursor = new Buffer(q.startVal, 'base64');\n  }\n  if (q.endVal) {\n    query.end_cursor = new Buffer(q.endVal, 'base64');\n  }\n  if (q.offsetVal > 0) {\n    query.offset = q.offsetVal;\n  }\n  if (q.limitVal > 0) {\n    query.limit = q.limitVal;\n  }\n  return query;\n}\n\nmodule.exports.queryToQueryProto = queryToQueryProto;","ctx":{"type":"function","name":"queryToQueryProto","string":"queryToQueryProto()"}},{"tags":[{"type":"todo","string":"If protobufjs had hasFieldname support, we wouldn't need a utility.     Later address it on Protobuf.js.\n","html":"<p>If protobufjs had hasFieldname support, we wouldn&#39;t need a utility.     Later address it on Protobuf.js.</p>"},{"type":"param","string":"{*} value - Value.","name":"value","description":"<ul>\n<li>Value.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{boolean}","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{boolean}</p>"}],"description":{"full":"<p>Does a value exist?</p>","summary":"<p>Does a value exist?</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":573,"codeStart":582,"code":"function exists(value) {\n  return (value !== null && value !== undefined);\n}","ctx":{"type":"function","name":"exists","string":"exists()"}}],"datastore":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"datastore","html":"<p>datastore</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';","ctx":false},{"tags":[{"type":"type","string":"{module:datastore/entity}","types":["module:datastore/entity"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fentity.html\">datastore/entity</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/entity}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":23,"codeStart":27,"code":"var entity = require('./entity');","ctx":{"type":"declaration","name":"entity","value":"require('./entity')","string":"entity"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":29,"codeStart":33,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:datastore/dataset}","types":["module:datastore/dataset"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fdataset.html\">datastore/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/dataset}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":35,"codeStart":39,"code":"var Dataset = require('./dataset');","ctx":{"type":"declaration","name":"Dataset","value":"require('./dataset')","string":"Dataset"}},{"tags":[{"type":"example","string":"var datastore = gcloud.datastore;\n\n// datastore.dataset();\n//\n//   is equal to...\n//\n// datastore.dataset({\n//   projectId: 'grape-spaceship-123',\n//   keyFilename: '/path/to/keyfile.json'\n// });","html":"<p>var datastore = gcloud.datastore;</p><p>// datastore.dataset();<br />//<br />//   is equal to...<br />//<br />// datastore.dataset({<br />//   projectId: &#39;grape-spaceship-123&#39;,<br />//   keyFilename: &#39;/path/to/keyfile.json&#39;<br />// });</p>"}],"description":{"full":"<p>Developer Documentation</p><p>Invoking the Datastore class allows you to provide configuration up-front.<br />This configuration will be used for future invocations of the returned<br /><code>dataset</code> method.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Invoking the Datastore class allows you to provide configuration up-front.<br />This configuration will be used for future invocations of the returned<br /><code>dataset</code> method.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":41,"codeStart":59},{"tags":[{"type":"alias","string":"module:datastore","html":"<p>module:datastore</p>"},{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\nvar datastore = gcloud.datastore;","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p><p>var datastore = gcloud.datastore;</p>"}],"description":{"full":"<p>The example below will demonstrate the different usage patterns your app may<br />need to support to retrieve a datastore object.</p>","summary":"<p>The example below will demonstrate the different usage patterns your app may<br />need to support to retrieve a datastore object.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":59,"codeStart":76,"code":"function Datastore(options) {\n  this.config = options || {};\n}","ctx":{"type":"constructor","name":"Datastore","string":"Datastore()"}},{"tags":[{"type":"example","string":"var datastore = gcloud.datastore;\n\n// Create a Dataset object.\nvar dataset = datastore.dataset({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var datastore = gcloud.datastore;</p><p>// Create a Dataset object.<br />var dataset = datastore.dataset({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p>Developer Documentation</p><p>Use this static method to create a dataset without any pre-configured<br />options.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Use this static method to create a dataset without any pre-configured<br />options.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":80,"codeStart":94,"code":"Datastore.dataset = Dataset;","ctx":{"type":"property","receiver":"Datastore","name":"dataset","value":"Dataset","string":"Datastore.dataset"}},{"tags":[{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/dataset}","types":["module:datastore/dataset"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fdataset.html\">datastore/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/dataset}</p>"}],"description":{"full":"<p>Developer Documentation</p><p>Create a dataset using the instance method when you want to use your<br />pre-configured options from the Datastore instance.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Create a dataset using the instance method when you want to use your<br />pre-configured options from the Datastore instance.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":96,"codeStart":104},{"tags":[{"type":"param","string":"{object=} options - [Configuration object](#/docs/?method=gcloud).","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.apiEndpoint - Override the default API endpoint used\n    to reach Datastore. This is useful for connecting to your local Datastore\n    server (usually \"http://localhost:8080\").","name":"options.apiEndpoint","description":"<ul>\n<li>Override the default API endpoint used     to reach Datastore. This is useful for connecting to your local Datastore<br />  server (usually &quot;<a href=\"http://localhost:8080\">http://localhost:8080</a>&quot;).</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.namespace - Namespace to isolate transactions to.","name":"options.namespace","description":"<ul>\n<li>Namespace to isolate transactions to.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/dataset}","types":["module:datastore/dataset"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fdataset.html\">datastore/dataset</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/dataset}</p>"}],"description":{"full":"<p>Create a Dataset object to reference an existing dataset.</p>","summary":"<p>Create a Dataset object to reference an existing dataset.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":104,"codeStart":114,"code":"Datastore.prototype.dataset = function(options) {\n  options = options || {};\n  // Mix in global config data to the provided options.\n  return new Dataset(util.extendGlobalConfig(this.config, options));\n};","ctx":{"type":"method","constructor":"Datastore","cons":"Datastore","name":"dataset","string":"Datastore.prototype.dataset()"}},{"tags":[{"type":"param","string":"{number} value - The integer value.","name":"value","description":"<ul>\n<li>The integer value.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\n\n// Create an Integer.\nvar sevenInteger = gcloud.datastore.int(7);","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>// Create an Integer.<br />var sevenInteger = gcloud.datastore.int(7);</p>"}],"description":{"full":"<p>Helper function to get a Datastore Integer object.</p>","summary":"<p>Helper function to get a Datastore Integer object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":120,"codeStart":132,"code":"Datastore.int = function(value) {\n  return new entity.Int(value);\n};","ctx":{"type":"method","receiver":"Datastore","name":"int","string":"Datastore.int()"}},{"tags":[{"type":"param","string":"{number} value - The double value.","name":"value","description":"<ul>\n<li>The double value.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\n\n// Create a Double.\nvar threeDouble = gcloud.datastore.double(3.0);","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>// Create a Double.<br />var threeDouble = gcloud.datastore.double(3.0);</p>"}],"description":{"full":"<p>Helper function to get a Datastore Double object.</p>","summary":"<p>Helper function to get a Datastore Double object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":136,"codeStart":148,"code":"Datastore.double = function(value) {\n  return new entity.Double(value);\n};\n\nmodule.exports = Datastore;","ctx":{"type":"method","receiver":"Datastore","name":"double","string":"Datastore.double()"}}],"datastore/pb":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":16},{"tags":[{"type":"private","string":"","visibility":"private","html":""},{"type":"module","string":"datastore/pb","html":"<p>datastore/pb</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":17,"codeStart":22,"code":"'use strict';\n\nvar path = require('path');\nvar protobufjs = require('protobufjs');","ctx":false},{"tags":[{"type":"const","string":"{string} Path to the proto file.","html":"<p>{string} Path to the proto file.</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":28,"code":"var PROTO_FILE = path.join(__dirname, 'datastore_v1.proto');","ctx":{"type":"declaration","name":"PROTO_FILE","value":"path.join(__dirname, 'datastore_v1.proto')","string":"PROTO_FILE"}},{"tags":[{"type":"type","string":"{object}","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{object}</p>"}],"description":{"full":"<p>protobuf.</p>","summary":"<p>protobuf.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":30,"codeStart":35,"code":"module.exports = protobufjs.loadProtoFile(PROTO_FILE).build().pb;","ctx":{"type":"property","receiver":"module","name":"exports","value":"protobufjs.loadProtoFile(PROTO_FILE).build().pb","string":"module.exports"}}],"datastore/query":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"datastore/query","html":"<p>datastore/query</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');","ctx":false},{"tags":[{"type":"resource","string":"[Datastore Queries]{@link http://goo.gl/Cag0r6} ","html":"<p>[Datastore Queries]{@link <a href=\"http://goo.gl/Cag0r6}\">http://goo.gl/Cag0r6}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:datastore/query ","html":"<p>module:datastore/query </p>"},{"type":"param","string":"{string=} namespace - Namespace to query entities from.","name":"namespace","description":"<ul>\n<li>Namespace to query entities from.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} kind - Kind to query.\n","name":"kind","description":"<ul>\n<li>Kind to query. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var dataset = gcloud.datastore.dataset({\n  projectId: 'grape-spaceship-123'\n});\n\n// If your dataset was scoped to a namespace at initialization, your query\n// will likewise be scoped to that namespace.\nvar query = dataset.createQuery('Lion');\n\n// However, you may override the namespace per query.\nvar query = dataset.createQuery('AnimalNamespace', 'Lion');\n\n// You may also remove the namespace altogether.\nvar query = dataset.createQuery(null, 'Lion');","html":"<p>var dataset = gcloud.datastore.dataset({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>// If your dataset was scoped to a namespace at initialization, your query<br />// will likewise be scoped to that namespace.<br />var query = dataset.createQuery(&#39;Lion&#39;);</p><p>// However, you may override the namespace per query.<br />var query = dataset.createQuery(&#39;AnimalNamespace&#39;, &#39;Lion&#39;);</p><p>// You may also remove the namespace altogether.<br />var query = dataset.createQuery(null, &#39;Lion&#39;);</p>"}],"description":{"full":"<p>Build a Query object.</p><p><strong>Queries should be built with<br />{@linkcode module:datastore/dataset#createQuery} and run via<br />{@linkcode module:datastore/dataset#runQuery}.</strong></p>","summary":"<p>Build a Query object.</p>","body":"<p><strong>Queries should be built with<br />{@linkcode module:datastore/dataset#createQuery} and run via<br />{@linkcode module:datastore/dataset#runQuery}.</strong></p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":25,"codeStart":55,"code":"function Query(namespace, kinds) {\n  if (!kinds) {\n    kinds = namespace;\n    namespace = null;\n  }\n\n  this.namespace = namespace || null;\n  this.kinds = kinds;\n\n  this.filters = [];\n  this.orders = [];\n  this.groupByVal = [];\n  this.selectVal = [];\n\n  // pagination\n  this.autoPaginateVal = true;\n  this.startVal = null;\n  this.endVal = null;\n  this.limitVal = -1;\n  this.offsetVal = -1;\n}","ctx":{"type":"constructor","name":"Query","string":"Query()"}},{"tags":[{"type":"return","string":"{module:datastore/query}","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":77,"codeStart":80,"code":"Query.prototype.autoPaginate = function(autoPaginateVal) {\n  this.autoPaginateVal = autoPaginateVal !== false;\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"autoPaginate","string":"Query.prototype.autoPaginate()"}},{"tags":[{"type":"resource","string":"[Datastore Filters]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Filters} ","html":"<p>[Datastore Filters]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Filters}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Filters}</a> </p>"},{"type":"param","string":"{string} filter - Property + Operator (=, <, >, <=, >=).","name":"filter","description":"<ul>\n<li>Property + Operator (=, &lt;, &gt;, &lt;=, &gt;=).</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} value - Value to compare property to.","name":"value","description":"<ul>\n<li>Value to compare property to.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"// List all companies named Google that have less than 400 employees.\nvar companyQuery = query\n  .filter('name =', 'Google')\n  .filter('size <', 400);\n\n// To filter by key, use `__key__` for the property name. Filter on keys\n// stored as properties is not currently supported.\nvar keyQuery = query.filter('__key__ =', dataset.key(['Company', 'Google']));","html":"<p>// List all companies named Google that have less than 400 employees.<br />var companyQuery = query<br />  .filter(&#39;name =&#39;, &#39;Google&#39;)<br />  .filter(&#39;size &lt;&#39;, 400);</p><p>// To filter by key, use <code>__key__</code> for the property name. Filter on keys<br />// stored as properties is not currently supported.<br />var keyQuery = query.filter(&#39;<strong>key</strong> =&#39;, dataset.key([&#39;Company&#39;, &#39;Google&#39;]));</p>"}],"description":{"full":"<p>Datastore allows querying on properties. Supported comparison operators<br />are <code>=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, and <code>&gt;=</code>. &quot;Not equal&quot; and <code>IN</code> operators are<br />currently not supported.</p><p><em>To filter by ancestors, see {@linkcode module:datastore/query#hasAncestor}.</em></p>","summary":"<p>Datastore allows querying on properties. Supported comparison operators<br />are <code>=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, and <code>&gt;=</code>. &quot;Not equal&quot; and <code>IN</code> operators are<br />currently not supported.</p>","body":"<p><em>To filter by ancestors, see {@linkcode module:datastore/query#hasAncestor}.</em></p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":85,"codeStart":108,"code":"Query.prototype.filter = function(filter, value) {\n  // TODO: Add filter validation.\n  var operatorRegex = /[><=]/g;\n  filter = filter.trim();\n  var fieldName = filter.replace(operatorRegex, '').trim();\n  var op = filter.substr(fieldName.length, filter.length).trim();\n  this.filters.push({\n    name: fieldName,\n    op: op,\n    val: value\n  });\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"filter","string":"Query.prototype.filter()"}},{"tags":[{"type":"resource","string":"[Datastore Ancestor Filters]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Ancestor_filters} ","html":"<p>[Datastore Ancestor Filters]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Ancestor_filters}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Ancestor_filters}</a> </p>"},{"type":"param","string":"{Key} key - Key object to filter by.","name":"key","description":"<ul>\n<li>Key object to filter by.</li>\n</ul>\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"var ancestoryQuery = query.hasAncestor(dataset.key(['Parent', 123]));","html":"<p>var ancestoryQuery = query.hasAncestor(dataset.key([&#39;Parent&#39;, 123]));</p>"}],"description":{"full":"<p>Filter a query by ancestors.</p>","summary":"<p>Filter a query by ancestors.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":122,"codeStart":133,"code":"Query.prototype.hasAncestor = function(key) {\n  this.filters.push({ name: '__key__', op: 'HAS_ANCESTOR', val: key });\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"hasAncestor","string":"Query.prototype.hasAncestor()"}},{"tags":[{"type":"resource","string":"[Datastore Sort Orders]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Sort_orders} ","html":"<p>[Datastore Sort Orders]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Sort_orders}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Sort_orders}</a> </p>"},{"type":"param","string":"{string} property - Optional operator (+, -) and property to order by.","name":"property","description":"<ul>\n<li>Optional operator (+, -) and property to order by.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"// Sort by size ascendingly.\nvar companiesAscending = companyQuery.order('size');\n\n// Sort by size descendingly.\nvar companiesDescending = companyQuery.order('-size');","html":"<p>// Sort by size ascendingly.<br />var companiesAscending = companyQuery.order(&#39;size&#39;);</p><p>// Sort by size descendingly.<br />var companiesDescending = companyQuery.order(&#39;-size&#39;);</p>"}],"description":{"full":"<p>Sort the results by a property name in ascending or descending order. By<br />default, an ascending sort order will be used.</p>","summary":"<p>Sort the results by a property name in ascending or descending order. By<br />default, an ascending sort order will be used.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":138,"codeStart":154,"code":"Query.prototype.order = function(property) {\n  var sign = '+';\n  if (property[0] === '-' || property[0] === '+') {\n    sign = property[0];\n    property = property.substr(1);\n  }\n  this.orders.push({ name: property, sign: sign });\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"order","string":"Query.prototype.order()"}},{"tags":[{"type":"param","string":"{array} properties - Properties to group by.","name":"properties","description":"<ul>\n<li>Properties to group by.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"var groupedQuery = companyQuery.groupBy(['name', 'size']);","html":"<p>var groupedQuery = companyQuery.groupBy([&#39;name&#39;, &#39;size&#39;]);</p>"}],"description":{"full":"<p>Group query results by a list of properties.</p>","summary":"<p>Group query results by a list of properties.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":164,"codeStart":173,"code":"Query.prototype.groupBy = function(fieldNames) {\n  this.groupByVal = arrify(fieldNames);\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"groupBy","string":"Query.prototype.groupBy()"}},{"tags":[{"type":"resource","string":"[Projection Queries]{@link https://cloud.google.com/datastore/docs/concepts/projectionqueries} ","html":"<p>[Projection Queries]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/projectionqueries}\">https://cloud.google.com/datastore/docs/concepts/projectionqueries}</a> </p>"},{"type":"param","string":"{string|string[]} fieldNames - Properties to return from the matched\n    entities.","name":"fieldNames","description":"<ul>\n<li>Properties to return from the matched     entities.</li>\n</ul>\n","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"// Only retrieve the name property.\nvar selectQuery = companyQuery.select('name');\n\n// Only retrieve the name and size properties.\nvar selectQuery = companyQuery.select(['name', 'size']);","html":"<p>// Only retrieve the name property.<br />var selectQuery = companyQuery.select(&#39;name&#39;);</p><p>// Only retrieve the name and size properties.<br />var selectQuery = companyQuery.select([&#39;name&#39;, &#39;size&#39;]);</p>"}],"description":{"full":"<p>Retrieve only select properties from the matched entities.</p><p>Queries that select a subset of properties are called Projection Queries.</p>","summary":"<p>Retrieve only select properties from the matched entities.</p>","body":"<p>Queries that select a subset of properties are called Projection Queries.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":178,"codeStart":196,"code":"Query.prototype.select = function(fieldNames) {\n  this.selectVal = arrify(fieldNames);\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"select","string":"Query.prototype.select()"}},{"tags":[{"type":"resource","string":"[Query Cursors]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors} ","html":"<p>[Query Cursors]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors}</a> </p>"},{"type":"param","string":"{string} cursorToken - The starting cursor token.","name":"cursorToken","description":"<ul>\n<li>The starting cursor token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"var cursorToken = 'X';\n\n// Retrieve results starting from cursorToken.\nvar startQuery = companyQuery.start(cursorToken);","html":"<p>var cursorToken = &#39;X&#39;;</p><p>// Retrieve results starting from cursorToken.<br />var startQuery = companyQuery.start(cursorToken);</p>"}],"description":{"full":"<p>Set a starting cursor to a query.</p>","summary":"<p>Set a starting cursor to a query.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":201,"codeStart":215,"code":"Query.prototype.start = function(start) {\n  this.startVal = start;\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"start","string":"Query.prototype.start()"}},{"tags":[{"type":"resource","string":"[Query Cursors]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors} ","html":"<p>[Query Cursors]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Query_cursors}</a> </p>"},{"type":"param","string":"{string} cursorToken - The ending cursor token.","name":"cursorToken","description":"<ul>\n<li>The ending cursor token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"var cursorToken = 'X';\n\n// Retrieve results limited to the extent of cursorToken.\nvar endQuery = companyQuery.end(cursorToken);","html":"<p>var cursorToken = &#39;X&#39;;</p><p>// Retrieve results limited to the extent of cursorToken.<br />var endQuery = companyQuery.end(cursorToken);</p>"}],"description":{"full":"<p>Set an ending cursor to a query.</p>","summary":"<p>Set an ending cursor to a query.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":220,"codeStart":234,"code":"Query.prototype.end = function(end) {\n  this.endVal = end;\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"end","string":"Query.prototype.end()"}},{"tags":[{"type":"resource","string":"[Query Limits]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results} ","html":"<p>[Query Limits]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results}</a> </p>"},{"type":"param","string":"{number} n - The number of results to limit the query to.","name":"n","description":"<ul>\n<li>The number of results to limit the query to.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"// Limit the results to 10 entities.\nvar limitQuery = companyQuery.limit(10);","html":"<p>// Limit the results to 10 entities.<br />var limitQuery = companyQuery.limit(10);</p>"}],"description":{"full":"<p>Set a limit on a query.</p>","summary":"<p>Set a limit on a query.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":239,"codeStart":251,"code":"Query.prototype.limit = function(n) {\n  this.limitVal = n;\n  return this;\n};","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"limit","string":"Query.prototype.limit()"}},{"tags":[{"type":"resource","string":"[Query Offsets]{@link https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results} ","html":"<p>[Query Offsets]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results}\">https://cloud.google.com/datastore/docs/concepts/queries#Datastore_Retrieving_results}</a> </p>"},{"type":"param","string":"{number} n - The offset to start from after the start cursor.","name":"n","description":"<ul>\n<li>The offset to start from after the start cursor.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:datastore/query}\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore/query}</p>"},{"type":"example","string":"// Start from the 101st result.\nvar offsetQuery = companyQuery.offset(100);","html":"<p>// Start from the 101st result.<br />var offsetQuery = companyQuery.offset(100);</p>"}],"description":{"full":"<p>Set an offset on a query.</p>","summary":"<p>Set an offset on a query.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":256,"codeStart":268,"code":"Query.prototype.offset = function(n) {\n  this.offsetVal = n;\n  return this;\n};\n\nmodule.exports = Query;","ctx":{"type":"method","constructor":"Query","cons":"Query","name":"offset","string":"Query.prototype.offset()"}}],"datastore/request":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"datastore/request","html":"<p>datastore/request</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar concat = require('concat-stream');\nvar format = require('string-format-obj');\nvar is = require('is');\nvar propAssign = require('prop-assign');\nvar request = require('request').defaults({\n  pool: {\n    maxSockets: Infinity\n  }\n});\nvar split = require('split-array-stream');\nvar through = require('through2');\nvar extend = require('extend');","ctx":false},{"tags":[{"type":"type","string":"{module:datastore/entity}","types":["module:datastore/entity"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fentity.html\">datastore/entity</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/entity}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":37,"codeStart":41,"code":"var entity = require('./entity.js');","ctx":{"type":"declaration","name":"entity","value":"require('./entity.js')","string":"entity"}},{"tags":[{"type":"type","string":"{module:datastore/pb}","types":["module:datastore/pb"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fpb.html\">datastore/pb</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/pb}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":43,"codeStart":47,"code":"var pb = require('./pb.js');","ctx":{"type":"declaration","name":"pb","value":"require('./pb.js')","string":"pb"}},{"tags":[{"type":"type","string":"{module:datastore/query}","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/query}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":49,"codeStart":53,"code":"var Query = require('./query');","ctx":{"type":"declaration","name":"Query","value":"require('./query')","string":"Query"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":55,"codeStart":59,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":61,"codeStart":65,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{string} Non-transaction mode key.","html":"<p>{string} Non-transaction mode key.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":67,"codeStart":71,"code":"var MODE_NON_TRANSACTIONAL = 'NON_TRANSACTIONAL';","ctx":{"type":"declaration","name":"MODE_NON_TRANSACTIONAL","value":"'NON_TRANSACTIONAL'","string":"MODE_NON_TRANSACTIONAL"}},{"tags":[{"type":"const","string":"{string} Transaction mode key.","html":"<p>{string} Transaction mode key.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":73,"codeStart":77,"code":"var MODE_TRANSACTIONAL = 'TRANSACTIONAL';","ctx":{"type":"declaration","name":"MODE_TRANSACTIONAL","value":"'TRANSACTIONAL'","string":"MODE_TRANSACTIONAL"}},{"tags":[{"type":"example","string":"// This is how to create a transaction object directly using this Transaction\n// class. The following transaction object is created for use in the examples\n// in this file below.\nvar dataset = gcloud.datastore.dataset({ projectId: 'project-id' });\nvar Transaction = require('gcloud/lib/datastore/transaction');\nvar transaction = new Transaction(dataset, 'my-project-id');\ntransaction.id = '1234'; // Give the transaction an ID.","html":"<p>// This is how to create a transaction object directly using this Transaction<br />// class. The following transaction object is created for use in the examples<br />// in this file below.<br />var dataset = gcloud.datastore.dataset({ projectId: &#39;project-id&#39; });<br />var Transaction = require(&#39;gcloud/lib/datastore/transaction&#39;);<br />var transaction = new Transaction(dataset, &#39;my-project-id&#39;);<br />transaction.id = &#39;1234&#39;; // Give the transaction an ID.</p>"}],"description":{"full":"<p>Developer Documentation</p><p>Handles request logic for Datastore.</p><p>Creates requests to the Dataset endpoint. Designed to be inherited by<br />datastore.Dataset and datastore.Transaction objects.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Handles request logic for Datastore.</p><p>Creates requests to the Dataset endpoint. Designed to be inherited by<br />datastore.Dataset and datastore.Transaction objects.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":79,"codeStart":95},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:datastore/request","html":"<p>module:datastore/request</p>"},{"type":"mixin","string":"","html":""}],"description":{"full":"<p>Handle logic for Datastore API operations.</p>","summary":"<p>Handle logic for Datastore API operations.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":95,"codeStart":102,"code":"function DatastoreRequest() {}","ctx":{"type":"constructor","name":"DatastoreRequest","string":"DatastoreRequest()"}},{"tags":[{"type":"resource","string":"[Datasets: lookup API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/lookup} ","html":"<p>[Datasets: lookup API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/lookup}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/lookup}</a> </p>"},{"type":"throws","string":"{Error} If at least one Key object is not provided.\n","types":["Error"],"description":"<p>If at least one Key object is not provided. </p>"},{"type":"param","string":"{Key|Key[]} keys - Datastore key object(s).","name":"keys","description":"<ul>\n<li>Datastore key object(s).</li>\n</ul>\n","types":["Key","Array.<Key>"],"typesDescription":"<a href=\"Key.html\">Key</a>|<code>Array</code>.&lt;<a href=\"Key.html\">Key</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:datastore/entity|module:datastore/entity[]} callback.entity -\n    Will return either a single Entity or a list of Entities.\n","name":"callback.entity","description":"<ul>\n<li>Will return either a single Entity or a list of Entities.</li>\n</ul>\n","types":["module:datastore/entity","Array.<module:datastore/entity>"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fentity.html\">datastore/entity</a>|<code>Array</code>.&lt;module:<a href=\"module%3Adatastore%2Fentity.html\">datastore/entity</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Where you see `transaction`, assume this is the context that's relevant to\n// your use, whether that be a Dataset or Transaction object.\n//-\n\n//-\n// Get a single entity.\n//-\nvar key = dataset.key(['Company', 123]);\n\ntransaction.get(key, function(err, entity) {});\n\n//-\n// Get multiple entities at once with a callback.\n//-\nvar keys = [\n  dataset.key(['Company', 123]),\n  dataset.key(['Product', 'Computer'])\n];\n\ntransaction.get(keys, function(err, entities) {});\n\n//-\n// Or, get the entities as a readable object stream.\n//-\ntransaction.get(keys)\n  .on('error', function(err) {})\n  .on('data', function(entity) {\n    // entity is an entity object.\n  })\n  .on('end', function() {\n    // All entities retrieved.\n  });","html":"<p>//-<br />// Where you see <code>transaction</code>, assume this is the context that&#39;s relevant to<br />// your use, whether that be a Dataset or Transaction object.<br />//-</p><p>//-<br />// Get a single entity.<br />//-<br />var key = dataset.key([&#39;Company&#39;, 123]);</p><p>transaction.get(key, function(err, entity) {});</p><p>//-<br />// Get multiple entities at once with a callback.<br />//-<br />var keys = [<br />  dataset.key([&#39;Company&#39;, 123]),<br />  dataset.key([&#39;Product&#39;, &#39;Computer&#39;])<br />];</p><p>transaction.get(keys, function(err, entities) {});</p><p>//-<br />// Or, get the entities as a readable object stream.<br />//-<br />transaction.get(keys)<br />  .on(&#39;error&#39;, function(err) {})<br />  .on(&#39;data&#39;, function(entity) {<br />    // entity is an entity object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All entities retrieved.<br />  });</p>"}],"description":{"full":"<p>Retrieve the entities identified with the specified key(s) in the current<br />transaction. Get operations require a valid key to retrieve the<br />key-identified entity from Datastore.</p>","summary":"<p>Retrieve the entities identified with the specified key(s) in the current<br />transaction. Get operations require a valid key to retrieve the<br />key-identified entity from Datastore.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":104,"codeStart":154,"code":"DatastoreRequest.prototype.get = function(keys, callback) {\n  if (is.fn(callback)) {\n    // Run this method in stream mode and send the results back to the callback.\n    this.get(keys)\n      .on('error', callback)\n      .pipe(concat(function(results) {\n        var isSingleLookup = !is.array(keys);\n        callback(null, isSingleLookup ? results[0] : results);\n      }));\n    return;\n  }\n\n  keys = arrify(keys).map(entity.keyToKeyProto);\n\n  if (keys.length === 0) {\n    throw new Error('At least one Key object is required.');\n  }\n\n  var self = this;\n  var stream = through.obj();\n\n  function onApiResponse(err, resp) {\n    if (err) {\n      stream.destroy(err);\n      return;\n    }\n\n    var entities = entity.formatArray(resp.found);\n    var nextKeys = (resp.deferred || []).map(entity.keyFromKeyProto);\n\n    split(entities, stream, function(streamEnded) {\n      if (streamEnded) {\n        return;\n      }\n\n      if (nextKeys.length > 0) {\n        self.get(nextKeys, onApiResponse);\n        return;\n      }\n\n      stream.push(null);\n    });\n  }\n\n  this.makeReq_('lookup', { key: keys }, onApiResponse);\n\n  return stream;\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"get","string":"DatastoreRequest.prototype.get()"}},{"tags":[],"description":{"full":"<p>Maps to {module:datastore/dataset#save}, forcing the method to be <code>insert</code>.</p>","summary":"<p>Maps to {module:datastore/dataset#save}, forcing the method to be <code>insert</code>.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":203,"codeStart":206,"code":"DatastoreRequest.prototype.insert = function(entities, callback) {\n  entities = arrify(entities).map(propAssign('method', 'insert'));\n  this.save(entities, callback);\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"insert","string":"DatastoreRequest.prototype.insert()"}},{"tags":[{"type":"resource","string":"[Datasets: commit API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit} ","html":"<p>[Datasets: commit API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit}</a> </p>"},{"type":"borrows","string":"{module:datastore/transaction#save} as save\n","otherMemberName":"{module:datastore/transaction#save}","thisMemberName":"save ","html":"<p>{module:datastore/transaction#save} as save</p>"},{"type":"param","string":"{object|object[]} entities - Datastore key object(s).","name":"entities","description":"<ul>\n<li>Datastore key object(s).</li>\n</ul>\n","types":["object","Array.<object>"],"typesDescription":"<code>object</code>|<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Key} entities.key - Datastore key object.","name":"entities.key","description":"<ul>\n<li>Datastore key object.</li>\n</ul>\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} entities.method - Optional method to explicity use for save.\n    The choices include 'insert', 'update', 'upsert' and 'auto_insert_id'.","name":"entities.method","description":"<ul>\n<li>Optional method to explicity use for save.     The choices include &#39;insert&#39;, &#39;update&#39;, &#39;upsert&#39; and &#39;auto_insert_id&#39;.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|object[]} entities.data - Data to save with the provided key.\n    If you provide an array of objects, you must use the explicit syntax:\n    `name` for the name of the property and `value` for its value. You may\n    also specify an `excludeFromIndexes` property, set to `true` or `false`.","name":"entities.data","description":"<ul>\n<li>Data to save with the provided key.     If you provide an array of objects, you must use the explicit syntax:<br />  <code>name</code> for the name of the property and <code>value</code> for its value. You may<br />  also specify an <code>excludeFromIndexes</code> property, set to <code>true</code> or <code>false</code>.</li>\n</ul>\n","types":["object","Array.<object>"],"typesDescription":"<code>object</code>|<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Save a single entity.\n//\n// Notice that we are providing an incomplete key. After saving, the original\n// Key object used to save will be updated to contain the path with its\n// generated ID.\n//-\nvar key = dataset.key('Company');\n\ndataset.save({\n  key: key,\n  data: {\n    rating: '10'\n  }\n}, function(err) {\n  console.log(key.path); // [ 'Company', 5669468231434240 ]\n  console.log(key.namespace); // undefined\n});\n\n//-\n// Save a single entity using a provided name instead of auto-generated ID.\n//\n// Here we are providing a key with name instead of an ID. After saving, the\n// original Key object used to save will be updated to contain the path with\n// the name instead of a generated ID.\n//-\nvar key = dataset.key(['Company', 'donutshack']);\n\ndataset.save({\n  key: key,\n  data: {\n    name: 'DonutShack',\n    rating: 8\n  }\n}, function(err) {\n  console.log(key.path); // ['Company', 'donutshack']\n  console.log(key.namespace); // undefined\n});\n\n//-\n// Save a single entity with a provided namespace. Namespaces allow for\n// multitenancy. To read more about this, see\n// [the Datastore docs on key concepts](https://goo.gl/M1LUAu).\n//\n// Here we are providing a key with namespace.\n//-\nvar key = dataset.key({\n  namespace: 'my-namespace',\n  path: ['Company', 'donutshack']\n});\n\ndataset.save({\n  key: key,\n  data: {\n    name: 'DonutShack',\n    rating: 8\n  }\n}, function(err) {\n  console.log(key.path); // ['Company', 'donutshack']\n  console.log(key.namespace); // 'my-namespace'\n});\n\n//-\n// Save different types of data, including ints, doubles, dates, booleans,\n// blobs, and lists.\n//\n// Notice that we are providing an incomplete key. After saving, the original\n// Key object used to save will be updated to contain the path with its\n// generated ID.\n//-\nvar key = dataset.key('Company');\n\ndataset.save({\n  key: key,\n  data: {\n    name: 'DonutShack', // strings\n    rating: gcloud.datastore.int(8), // ints\n    worth: gcloud.datastore.double(123456.78), // doubles\n    numDonutsServed: 45, // detect number type (int or double)\n    founded: new Date('Tue May 12 2015 15:30:00 GMT-0400 (EDT)'), // dates\n    isStartup: true, // booleans\n    donutEmoji: new Buffer('\\uD83C\\uDF69'), // buffers\n    keywords: [ 'donut', 'coffee', 'yum' ] // lists of objects\n  }\n}, function(err) {});\n\n//-\n// To specify an `excludeFromIndexes` value for a Datastore entity, pass in\n// an array for the key's data. The above example would then look like:\n//-\ndataset.save({\n  key: dataset.key('Company'),\n  data: [\n    {\n      name: 'rating',\n      value: '10',\n      excludeFromIndexes: false\n    }\n  ]\n}, function(err) {});\n\n//-\n// Save multiple entities at once.\n//-\nvar companyKey = dataset.key(['Company', 123]);\nvar productKey = dataset.key(['Product', 'Computer']);\n\ndataset.save([\n  {\n    key: companyKey,\n    data: {\n      HQ: 'Dallas, TX'\n    }\n  },\n  {\n    key: productKey,\n    data: {\n      vendor: 'Dell'\n    }\n  }\n], function(err) {});\n\n//-\n// Explicitly attempt to 'insert' a specific entity.\n//-\nvar userKey = dataset.key(['User', 'chilts']);\n\ndataset.save([\n  {\n    key: userKey,\n    method: 'insert', // force the method to 'insert'\n    data: {\n      fullName: 'Andrew Chilton'\n    }\n  }\n], function(err, apiResponse) {});","html":"<p>//-<br />// Save a single entity.<br />//<br />// Notice that we are providing an incomplete key. After saving, the original<br />// Key object used to save will be updated to contain the path with its<br />// generated ID.<br />//-<br />var key = dataset.key(&#39;Company&#39;);</p><p>dataset.save({<br />  key: key,<br />  data: {<br />    rating: &#39;10&#39;<br />  }<br />}, function(err) {<br />  console.log(key.path); // [ &#39;Company&#39;, 5669468231434240 ]<br />  console.log(key.namespace); // undefined<br />});</p><p>//-<br />// Save a single entity using a provided name instead of auto-generated ID.<br />//<br />// Here we are providing a key with name instead of an ID. After saving, the<br />// original Key object used to save will be updated to contain the path with<br />// the name instead of a generated ID.<br />//-<br />var key = dataset.key([&#39;Company&#39;, &#39;donutshack&#39;]);</p><p>dataset.save({<br />  key: key,<br />  data: {<br />    name: &#39;DonutShack&#39;,<br />    rating: 8<br />  }<br />}, function(err) {<br />  console.log(key.path); // [&#39;Company&#39;, &#39;donutshack&#39;]<br />  console.log(key.namespace); // undefined<br />});</p><p>//-<br />// Save a single entity with a provided namespace. Namespaces allow for<br />// multitenancy. To read more about this, see<br />// <a href=\"https://goo.gl/M1LUAu\">the Datastore docs on key concepts</a>.<br />//<br />// Here we are providing a key with namespace.<br />//-<br />var key = dataset.key({<br />  namespace: &#39;my-namespace&#39;,<br />  path: [&#39;Company&#39;, &#39;donutshack&#39;]<br />});</p><p>dataset.save({<br />  key: key,<br />  data: {<br />    name: &#39;DonutShack&#39;,<br />    rating: 8<br />  }<br />}, function(err) {<br />  console.log(key.path); // [&#39;Company&#39;, &#39;donutshack&#39;]<br />  console.log(key.namespace); // &#39;my-namespace&#39;<br />});</p><p>//-<br />// Save different types of data, including ints, doubles, dates, booleans,<br />// blobs, and lists.<br />//<br />// Notice that we are providing an incomplete key. After saving, the original<br />// Key object used to save will be updated to contain the path with its<br />// generated ID.<br />//-<br />var key = dataset.key(&#39;Company&#39;);</p><p>dataset.save({<br />  key: key,<br />  data: {<br />    name: &#39;DonutShack&#39;, // strings<br />    rating: gcloud.datastore.int(8), // ints<br />    worth: gcloud.datastore.double(123456.78), // doubles<br />    numDonutsServed: 45, // detect number type (int or double)<br />    founded: new Date(&#39;Tue May 12 2015 15:30:00 GMT-0400 (EDT)&#39;), // dates<br />    isStartup: true, // booleans<br />    donutEmoji: new Buffer(&#39;\\uD83C\\uDF69&#39;), // buffers<br />    keywords: [ &#39;donut&#39;, &#39;coffee&#39;, &#39;yum&#39; ] // lists of objects<br />  }<br />}, function(err) {});</p><p>//-<br />// To specify an <code>excludeFromIndexes</code> value for a Datastore entity, pass in<br />// an array for the key&#39;s data. The above example would then look like:<br />//-<br />dataset.save({<br />  key: dataset.key(&#39;Company&#39;),<br />  data: [<br />    {<br />      name: &#39;rating&#39;,<br />      value: &#39;10&#39;,<br />      excludeFromIndexes: false<br />    }<br />  ]<br />}, function(err) {});</p><p>//-<br />// Save multiple entities at once.<br />//-<br />var companyKey = dataset.key([&#39;Company&#39;, 123]);<br />var productKey = dataset.key([&#39;Product&#39;, &#39;Computer&#39;]);</p><p>dataset.save([<br />  {<br />    key: companyKey,<br />    data: {<br />      HQ: &#39;Dallas, TX&#39;<br />    }<br />  },<br />  {<br />    key: productKey,<br />    data: {<br />      vendor: &#39;Dell&#39;<br />    }<br />  }<br />], function(err) {});</p><p>//-<br />// Explicitly attempt to &#39;insert&#39; a specific entity.<br />//-<br />var userKey = dataset.key([&#39;User&#39;, &#39;chilts&#39;]);</p><p>dataset.save([<br />  {<br />    key: userKey,<br />    method: &#39;insert&#39;, // force the method to &#39;insert&#39;<br />    data: {<br />      fullName: &#39;Andrew Chilton&#39;<br />    }<br />  }<br />], function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Insert or update the specified object(s). If a key is incomplete, its<br />associated object is inserted and the original Key object is updated to<br />contain the generated ID.</p><p>This method will determine the correct Datastore method to execute (<code>upsert</code>,<br /><code>insert</code>, <code>update</code>, and <code>insertAutoId</code>) by using the key(s) provided. For<br />example, if you provide an incomplete key (one without an ID), the request<br />will create a new entity and have its ID automatically assigned. If you<br />provide a complete key, the entity will be updated with the data specified.</p><p>By default, all properties are indexed. To prevent a property from being<br />included in <em>all</em> indexes, you must supply an entity&#39;s <code>data</code> property as an<br />array. See below for an example.</p>","summary":"<p>Insert or update the specified object(s). If a key is incomplete, its<br />associated object is inserted and the original Key object is updated to<br />contain the generated ID.</p>","body":"<p>This method will determine the correct Datastore method to execute (<code>upsert</code>,<br /><code>insert</code>, <code>update</code>, and <code>insertAutoId</code>) by using the key(s) provided. For<br />example, if you provide an incomplete key (one without an ID), the request<br />will create a new entity and have its ID automatically assigned. If you<br />provide a complete key, the entity will be updated with the data specified.</p><p>By default, all properties are indexed. To prevent a property from being<br />included in <em>all</em> indexes, you must supply an entity&#39;s <code>data</code> property as an<br />array. See below for an example.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":211,"codeStart":380,"code":"DatastoreRequest.prototype.save = function(entities, callback) {\n  entities = arrify(entities);\n\n  var insertIndexes = [];\n\n  var req = {\n    mutation: entities.reduce(function(acc, entityObject, index) {\n      var ent = {};\n      var method = entityObject.method;\n      delete entityObject.method;\n\n      if (Array.isArray(entityObject.data)) {\n        ent.property = entityObject.data.map(function(data) {\n          data.value = entity.valueToProperty(data.value);\n\n          if (is.boolean(data.excludeFromIndexes)) {\n            var indexed = !data.excludeFromIndexes;\n\n            if (is.array(data.value.list_value)) {\n              data.value.list_value =\n                data.value.list_value.map(propAssign('indexed', indexed));\n            } else {\n              data.value.indexed = indexed;\n            }\n\n            delete data.excludeFromIndexes;\n          }\n\n          return data;\n        });\n      } else {\n        ent = entity.entityToEntityProto(entityObject.data);\n      }\n\n      ent.key = entity.keyToKeyProto(entityObject.key);\n\n      if (method) {\n        switch (method) {\n          case 'insert': {\n            acc.insert.push(ent);\n            break;\n          }\n          case 'update': {\n            acc.update.push(ent);\n            break;\n          }\n          case 'upsert': {\n            acc.upsert.push(ent);\n            break;\n          }\n          case 'insert_auto_id': {\n            insertIndexes.push(index);\n            acc.insert_auto_id.push(ent);\n            break;\n          }\n        }\n      } else {\n        if (entity.isKeyComplete(entityObject.key)) {\n          acc.upsert.push(ent);\n        } else {\n          insertIndexes.push(index);\n          acc.insert_auto_id.push(ent);\n        }\n      }\n\n      return acc;\n    }, {\n      insert: [],\n      update: [],\n      upsert: [],\n      insert_auto_id: []\n    })\n  };\n\n  if (this.id) {\n    this.requests_.push(req);\n    this.requestCallbacks_.push(onCommit);\n    return;\n  } else {\n    this.makeReq_('commit', req, onCommit);\n  }\n\n  function onCommit(err, resp) {\n    if (err || !resp) {\n      callback(err, resp);\n      return;\n    }\n\n    var autoInserted = (resp.mutation_result.insert_auto_id_key || []);\n    autoInserted.forEach(function(key, index) {\n      var path = entity.keyFromKeyProto(key).path;\n      entities[insertIndexes[index]].key.path = path;\n    });\n\n    callback(null, resp);\n  }\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"save","string":"DatastoreRequest.prototype.save()"}},{"tags":[{"type":"resource","string":"[Datasets: commit API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit#mutation.delete} ","html":"<p>[Datasets: commit API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit#mutation.delete}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit#mutation.delete}</a> </p>"},{"type":"param","string":"{Key|Key[]} key - Datastore key object(s).","name":"key","description":"<ul>\n<li>Datastore key object(s).</li>\n</ul>\n","types":["Key","Array.<Key>"],"typesDescription":"<a href=\"Key.html\">Key</a>|<code>Array</code>.&lt;<a href=\"Key.html\">Key</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Where you see `transaction`, assume this is the context that's relevant to\n// your use case, whether that be a Dataset or a Transaction object.\n//-\n\n// Delete a single entity.\ntransaction.delete(dataset.key(['Company', 123]), function(err, apiResp) {});\n\n// Delete multiple entities at once.\ntransaction.delete([\n  dataset.key(['Company', 123]),\n  dataset.key(['Product', 'Computer'])\n], function(err, apiResponse) {});","html":"<p>//-<br />// Where you see <code>transaction</code>, assume this is the context that&#39;s relevant to<br />// your use case, whether that be a Dataset or a Transaction object.<br />//-</p><p>// Delete a single entity.<br />transaction.delete(dataset.key([&#39;Company&#39;, 123]), function(err, apiResp) {});</p><p>// Delete multiple entities at once.<br />transaction.delete([<br />  dataset.key([&#39;Company&#39;, 123]),<br />  dataset.key([&#39;Product&#39;, &#39;Computer&#39;])<br />], function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete all entities identified with the specified key(s).</p>","summary":"<p>Delete all entities identified with the specified key(s).</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":478,"codeStart":503,"code":"DatastoreRequest.prototype.delete = function(keys, callback) {\n  callback = callback || util.noop;\n\n  var req = {\n    mutation: {\n      delete: arrify(keys).map(entity.keyToKeyProto)\n    }\n  };\n\n  if (this.id) {\n    this.requests_.push(req);\n    return;\n  }\n\n  this.makeReq_('commit', req, callback);\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"delete","string":"DatastoreRequest.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Datasets: runQuery API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/runQuery} ","html":"<p>[Datasets: runQuery API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/runQuery}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/runQuery}</a> </p>"},{"type":"param","string":"{module:datastore/query} q - Query object.","name":"q","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function. If omitted, a readable\n    stream instance is returned.","name":"callback","description":"<ul>\n<li>The callback function. If omitted, a readable     stream instance is returned.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request\n    (may be null).","name":"callback.err","description":"<ul>\n<li>An error returned while making this request     (may be null).</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.entities - The list of entities returned by this\n    query. Note that this is a single page of entities, not necessarily\n    all of the entities.","name":"callback.entities","description":"<ul>\n<li>The list of entities returned by this     query. Note that this is a single page of entities, not necessarily<br />  all of the entities.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:datastore/query} callback.nextQuery - If present, run another\n    query with this object to check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, run another     query with this object to check for more results.</li>\n</ul>\n","types":["module:datastore/query"],"typesDescription":"module:<a href=\"module%3Adatastore%2Fquery.html\">datastore/query</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.","name":"callback.apiResponse","description":"<ul>\n<li>The full API response.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:datastore/entity[]} callback.entities - A list of Entities","name":"callback.entities","description":"<ul>\n<li>A list of Entities</li>\n</ul>\n","types":["Array.<module:datastore/entity>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Adatastore%2Fentity.html\">datastore/entity</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Where you see `transaction`, assume this is the context that's relevant to\n// your use, whether that be a Dataset or a Transaction object.\n//-\nvar query = dataset.createQuery('Lion');\n\ntransaction.runQuery(query, function(err, entities) {\n  if (!err) {\n    // Handle entities here.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, call `autoPaginate(false)` on your query.\n//-\nvar manualPageQuery = dataset.createQuery('Lion').autoPaginate(false);\n\nvar callback = function(err, entities, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results might exist.\n    transaction.runQuery(nextQuery, callback);\n  }\n};\n\ntransaction.runQuery(manualPageQuery, callback);\n\n//-\n// If you omit the callback, runQuery will automatically call subsequent\n// queries until no results remain. Entity objects will be pushed as they are\n// found.\n//-\ntransaction.runQuery(query)\n  .on('error', console.error)\n  .on('data', function (entity) {})\n  .on('end', function() {\n    // All entities retrieved.\n  });\n\n//-\n// A keys-only query returns just the keys of the result entities instead of\n// the entities themselves, at lower latency and cost.\n//-\nvar keysOnlyQuery = dataset.createQuery('Lion').select('__key__');\n\ntransaction.runQuery(keysOnlyQuery, function(err, entities) {\n  // entities[].key = Key object\n  // entities[].data = Empty object\n});","html":"<p>//-<br />// Where you see <code>transaction</code>, assume this is the context that&#39;s relevant to<br />// your use, whether that be a Dataset or a Transaction object.<br />//-<br />var query = dataset.createQuery(&#39;Lion&#39;);</p><p>transaction.runQuery(query, function(err, entities) {<br />  if (!err) {<br />    // Handle entities here.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, call <code>autoPaginate(false)</code> on your query.<br />//-<br />var manualPageQuery = dataset.createQuery(&#39;Lion&#39;).autoPaginate(false);</p><p>var callback = function(err, entities, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results might exist.<br />    transaction.runQuery(nextQuery, callback);<br />  }<br />};</p><p>transaction.runQuery(manualPageQuery, callback);</p><p>//-<br />// If you omit the callback, runQuery will automatically call subsequent<br />// queries until no results remain. Entity objects will be pushed as they are<br />// found.<br />//-<br />transaction.runQuery(query)<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function (entity) {})<br />  .on(&#39;end&#39;, function() {<br />    // All entities retrieved.<br />  });</p><p>//-<br />// A keys-only query returns just the keys of the result entities instead of<br />// the entities themselves, at lower latency and cost.<br />//-<br />var keysOnlyQuery = dataset.createQuery(&#39;Lion&#39;).select(&#39;<strong>key</strong>&#39;);</p><p>transaction.runQuery(keysOnlyQuery, function(err, entities) {<br />  // entities[].key = Key object<br />  // entities[].data = Empty object<br />});</p>"}],"description":{"full":"<p>Datastore allows you to query entities by kind, filter them by property<br />filters, and sort them by a property name. Projection and pagination are also<br />supported.</p><p>If you provide a callback, the query is run, and the results are returned as<br />the second argument to your callback. A third argument may also exist, which<br />is a query object that uses the end cursor from the previous query as the<br />starting cursor for the next query. You can pass that object back to this<br />method to see if more results exist.</p><p>You may also omit the callback to this function to trigger streaming mode.</p><p>See below for examples of both approaches.</p>","summary":"<p>Datastore allows you to query entities by kind, filter them by property<br />filters, and sort them by a property name. Projection and pagination are also<br />supported.</p>","body":"<p>If you provide a callback, the query is run, and the results are returned as<br />the second argument to your callback. A third argument may also exist, which<br />is a query object that uses the end cursor from the previous query as the<br />starting cursor for the next query. You can pass that object back to this<br />method to see if more results exist.</p><p>You may also omit the callback to this function to trigger streaming mode.</p><p>See below for examples of both approaches.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":520,"codeStart":605,"code":"DatastoreRequest.prototype.runQuery = function(query, callback) {\n  var req = {\n    read_options: {},\n    query: entity.queryToQueryProto(query)\n  };\n\n  if (query.namespace) {\n    req.partition_id = {\n      namespace: query.namespace\n    };\n  }\n\n  this.makeReq_('runQuery', req, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var entities = entity.formatArray(resp.batch.entity_result);\n    var nextQuery = null;\n\n    if (resp.batch.end_cursor && entities.length > 0) {\n      var endCursor = resp.batch.end_cursor.toBase64();\n\n      nextQuery = extend(true, new Query(), query);\n      nextQuery.start(endCursor).offset(0);\n    }\n\n    callback(null, entities, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"runQuery","string":"DatastoreRequest.prototype.runQuery()"}},{"tags":[{"type":"resource","string":"[Datasets: allocateIds API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/allocateIds} ","html":"<p>[Datasets: allocateIds API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/allocateIds}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/allocateIds}</a> </p>"},{"type":"param","string":"{Key} incompleteKey - The key object to complete.","name":"incompleteKey","description":"<ul>\n<li>The key object to complete.</li>\n</ul>\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} n - How many IDs to generate.","name":"n","description":"<ul>\n<li>How many IDs to generate.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.keys - The generated IDs","name":"callback.keys","description":"<ul>\n<li>The generated IDs</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Where you see `transaction`, assume this is the context that's relevant to\n// your use, whether that be a Dataset or a Transaction object.\n//-\n\nvar incompleteKey = dataset.key(['Company']);\n\n// The following call will create 100 new IDs from the Company kind, which\n// exists under the default namespace.\ntransaction.allocateIds(incompleteKey, 100, function(err, keys) {});\n\n// You may prefer to create IDs from a non-default namespace by providing an\n// incomplete key with a namespace. Similar to the previous example, the call\n// below will create 100 new IDs, but from the Company kind that exists under\n// the \"ns-test\" namespace.\nvar incompleteKey = dataset.key({\n  namespace: 'ns-test',\n  path: ['Company']\n});\nvar callback = function(err, keys, apiResponse) {};\ntransaction.allocateIds(incompleteKey, 100, callback);","html":"<p>//-<br />// Where you see <code>transaction</code>, assume this is the context that&#39;s relevant to<br />// your use, whether that be a Dataset or a Transaction object.<br />//-</p><p>var incompleteKey = dataset.key([&#39;Company&#39;]);</p><p>// The following call will create 100 new IDs from the Company kind, which<br />// exists under the default namespace.<br />transaction.allocateIds(incompleteKey, 100, function(err, keys) {});</p><p>// You may prefer to create IDs from a non-default namespace by providing an<br />// incomplete key with a namespace. Similar to the previous example, the call<br />// below will create 100 new IDs, but from the Company kind that exists under<br />// the &quot;ns-test&quot; namespace.<br />var incompleteKey = dataset.key({<br />  namespace: &#39;ns-test&#39;,<br />  path: [&#39;Company&#39;]<br />});<br />var callback = function(err, keys, apiResponse) {};<br />transaction.allocateIds(incompleteKey, 100, callback);</p>"}],"description":{"full":"<p>Generate IDs without creating entities.</p>","summary":"<p>Generate IDs without creating entities.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":637,"codeStart":672,"code":"DatastoreRequest.prototype.allocateIds = function(incompleteKey, n, callback) {\n  if (entity.isKeyComplete(incompleteKey)) {\n    throw new Error('An incomplete key should be provided.');\n  }\n\n  var incompleteKeys = [];\n  for (var i = 0; i < n; i++) {\n    incompleteKeys.push(entity.keyToKeyProto(incompleteKey));\n  }\n\n  var req = {\n    key: incompleteKeys\n  };\n\n  this.makeReq_('allocateIds', req, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var keys = (resp.key || []).map(entity.keyFromKeyProto);\n\n    callback(null, keys, resp);\n  });\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"allocateIds","string":"DatastoreRequest.prototype.allocateIds()"}},{"tags":[],"description":{"full":"<p>Maps to {module:datastore/dataset#save}, forcing the method to be <code>update</code>.</p>","summary":"<p>Maps to {module:datastore/dataset#save}, forcing the method to be <code>update</code>.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":698,"codeStart":701,"code":"DatastoreRequest.prototype.update = function(entities, callback) {\n  entities = arrify(entities).map(propAssign('method', 'update'));\n  this.save(entities, callback);\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"update","string":"DatastoreRequest.prototype.update()"}},{"tags":[],"description":{"full":"<p>Maps to {module:datastore/dataset#save}, forcing the method to be <code>upsert</code>.</p>","summary":"<p>Maps to {module:datastore/dataset#save}, forcing the method to be <code>upsert</code>.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":706,"codeStart":709,"code":"DatastoreRequest.prototype.upsert = function(entities, callback) {\n  entities = arrify(entities).map(propAssign('method', 'upsert'));\n  this.save(entities, callback);\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"upsert","string":"DatastoreRequest.prototype.upsert()"}},{"tags":[{"type":"param","string":"{string} method - Datastore action (allocateIds, commit, etc.).","name":"method","description":"<ul>\n<li>Datastore action (allocateIds, commit, etc.).</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} body - Request configuration object.","name":"body","description":"<ul>\n<li>Request configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"private","string":"\n","visibility":"private","html":""},{"type":"example","string":"var deleteRequest = {\n  mutation: {\n    delete: [] // datastore key objects.\n  }\n};\n\nvar dataset = gcloud.datastore.dataset({ projectId: 'project-id' });\nvar callback = function(err, result, apiResponse) {};\nvar Transaction = require('gcloud/lib/datastore/transaction');\nvar transaction = new Transaction(dataset, 'my-project-id');\ntransaction.makeReq_('commit', deleteRequest, callback);","html":"<p>var deleteRequest = {<br />  mutation: {<br />    delete: [] // datastore key objects.<br />  }<br />};</p><p>var dataset = gcloud.datastore.dataset({ projectId: &#39;project-id&#39; });<br />var callback = function(err, result, apiResponse) {};<br />var Transaction = require(&#39;gcloud/lib/datastore/transaction&#39;);<br />var transaction = new Transaction(dataset, &#39;my-project-id&#39;);<br />transaction.makeReq_(&#39;commit&#39;, deleteRequest, callback);</p>"}],"description":{"full":"<p>Make a request to the API endpoint. Properties to indicate a transactional or<br />non-transactional operation are added automatically.</p>","summary":"<p>Make a request to the API endpoint. Properties to indicate a transactional or<br />non-transactional operation are added automatically.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":714,"codeStart":737,"code":"DatastoreRequest.prototype.makeReq_ = function(method, body, callback) {\n  // TODO: Handle non-HTTP 200 cases.\n  if (!callback) {\n    callback = body;\n    body = {};\n  }\n\n  callback = callback || util.noop;\n\n  // Set properties to indicate if we're in a transaction or not.\n  if (method === 'commit') {\n    if (this.id) {\n      body.mode = MODE_TRANSACTIONAL;\n      body.transaction = this.id;\n    } else {\n      body.mode = MODE_NON_TRANSACTIONAL;\n    }\n  }\n\n  if (method === 'rollback') {\n    body.transaction = this.id;\n  }\n\n  if (method === 'lookup' && this.id) {\n    body.read_options = body.read_options || {};\n    body.read_options.transaction = this.id;\n  }\n\n  var pbKey = method[0].toUpperCase() + method.substr(1);\n  var pbRequest = new pb[pbKey + 'Request'](body).toBuffer();\n  var pbResponse = pb[pbKey + 'Response'];\n\n  var reqOpts = {\n    method: 'POST',\n    uri: format('{apiEndpoint}/{path}/{projectId}/{method}', {\n      apiEndpoint: this.apiEndpoint,\n      path: 'datastore/v1beta2/datasets',\n      projectId: this.projectId,\n      method: method\n    }),\n    headers: {\n      'Content-Type': 'application/x-protobuf'\n    }\n  };\n\n  this.makeAuthorizedRequest_(reqOpts, {\n    onAuthorized: function(err, authorizedReqOpts) {\n      if (err) {\n        callback(err, null); // TODO(ryanseys): What goes as third parameter?\n        return;\n      }\n\n      authorizedReqOpts.headers = authorizedReqOpts.headers || {};\n      authorizedReqOpts.headers['Content-Length'] = pbRequest.length;\n\n      var apiRequest = request(authorizedReqOpts);\n\n      apiRequest.on('error', callback);\n\n      apiRequest.on('response', function(resp) {\n        var buffer = new Buffer('');\n        resp.on('data', function(chunk) {\n          buffer = Buffer.concat([buffer, chunk]);\n        });\n        resp.on('end', function() {\n          util.handleResp(null, resp, buffer.toString(), function(err, result) {\n            if (err) {\n              callback(err, null, result);\n              return;\n            }\n            callback(null, pbResponse.decode(buffer), result);\n          });\n        });\n      });\n\n      apiRequest.end(pbRequest);\n    }\n  });\n};","ctx":{"type":"method","constructor":"DatastoreRequest","cons":"DatastoreRequest","name":"makeReq_","string":"DatastoreRequest.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>This method can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>This method can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":817,"codeStart":822,"code":"streamRouter.extend(DatastoreRequest, 'runQuery');\n\nmodule.exports = DatastoreRequest;","ctx":false}],"datastore/transaction":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"datastore/transaction","html":"<p>datastore/transaction</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar nodeutil = require('util');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:datastore/request}","types":["module:datastore/request"],"typesDescription":"module:<a href=\"module%3Adatastore%2Frequest.html\">datastore/request</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore/request}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var DatastoreRequest = require('./request.js');\n\nvar extend = require('extend');","ctx":{"type":"declaration","name":"DatastoreRequest","value":"require('./request.js')","string":"DatastoreRequest"}},{"tags":[{"type":"param","string":"{module:common/connection#Connection} connection - An authorized\n    connection to Google Cloud Datastore.","name":"connection","description":"<ul>\n<li>An authorized     connection to Google Cloud Datastore.</li>\n</ul>\n","types":[],"typesDescription":"<code>?</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} projectId - Dataset ID. This is your project ID from the\n    Google Developers Console.\n","name":"projectId","description":"<ul>\n<li>Dataset ID. This is your project ID from the     Google Developers Console.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"// This is how to create a transaction object directly using this Transaction\n// class. The following transaction object is created for use in the examples\n// in this file below.\nvar dataset = gcloud.datastore.dataset({ projectId: 'project-id' });\nvar Transaction = require('gcloud/lib/datastore/transaction');\nvar transaction = new Transaction(dataset, 'my-project-id');\ntransaction.id = '1234'; // Give the transaction an ID.","html":"<p>// This is how to create a transaction object directly using this Transaction<br />// class. The following transaction object is created for use in the examples<br />// in this file below.<br />var dataset = gcloud.datastore.dataset({ projectId: &#39;project-id&#39; });<br />var Transaction = require(&#39;gcloud/lib/datastore/transaction&#39;);<br />var transaction = new Transaction(dataset, &#39;my-project-id&#39;);<br />transaction.id = &#39;1234&#39;; // Give the transaction an ID.</p>"}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":40,"codeStart":56},{"tags":[{"type":"resource","string":"[Transactions Reference]{@link https://cloud.google.com/datastore/docs/concepts/transactions} ","html":"<p>[Transactions Reference]{@link <a href=\"https://cloud.google.com/datastore/docs/concepts/transactions}\">https://cloud.google.com/datastore/docs/concepts/transactions}</a> </p>"},{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:datastore/transaction","html":"<p>module:datastore/transaction</p>"},{"type":"mixes","string":"module:datastore/request ","html":"<p>module:datastore/request </p>"},{"type":"example","string":"dataset.runInTransaction(function(transaction, done) {\n  // `transaction` is a Transaction object.\n}, function(err) {});","html":"<p>dataset.runInTransaction(function(transaction, done) {<br />  // <code>transaction</code> is a Transaction object.<br />}, function(err) {});</p>"}],"description":{"full":"<p>Build a Transaction object. Transactions will be created for you by<br />{@linkcode module:datastore/dataset}. When you need to run a transactional<br />operation, use {@linkcode module:datastore/dataset#runInTransaction}.</p>","summary":"<p>Build a Transaction object. Transactions will be created for you by<br />{@linkcode module:datastore/dataset}. When you need to run a transactional<br />operation, use {@linkcode module:datastore/dataset#runInTransaction}.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":56,"codeStart":72,"code":"function Transaction(dataset, projectId) {\n  this.id = null;\n  this.apiEndpoint = dataset.apiEndpoint;\n  this.makeAuthorizedRequest_ = dataset.makeAuthorizedRequest_;\n  this.projectId = projectId;\n\n  // A queue for entity modifications made during the transaction.\n  this.modifiedEntities_ = [];\n\n  // Queue the callbacks that process the API responses.\n  this.requestCallbacks_ = [];\n\n  // Queue the requests to make when we send the transactional commit.\n  this.requests_ = [];\n}\n\nnodeutil.inherits(Transaction, DatastoreRequest);","ctx":{"type":"constructor","name":"Transaction","string":"Transaction()"}},{"tags":[{"type":"param","string":"{function} callback - The function to execute within the context of\n    a transaction.\n","name":"callback","description":"<ul>\n<li>The function to execute within the context of     a transaction.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"private","string":"\n","visibility":"private","html":""},{"type":"example","string":"transaction.begin_(function(err) {\n  // Perform Datastore operations as usual.\n});","html":"<p>transaction.begin_(function(err) {<br />  // Perform Datastore operations as usual.<br />});</p>"}],"description":{"full":"<p>Begin a remote transaction and identify the current transaction instance with<br />the remote transaction&#39;s ID.</p>","summary":"<p>Begin a remote transaction and identify the current transaction instance with<br />the remote transaction&#39;s ID.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":90,"codeStart":104,"code":"Transaction.prototype.begin_ = function(callback) {\n  var that = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('beginTransaction', function(err, resp) {\n    if (err) {\n      callback(err, resp);\n      return;\n    }\n\n    that.id = resp.transaction;\n\n    callback(null, resp);\n  });\n};","ctx":{"type":"method","constructor":"Transaction","cons":"Transaction","name":"begin_","string":"Transaction.prototype.begin_()"}},{"tags":[{"type":"resource","string":"[Datasets: rollback API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/rollback} ","html":"<p>[Datasets: rollback API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/rollback}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/rollback}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"transaction.rollback(function(err, apiResponse) {\n  if (err) {\n    // Transaction could not be rolled back.\n  }\n});","html":"<p>transaction.rollback(function(err, apiResponse) {<br />  if (err) {<br />    // Transaction could not be rolled back.<br />  }<br />});</p>"}],"description":{"full":"<p>Reverse a transaction remotely and finalize the current transaction instance.</p>","summary":"<p>Reverse a transaction remotely and finalize the current transaction instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":121,"codeStart":137,"code":"Transaction.prototype.rollback = function(callback) {\n  var that = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('rollback', function(err, resp) {\n    that.skipCommit = true;\n\n    callback(err || null, resp);\n  });\n};","ctx":{"type":"method","constructor":"Transaction","cons":"Transaction","name":"rollback","string":"Transaction.prototype.rollback()"}},{"tags":[{"type":"param","string":"{function} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"private","string":"\n","visibility":"private","html":""},{"type":"example","string":"transaction.commit_(function(err, apiResponse) {\n  if (err) {\n    // Transaction could not be committed.\n  }\n});","html":"<p>transaction.commit_(function(err, apiResponse) {<br />  if (err) {<br />    // Transaction could not be committed.<br />  }<br />});</p>"}],"description":{"full":"<p>Commit the remote transaction and finalize the current transaction instance.<br />This function is provided as the <code>done</code> function in the callback of<br /><code>dataset.runInTransaction(function(transaction, done) {});</code></p>","summary":"<p>Commit the remote transaction and finalize the current transaction instance.<br />This function is provided as the <code>done</code> function in the callback of<br /><code>dataset.runInTransaction(function(transaction, done) {});</code></p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":149,"codeStart":165,"code":"Transaction.prototype.commit_ = function(callback) {\n  var that = this;\n\n  callback = callback || util.noop;\n\n  if (this.skipCommit) {\n    setImmediate(callback);\n    return;\n  }\n\n  var keys = {};\n\n  this.modifiedEntities_\n\n    // Reverse the order of the queue to respect the \"last queued request wins\"\n    // behavior.\n    .reverse()\n\n    // Limit the operations we're going to send through to only the most\n    // recently queued operations. E.g., if a user tries to save with the same\n    // key they just asked to be deleted, the delete request will be ignored,\n    // giving preference to the save operation.\n    .filter(function(modifiedEntity) {\n      var key = JSON.stringify(modifiedEntity.entity.key);\n\n      if (!keys[key]) {\n        keys[key] = true;\n        return true;\n      }\n    })\n\n    // Group entities together by action (delete or save).\n    .sort(function(a, b) {\n      return a.method > b.method ? 1 : a.method < b.method ? -1 : 0;\n    })\n\n    // Group arguments together so that we only make one call to each method.\n    // This is important for `DatastoreRequest.save`, especially, as that method\n    // handles assigning auto-generated IDs to the original keys passed in. When\n    // we eventually execute the `save` method's API callback, having all the\n    // keys together is necessary to maintain order.\n    .reduce(function(acc, entityObject) {\n      var lastEntityObject = acc[acc.length - 1];\n      var sameMethod = lastEntityObject &&\n        entityObject.method === lastEntityObject.method;\n\n      if (!lastEntityObject || !sameMethod) {\n        acc.push(entityObject);\n      } else {\n        lastEntityObject.args = lastEntityObject.args.concat(entityObject.args);\n      }\n\n      return acc;\n    }, [])\n\n    // Call each of the mutational methods (DatastoreRequest[save,delete]) to\n    // build up a `req` array on this instance. This will also build up a\n    // `callbacks` array, that is the same callback that would run if we were\n    // using `save` and `delete` outside of a transaction, to process the\n    // response from the API.\n    .forEach(function(modifiedEntity) {\n      var method = modifiedEntity.method;\n      var args = modifiedEntity.args.reverse();\n\n      DatastoreRequest.prototype[method].call(that, args, util.noop);\n    });\n\n  // Take the `req` array built previously, and merge them into one request to\n  // send as the final transactional commit.\n  var req = this.requests_.reduce(function(acc, req) {\n    return extend(true, acc, req);\n  }, {});\n\n  this.makeReq_('commit', req, function(err, resp) {\n    if (err) {\n      callback(err, resp);\n      return;\n    }\n\n    // The `callbacks` array was built previously. These are the callbacks that\n    // handle the API response normally when using the DatastoreRequest.save and\n    // .delete methods.\n    that.requestCallbacks_.forEach(function(cb) {\n      cb(null, resp);\n    });\n\n    callback(null, resp);\n  });\n};","ctx":{"type":"method","constructor":"Transaction","cons":"Transaction","name":"commit_","string":"Transaction.prototype.commit_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>Below, we override two methods that we inherit from DatastoreRequest:<br /><code>delete</code> and <code>save</code>. This is done because:</p><p>  A) the documentation needs to be different for a transactional save, and<br />  B) we build up a &quot;modifiedEntities_&quot; array on this object, used to build<br />     the final commit request with.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Below, we override two methods that we inherit from DatastoreRequest:<br /><code>delete</code> and <code>save</code>. This is done because:</p><p>  A) the documentation needs to be different for a transactional save, and<br />  B) we build up a &quot;modifiedEntities_&quot; array on this object, used to build<br />     the final commit request with.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":255,"codeStart":264},{"tags":[{"type":"resource","string":"[Datasets: commit API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit#mutation.delete} ","html":"<p>[Datasets: commit API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit#mutation.delete}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit#mutation.delete}</a> </p>"},{"type":"param","string":"{Key|Key[]} key - Datastore key object(s).\n","name":"key","description":"<ul>\n<li>Datastore key object(s). </li>\n</ul>\n","types":["Key","Array.<Key>"],"typesDescription":"<a href=\"Key.html\">Key</a>|<code>Array</code>.&lt;<a href=\"Key.html\">Key</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"// Delete a single entity.\ntransaction.delete(dataset.key(['Company', 123]));\n\n// Delete multiple entities at once.\ntransaction.delete([\n  dataset.key(['Company', 123]),\n  dataset.key(['Product', 'Computer'])\n]);","html":"<p>// Delete a single entity.<br />transaction.delete(dataset.key([&#39;Company&#39;, 123]));</p><p>// Delete multiple entities at once.<br />transaction.delete([<br />  dataset.key([&#39;Company&#39;, 123]),<br />  dataset.key([&#39;Product&#39;, &#39;Computer&#39;])<br />]);</p>"}],"description":{"full":"<p>Delete all entities identified with the specified key(s) in the current<br />transaction.</p>","summary":"<p>Delete all entities identified with the specified key(s) in the current<br />transaction.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":264,"codeStart":282,"code":"Transaction.prototype.delete = function(entities) {\n  var that = this;\n\n  arrify(entities).forEach(function(ent) {\n    that.modifiedEntities_.push({\n      entity: {\n        key: ent\n      },\n      method: 'delete',\n      args: [ent]\n    });\n  });\n};","ctx":{"type":"method","constructor":"Transaction","cons":"Transaction","name":"delete","string":"Transaction.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Datasets: commit API Documentation]{@link https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit} ","html":"<p>[Datasets: commit API Documentation]{@link <a href=\"https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit}\">https://cloud.google.com/datastore/docs/apis/v1beta2/datasets/commit}</a> </p>"},{"type":"param","string":"{object|object[]} entities - Datastore key object(s).","name":"entities","description":"<ul>\n<li>Datastore key object(s).</li>\n</ul>\n","types":["object","Array.<object>"],"typesDescription":"<code>object</code>|<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Key} entities.key - Datastore key object.","name":"entities.key","description":"<ul>\n<li>Datastore key object.</li>\n</ul>\n","types":["Key"],"typesDescription":"<a href=\"Key.html\">Key</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|object[]} entities.data - Data to save with the provided key.\n    If you provide an array of objects, you must use the explicit syntax:\n    `name` for the name of the property and `value` for its value. You may\n    also specify an `excludeFromIndexes` property, set to `true` or `false`.\n","name":"entities.data","description":"<ul>\n<li>Data to save with the provided key.     If you provide an array of objects, you must use the explicit syntax:<br />  <code>name</code> for the name of the property and <code>value</code> for its value. You may<br />  also specify an <code>excludeFromIndexes</code> property, set to <code>true</code> or <code>false</code>.</li>\n</ul>\n","types":["object","Array.<object>"],"typesDescription":"<code>object</code>|<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Save a single entity.\n//\n// Notice that we are providing an incomplete key. After the transaction is\n// committed, the Key object held by the `key` variable will be populated\n// with a path containing its generated ID.\n//-\nvar key = dataset.key('Company');\n\ntransaction.save({\n  key: key,\n  data: {\n    rating: '10'\n  }\n});\n\n//-\n// To specify an `excludeFromIndexes` value for a Datastore entity, pass in\n// an array for the key's data. The above example would then look like:\n//-\ntransaction.save({\n  key: key,\n  data: [\n    {\n      name: 'rating',\n      value: '10',\n      excludeFromIndexes: false\n    }\n  ]\n});\n\n//-\n// Save multiple entities at once.\n//-\nvar companyKey = dataset.key(['Company', 123]);\nvar productKey = dataset.key(['Product', 'Computer']);\ntransaction.save([\n  {\n    key: companyKey,\n    data: {\n      HQ: 'Dallas, TX'\n    }\n  },\n  {\n    key: productKey,\n    data: {\n      vendor: 'Dell'\n    }\n  }\n]);","html":"<p>//-<br />// Save a single entity.<br />//<br />// Notice that we are providing an incomplete key. After the transaction is<br />// committed, the Key object held by the <code>key</code> variable will be populated<br />// with a path containing its generated ID.<br />//-<br />var key = dataset.key(&#39;Company&#39;);</p><p>transaction.save({<br />  key: key,<br />  data: {<br />    rating: &#39;10&#39;<br />  }<br />});</p><p>//-<br />// To specify an <code>excludeFromIndexes</code> value for a Datastore entity, pass in<br />// an array for the key&#39;s data. The above example would then look like:<br />//-<br />transaction.save({<br />  key: key,<br />  data: [<br />    {<br />      name: &#39;rating&#39;,<br />      value: &#39;10&#39;,<br />      excludeFromIndexes: false<br />    }<br />  ]<br />});</p><p>//-<br />// Save multiple entities at once.<br />//-<br />var companyKey = dataset.key([&#39;Company&#39;, 123]);<br />var productKey = dataset.key([&#39;Product&#39;, &#39;Computer&#39;]);<br />transaction.save([<br />  {<br />    key: companyKey,<br />    data: {<br />      HQ: &#39;Dallas, TX&#39;<br />    }<br />  },<br />  {<br />    key: productKey,<br />    data: {<br />      vendor: &#39;Dell&#39;<br />    }<br />  }<br />]);</p>"}],"description":{"full":"<p>Insert or update the specified object(s) in the current transaction. If a key<br />is incomplete, its associated object is inserted and the original Key object<br />is updated to contain the generated ID.</p><p>This method will determine the correct Datastore method to execute (<code>upsert</code>,<br /><code>insert</code>, <code>update</code>, and <code>insertAutoId</code>) by using the key(s) provided. For<br />example, if you provide an incomplete key (one without an ID), the request<br />will create a new entity and have its ID automatically assigned. If you<br />provide a complete key, the entity will be updated with the data specified.</p><p>By default, all properties are indexed. To prevent a property from being<br />included in <em>all</em> indexes, you must supply an entity&#39;s <code>data</code> property as an<br />array. See below for an example.</p>","summary":"<p>Insert or update the specified object(s) in the current transaction. If a key<br />is incomplete, its associated object is inserted and the original Key object<br />is updated to contain the generated ID.</p>","body":"<p>This method will determine the correct Datastore method to execute (<code>upsert</code>,<br /><code>insert</code>, <code>update</code>, and <code>insertAutoId</code>) by using the key(s) provided. For<br />example, if you provide an incomplete key (one without an ID), the request<br />will create a new entity and have its ID automatically assigned. If you<br />provide a complete key, the entity will be updated with the data specified.</p><p>By default, all properties are indexed. To prevent a property from being<br />included in <em>all</em> indexes, you must supply an entity&#39;s <code>data</code> property as an<br />array. See below for an example.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":296,"codeStart":372,"code":"Transaction.prototype.save = function(entities) {\n  var that = this;\n\n  arrify(entities).forEach(function(ent) {\n    that.modifiedEntities_.push({\n      entity: {\n        key: ent.key\n      },\n      method: 'save',\n      args: [ent]\n    });\n  });\n};","ctx":{"type":"method","constructor":"Transaction","cons":"Transaction","name":"save","string":"Transaction.prototype.save()"}},{"tags":[{"type":"todo","string":"Implement. ","html":"<p>Implement. </p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>mapQuery</p>","summary":"<p>mapQuery</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":386,"codeStart":393,"code":"Transaction.prototype.mapQuery = function() {\n  throw new Error('not yet implemented');\n};\n\nmodule.exports = Transaction;","ctx":{"type":"method","constructor":"Transaction","cons":"Transaction","name":"mapQuery","string":"Transaction.prototype.mapQuery()"}}],"dns/change":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"dns/change","html":"<p>dns/change</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';","ctx":false},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:dns/change ","html":"<p>module:dns/change </p>"},{"type":"param","string":"{module:dns/zone} zone - The parent zone object.","name":"zone","description":"<ul>\n<li>The parent zone object.</li>\n</ul>\n","types":["module:dns/zone"],"typesDescription":"module:<a href=\"module%3Adns%2Fzone.html\">dns/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} id - ID of the change.\n","name":"id","description":"<ul>\n<li>ID of the change. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar dns = gcloud.dns({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar zone = dns.zone('zone-id');\nvar change = zone.change('change-id');","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var dns = gcloud.dns({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var zone = dns.zone(&#39;zone-id&#39;);<br />var change = zone.change(&#39;change-id&#39;);</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":23,"codeStart":41,"code":"function Change(zone, id) {\n  this.zoneName = zone.name;\n  this.id = id;\n\n  this.metadata = {};\n  this.makeReq_ = zone.dns.makeReq_.bind(zone.dns);\n}","ctx":{"type":"constructor","name":"Change","string":"Change()"}},{"tags":[{"type":"resource","string":"[Changes: get API Documentation]{@link https://cloud.google.com/dns/api/v1/changes/get} ","html":"<p>[Changes: get API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/changes/get}\">https://cloud.google.com/dns/api/v1/changes/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.metadata - Metadata of the change from the API.","name":"callback.metadata","description":"<ul>\n<li>Metadata of the change from the API.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"change.getMetadata(function(err, metadata, apiResponse) {\n  if (!err) {\n    // metadata = {\n    //   kind: 'dns#change',\n    //   additions: [{...}],\n    //   deletions: [{...}],\n    //   startTime: '2015-07-21T14:40:06.056Z',\n    //   id: '1',\n    //   status: 'done'\n    // }\n  }\n});","html":"<p>change.getMetadata(function(err, metadata, apiResponse) {<br />  if (!err) {<br />    // metadata = {<br />    //   kind: &#39;dns#change&#39;,<br />    //   additions: [{...}],<br />    //   deletions: [{...}],<br />    //   startTime: &#39;2015-07-21T14:40:06.056Z&#39;,<br />    //   id: &#39;1&#39;,<br />    //   status: &#39;done&#39;<br />    // }<br />  }<br />});</p>"}],"description":{"full":"<p>Get the metadata for the change in the zone.</p>","summary":"<p>Get the metadata for the change in the zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":49,"codeStart":73,"code":"Change.prototype.getMetadata = function(callback) {\n  var self = this;\n  var path = '/managedZones/' + this.zoneName + '/changes/' + this.id;\n\n  this.makeReq_('GET', path, null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};\n\nmodule.exports = Change;","ctx":{"type":"method","constructor":"Change","cons":"Change","name":"getMetadata","string":"Change.prototype.getMetadata()"}}],"dns":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"dns","html":"<p>dns</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:dns/zone}","types":["module:dns/zone"],"typesDescription":"module:<a href=\"module%3Adns%2Fzone.html\">dns/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:dns/zone}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":42,"code":"var Zone = require('./zone.js');","ctx":{"type":"declaration","name":"Zone","value":"require('./zone.js')","string":"Zone"}},{"tags":[{"type":"const","string":"{string} Base URL for DNS API.","html":"<p>{string} Base URL for DNS API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":44,"codeStart":48,"code":"var DNS_BASE_URL = 'https://www.googleapis.com/dns/v1/projects/';","ctx":{"type":"declaration","name":"DNS_BASE_URL","value":"'https://www.googleapis.com/dns/v1/projects/'","string":"DNS_BASE_URL"}},{"tags":[{"type":"const","string":"{array} Required scopes for the DNS API.","html":"<p>{array} Required scopes for the DNS API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":50,"codeStart":54,"code":"var SCOPES = [\n  'https://www.googleapis.com/auth/ndev.clouddns.readwrite',\n  'https://www.googleapis.com/auth/cloud-platform'\n];","ctx":{"type":"declaration","name":"SCOPES","value":"[","string":"SCOPES"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:dns ","html":"<p>module:dns </p>"},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar dns = gcloud.dns();","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var dns = gcloud.dns();</p>"}],"description":{"full":"<p><a href=\"https://cloud.google.com/dns/what-is-cloud-dns\">Google Cloud DNS</a> is a high-<br />performance, resilient, global DNS service that provides a cost-effective way<br />to make your applications and services available to your users. This<br />programmable, authoritative DNS service can be used to easily publish and<br />manage DNS records using the same infrastructure relied upon by Google.</p>","summary":"<p><a href=\"https://cloud.google.com/dns/what-is-cloud-dns\">Google Cloud DNS</a> is a high-<br />performance, resilient, global DNS service that provides a cost-effective way<br />to make your applications and services available to your users. This<br />programmable, authoritative DNS service can be used to easily publish and<br />manage DNS records using the same infrastructure relied upon by Google.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":59,"codeStart":79,"code":"function DNS(options) {\n  if (!(this instanceof DNS)) {\n    return new DNS(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory({\n    credentials: options.credentials,\n    keyFile: options.keyFilename,\n    scopes: SCOPES,\n    email: options.email\n  });\n\n  this.projectId_ = options.projectId;\n}","ctx":{"type":"constructor","name":"DNS","string":"DNS()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"throws","string":"{error} If a zone name is not provided.","types":["error"],"description":"<p>If a zone name is not provided.</p>"},{"type":"throws","string":"{error} If a zone dnsName is not provided.\n","types":["error"],"description":"<p>If a zone dnsName is not provided. </p>"},{"type":"param","string":"{string} name - Unique name for the zone. E.g. \"my-zone\"","name":"name","description":"<ul>\n<li>Unique name for the zone. E.g. &quot;my-zone&quot;</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} config - Configuration object.","name":"config","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} config.dnsName - DNS name for the zone. E.g. \"example.com.\"","name":"config.dnsName","description":"<ul>\n<li>DNS name for the zone. E.g. &quot;example.com.&quot;</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} config.description - Description text for the zone.","name":"config.description","description":"<ul>\n<li>Description text for the zone.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/zone} callback.zone - A new {module:dns/zone} object.","name":"callback.zone","description":"<ul>\n<li>A new {module:dns/zone} object.</li>\n</ul>\n","types":["module:dns/zone"],"typesDescription":"module:<a href=\"module%3Adns%2Fzone.html\">dns/zone</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"dns.createZone('my-awesome-zone', {\n  dnsName: 'example.com.', // note the period at the end of the domain.\n  description: 'This zone is awesome!'\n}, function(err, zone, apiResponse) {\n  if (!err) {\n    // The zone was created successfully.\n  }\n});","html":"<p>dns.createZone(&#39;my-awesome-zone&#39;, {<br />  dnsName: &#39;example.com.&#39;, // note the period at the end of the domain.<br />  description: &#39;This zone is awesome!&#39;<br />}, function(err, zone, apiResponse) {<br />  if (!err) {<br />    // The zone was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Create a managed zone.</p>","summary":"<p>Create a managed zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":100,"codeStart":127,"code":"DNS.prototype.createZone = function(name, config, callback) {\n  var self = this;\n\n  if (!name) {\n    throw new Error('A zone name is required.');\n  }\n\n  if (!config || !config.dnsName) {\n    throw new Error('A zone dnsName is required.');\n  }\n\n  config.name = name;\n\n  // Required by the API.\n  config.description = config.description || '';\n\n  this.makeReq_('POST', '/managedZones', null, config, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var zone = self.zone(resp.name);\n    zone.metadata = resp;\n\n    callback(null, zone, resp);\n  });\n};","ctx":{"type":"method","constructor":"DNS","cons":"DNS","name":"createZone","string":"DNS.prototype.createZone()"}},{"tags":[{"type":"resource","string":"[ManagedZones: list API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/list} ","html":"<p>[ManagedZones: list API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/list}\">https://cloud.google.com/dns/api/v1/managedZones/list}</a> </p>"},{"type":"param","string":"{object=} query - Query object.","name":"query","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of results to return.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - Page token.","name":"query.pageToken","description":"<ul>\n<li>Page token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/zone[]} callback.zones - An array of {module:dns/zone}\n    objects.","name":"callback.zones","description":"<ul>\n<li>An array of {module:dns/zone}     objects.</li>\n</ul>\n","types":["Array.<module:dns/zone>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Fzone.html\">dns/zone</a>&gt;|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"dns.getZones(function(err, zones, apiResponse) {});","html":"<p>dns.getZones(function(err, zones, apiResponse) {});</p>"}],"description":{"full":"<p>Gets a list of managed zones for the project.</p>","summary":"<p>Gets a list of managed zones for the project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":156,"codeStart":173,"code":"DNS.prototype.getZones = function(query, callback) {\n  var self = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  this.makeReq_('GET', '/managedZones', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var zones = (resp.managedZones || []).map(function(zone) {\n      var zoneInstance = self.zone(zone.name);\n      zoneInstance.metadata = zone;\n      return zoneInstance;\n    });\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    callback(null, zones, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"DNS","cons":"DNS","name":"getZones","string":"DNS.prototype.getZones()"}},{"tags":[{"type":"throws","string":"{error} If a zone name is not provided.\n","types":["error"],"description":"<p>If a zone name is not provided. </p>"},{"type":"param","string":"{string} name - The unique name of the zone.","name":"name","description":"<ul>\n<li>The unique name of the zone.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:dns/zone}\n","types":["module:dns/zone"],"typesDescription":"module:<a href=\"module%3Adns%2Fzone.html\">dns/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:dns/zone}</p>"},{"type":"example","string":"var zone = dns.zone('my-zone');","html":"<p>var zone = dns.zone(&#39;my-zone&#39;);</p>"}],"description":{"full":"<p>Create a zone object representing an existing managed zone.</p>","summary":"<p>Create a zone object representing an existing managed zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":205,"codeStart":216,"code":"DNS.prototype.zone = function(name) {\n  if (!name) {\n    throw new Error('A zone name is required.');\n  }\n\n  return new Zone(this, name);\n};","ctx":{"type":"method","constructor":"DNS","cons":"DNS","name":"zone","string":"DNS.prototype.zone()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":224,"codeStart":236,"code":"DNS.prototype.makeReq_ = function(method, path, query, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: query,\n    uri:  DNS_BASE_URL + this.projectId_ + path\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"DNS","cons":"DNS","name":"makeReq_","string":"DNS.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":250,"codeStart":255,"code":"streamRouter.extend(DNS, 'getZones');\n\nmodule.exports = DNS;","ctx":false}],"dns/record":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"dns/record","html":"<p>dns/record</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar extend = require('extend');\nvar format = require('string-format-obj');","ctx":false},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:dns/record ","html":"<p>module:dns/record </p>"},{"type":"param","string":"{object} type - The record type, e.g. `A`, `AAAA`, `MX`.","name":"type","description":"<ul>\n<li>The record type, e.g. <code>A</code>, <code>AAAA</code>, <code>MX</code>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} metadata - The metadata of this record.","name":"metadata","description":"<ul>\n<li>The metadata of this record.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} metadata.name - The name of the record, e.g.\n    `www.example.com.`.","name":"metadata.name","description":"<ul>\n<li>The name of the record, e.g.     <code>www.example.com.</code>.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]} metadata.data - Defined in\n    [RFC 1035, section 5](https://goo.gl/9EiM0e) and\n    [RFC 1034, section 3.6.1](https://goo.gl/Hwhsu9).","name":"metadata.data","description":"<ul>\n<li>Defined in     <a href=\"https://goo.gl/9EiM0e\">RFC 1035, section 5</a> and<br />  <a href=\"https://goo.gl/Hwhsu9\">RFC 1034, section 3.6.1</a>.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} metadata.ttl - Seconds that the resource is cached by\n    resolvers.\n","name":"metadata.ttl","description":"<ul>\n<li>Seconds that the resource is cached by     resolvers.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar dns = gcloud.dns({\n  projectId: 'grape-spaceship-123'\n});\n\nvar zone = dns.zone('my-awesome-zone');\n\nvar record = zone.record('a', {\n  name: 'example.com.',\n  ttl: 86400,\n  data: '1.2.3.4'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var dns = gcloud.dns({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var zone = dns.zone(&#39;my-awesome-zone&#39;);</p><p>var record = zone.record(&#39;a&#39;, {<br />  name: &#39;example.com.&#39;,<br />  ttl: 86400,<br />  data: &#39;1.2.3.4&#39;<br />});</p>"}],"description":{"full":"<p>Create a Resource Record object.</p>","summary":"<p>Create a Resource Record object.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":58,"code":"function Record(zone, type, metadata) {\n  this.zone_ = zone;\n\n  this.type = type;\n  this.metadata = metadata;\n\n  extend(this, this.toJSON());\n\n  if (this.rrdatas) {\n    this.data = this.rrdatas;\n    delete this.rrdatas;\n  }\n}","ctx":{"type":"constructor","name":"Record","string":"Record()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{module:dns/zone} zone     [description]","name":"zone","description":"<p>[description]</p>","types":["module:dns/zone"],"typesDescription":"module:<a href=\"module%3Adns%2Fzone.html\">dns/zone</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} type - The record type, e.g. `A`, `AAAA`, `MX`.","name":"type","description":"<ul>\n<li>The record type, e.g. <code>A</code>, <code>AAAA</code>, <code>MX</code>.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} bindData - Metadata parsed from dns-zonefile. Properties vary\n    based on the type of record.","name":"bindData","description":"<ul>\n<li>Metadata parsed from dns-zonefile. Properties vary     based on the type of record.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:dns/record}","types":["module:dns/record"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:dns/record}</p>"}],"description":{"full":"<p>Create a Record instance from a resource record set in a zone file.</p>","summary":"<p>Create a Record instance from a resource record set in a zone file.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":72,"codeStart":83,"code":"Record.fromZoneRecord_ = function(zone, type, bindData) {\n  var typeToZoneFormat = {\n    a: '{ip}',\n    aaaa: '{ip}',\n    cname: '{alias}',\n    mx: '{preference} {host}',\n    ns: '{host}',\n    soa: '{mname} {rname} {serial} {retry} {refresh} {expire} {minimum}',\n    spf: '{data}',\n    srv: '{priority} {weight} {port} {target}',\n    txt: '{txt}'\n  };\n\n  var metadata = {\n    data: format(typeToZoneFormat[type.toLowerCase()], bindData),\n    name: bindData.name,\n    ttl: bindData.ttl\n  };\n\n  return new Record(zone, type, metadata);\n};","ctx":{"type":"method","receiver":"Record","name":"fromZoneRecord_","string":"Record.fromZoneRecord_()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"record.delete(function(err, change, apiResponse) {\n  if (!err) {\n    // Delete change modification was created.\n  }\n});","html":"<p>record.delete(function(err, change, apiResponse) {<br />  if (!err) {<br />    // Delete change modification was created.<br />  }<br />});</p>"}],"description":{"full":"<p>Delete this record by creating a change on your zone. This is a convenience<br />method for:</p><pre><code>zone.createChange({\n  delete: record\n}, function(err, change, apiResponse) {});\n</code></pre>","summary":"<p>Delete this record by creating a change on your zone. This is a convenience<br />method for:</p>","body":"<pre><code>zone.createChange({\n  delete: record\n}, function(err, change, apiResponse) {});\n</code></pre>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":105,"codeStart":127,"code":"Record.prototype.delete = function(callback) {\n  this.zone_.deleteRecords(this, callback);\n};","ctx":{"type":"method","constructor":"Record","cons":"Record","name":"delete","string":"Record.prototype.delete()"}},{"tags":[{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Serialize the record instance to the format the API expects.</p>","summary":"<p>Serialize the record instance to the format the API expects.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":131,"codeStart":136,"code":"Record.prototype.toJSON = function() {\n  var recordObject = extend({}, this.metadata, {\n    type: this.type.toUpperCase()\n  });\n\n  if (recordObject.data) {\n    recordObject.rrdatas = arrify(recordObject.data);\n    delete recordObject.data;\n  }\n\n  return recordObject;\n};","ctx":{"type":"method","constructor":"Record","cons":"Record","name":"toJSON","string":"Record.prototype.toJSON()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"return","string":"{string}","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{string}</p>"}],"description":{"full":"<p>Convert the record to a string, formatted for a zone file.</p>","summary":"<p>Convert the record to a string, formatted for a zone file.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":149,"codeStart":156,"code":"Record.prototype.toString = function() {\n  var json = this.toJSON();\n\n  return (json.rrdatas || [{}]).map(function(data) {\n    json.rrdata = data;\n    return format('{name} {ttl} IN {type} {rrdata}', json);\n  }).join('\\n');\n};\n\nmodule.exports = Record;","ctx":{"type":"method","constructor":"Record","cons":"Record","name":"toString","string":"Record.prototype.toString()"}}],"dns/zone":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"dns/zone","html":"<p>dns/zone</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar exec = require('methmeth');\nvar extend = require('extend');\nvar fs = require('fs');\nvar is = require('is');\nvar zonefile = require('dns-zonefile');","ctx":false},{"tags":[{"type":"type","string":"{module:dns/change}","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:dns/change}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":30,"codeStart":34,"code":"var Change = require('./change.js');","ctx":{"type":"declaration","name":"Change","value":"require('./change.js')","string":"Change"}},{"tags":[{"type":"type","string":"{module:dns/record}","types":["module:dns/record"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:dns/record}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":36,"codeStart":40,"code":"var Record = require('./record.js');","ctx":{"type":"declaration","name":"Record","value":"require('./record.js')","string":"Record"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":42,"codeStart":46,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:dns/zone ","html":"<p>module:dns/zone </p>"},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar dns = gcloud.dns({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar zone = dns.zone('zone-id');","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var dns = gcloud.dns({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var zone = dns.zone(&#39;zone-id&#39;);</p>"}],"description":{"full":"<p>A Zone object is used to interact with your project&#39;s managed zone. It will<br />help you add or delete records, delete your zone, and many other convenience<br />methods.</p>","summary":"<p>A Zone object is used to interact with your project&#39;s managed zone. It will<br />help you add or delete records, delete your zone, and many other convenience<br />methods.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":48,"codeStart":66,"code":"function Zone(dns, name) {\n  this.dns = dns;\n  this.name = name;\n  this.metadata = {};\n\n  this.makeReq_ = this.dns.makeReq_.bind(dns);\n}","ctx":{"type":"constructor","name":"Zone","string":"Zone()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{module:dns/record|module:dns/record[]} record - The record objects to\n    add.","name":"record","description":"<ul>\n<li>The record objects to     add.</li>\n</ul>\n","types":["module:dns/record","Array.<module:dns/record>"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>|<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Add records to this zone. This is a convenience wrapper around<br />{module:dns/zone#createChange}.</p>","summary":"<p>Add records to this zone. This is a convenience wrapper around<br />{module:dns/zone#createChange}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":74,"codeStart":86,"code":"Zone.prototype.addRecords = function(records, callback) {\n  this.createChange({\n    add: records\n  }, callback);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"addRecords","string":"Zone.prototype.addRecords()"}},{"tags":[{"type":"throws","string":"{error} If an id is not provided.\n","types":["error"],"description":"<p>If an id is not provided. </p>"},{"type":"param","string":"{string} id - The change id.","name":"id","description":"<ul>\n<li>The change id.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:dns/change}\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:dns/change}</p>"},{"type":"example","string":"var change = zone.change('change-id');","html":"<p>var change = zone.change(&#39;change-id&#39;);</p>"}],"description":{"full":"<p>Create a reference to an existing change object in this zone.</p>","summary":"<p>Create a reference to an existing change object in this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":92,"codeStart":103,"code":"Zone.prototype.change = function(id) {\n  if (!id) {\n    throw new Error('A change id is required.');\n  }\n\n  return new Change(this, id);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"change","string":"Zone.prototype.change()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{object} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:dns/record|module:dns/record[]} options.add - Record objects\n    to add to this zone.","name":"options.add","description":"<ul>\n<li>Record objects     to add to this zone.</li>\n</ul>\n","types":["module:dns/record","Array.<module:dns/record>"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>|<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:dns/record|module:dns/record[]} options.delete - Record\n    objects to delete from this zone. Be aware that the resource records here\n    must match exactly to be deleted.","name":"options.delete","description":"<ul>\n<li>Record     objects to delete from this zone. Be aware that the resource records here<br />  must match exactly to be deleted.</li>\n</ul>\n","types":["module:dns/record","Array.<module:dns/record>"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>|<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var oldARecord = zone.record('a', {\n  name: 'example.com.',\n  data: '1.2.3.4',\n  ttl: 86400\n});\n\nvar newARecord = zone.record('a', {\n  name: 'example.com.',\n  data: '5.6.7.8',\n  ttl: 86400\n});\n\nzone.createChange({\n  add: newARecord,\n  delete: oldARecord\n}, function(err, change, apiResponse) {\n  if (!err) {\n    // The change was created successfully.\n  }\n});","html":"<p>var oldARecord = zone.record(&#39;a&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;1.2.3.4&#39;,<br />  ttl: 86400<br />});</p><p>var newARecord = zone.record(&#39;a&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;5.6.7.8&#39;,<br />  ttl: 86400<br />});</p><p>zone.createChange({<br />  add: newARecord,<br />  delete: oldARecord<br />}, function(err, change, apiResponse) {<br />  if (!err) {<br />    // The change was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Create a change of resource record sets for the zone.</p>","summary":"<p>Create a change of resource record sets for the zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":111,"codeStart":149,"code":"Zone.prototype.createChange = function(options, callback) {\n  var self = this;\n\n  if (!options || !options.add && !options.delete) {\n    throw new Error('Cannot create a change with no additions or deletions.');\n  }\n\n  var body = extend({}, options, {\n    additions: arrify(options.add).map(exec('toJSON')),\n    deletions: arrify(options.delete).map(exec('toJSON'))\n  });\n\n  delete body.add;\n  delete body.delete;\n\n  var path = '/managedZones/' + this.name + '/changes';\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var change = self.change(resp.id);\n    change.metadata = resp;\n\n    callback(null, change, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"createChange","string":"Zone.prototype.createChange()"}},{"tags":[{"type":"resource","string":"[ManagedZones: delete API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/delete} ","html":"<p>[ManagedZones: delete API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/delete}\">https://cloud.google.com/dns/api/v1/managedZones/delete}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.force - Empty the zone before deleting.","name":"options.force","description":"<ul>\n<li>Empty the zone before deleting.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"zone.delete(function(err, apiResponse) {\n  if (!err) {\n    // The zone is now deleted.\n  }\n});\n\n//-\n// Use `force` to first empty the zone before deleting it.\n//-\nzone.delete({\n  force: true\n}, function(err, apiResponse) {\n  if (!err) {\n    // The zone is now deleted.\n  }\n});","html":"<p>zone.delete(function(err, apiResponse) {<br />  if (!err) {<br />    // The zone is now deleted.<br />  }<br />});</p><p>//-<br />// Use <code>force</code> to first empty the zone before deleting it.<br />//-<br />zone.delete({<br />  force: true<br />}, function(err, apiResponse) {<br />  if (!err) {<br />    // The zone is now deleted.<br />  }<br />});</p>"}],"description":{"full":"<p>Delete the zone.</p><p>Only empty zones can be deleted. Set options.force to <code>true</code> to call<br />{module:dns/zone#empty} before deleting the zone. Two API calls will then be<br />made (one to empty, another to delete), which means <strong> this is not an<br />atomic request</strong>.</p>","summary":"<p>Delete the zone.</p>","body":"<p>Only empty zones can be deleted. Set options.force to <code>true</code> to call<br />{module:dns/zone#empty} before deleting the zone. Two API calls will then be<br />made (one to empty, another to delete), which means <strong> this is not an<br />atomic request</strong>.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":179,"codeStart":213,"code":"Zone.prototype.delete = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  if (options.force) {\n    this.empty(this.delete.bind(this, callback));\n    return;\n  }\n\n  var path = '/managedZones/' + this.name;\n  this.makeReq_('DELETE', path, null, null, function(err, resp) {\n    callback(err, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"delete","string":"Zone.prototype.delete()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{module:dns/record|module:dns/record[]|string} record - If given a\n    string, it is interpreted as a record type. All records that match that\n    type will be retrieved and then deleted. You can also provide a\n    {module:dns/record} object or array of objects.","name":"record","description":"<ul>\n<li>If given a     string, it is interpreted as a record type. All records that match that<br />  type will be retrieved and then deleted. You can also provide a<br />  {module:dns/record} object or array of objects.</li>\n</ul>\n","types":["module:dns/record","Array.<module:dns/record>","string"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>|<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>&gt;|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var oldARecord = zone.record('a', {\n  name: 'example.com.',\n  data: '1.2.3.4',\n  ttl: 86400\n});\n\nvar callback = function(err, change, apiResponse) {\n  if (!err) {\n    // Delete change modification was created.\n  }\n};\n\nzone.deleteRecords(oldARecord, callback);\n\n//-\n// Delete multiple records at once.\n//-\nvar oldNs1Record = zone.record('ns', {\n  name: 'example.com.',\n  data: 'ns-cloud1.googledomains.com.',\n  ttl: 86400\n});\n\nvar oldNs2Record = zone.record('ns', {\n  name: 'example.com.',\n  data: 'ns-cloud2.googledomains.com.',\n  ttl: 86400\n});\n\nzone.deleteRecords([\n  oldNs1Record,\n  oldNs2Record\n], callback);\n\n//-\n// Possibly a simpler way to perform the above change is deleting records by\n// type.\n//-\nzone.deleteRecords('ns', callback);\n\n//-\n// You can also delete records of multiple types.\n//-\nzone.deleteRecords(['ns', 'a'], callback);","html":"<p>var oldARecord = zone.record(&#39;a&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;1.2.3.4&#39;,<br />  ttl: 86400<br />});</p><p>var callback = function(err, change, apiResponse) {<br />  if (!err) {<br />    // Delete change modification was created.<br />  }<br />};</p><p>zone.deleteRecords(oldARecord, callback);</p><p>//-<br />// Delete multiple records at once.<br />//-<br />var oldNs1Record = zone.record(&#39;ns&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;ns-cloud1.googledomains.com.&#39;,<br />  ttl: 86400<br />});</p><p>var oldNs2Record = zone.record(&#39;ns&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;ns-cloud2.googledomains.com.&#39;,<br />  ttl: 86400<br />});</p><p>zone.deleteRecords([<br />  oldNs1Record,<br />  oldNs2Record<br />], callback);</p><p>//-<br />// Possibly a simpler way to perform the above change is deleting records by<br />// type.<br />//-<br />zone.deleteRecords(&#39;ns&#39;, callback);</p><p>//-<br />// You can also delete records of multiple types.<br />//-<br />zone.deleteRecords([&#39;ns&#39;, &#39;a&#39;], callback);</p>"}],"description":{"full":"<p>Delete records from this zone. This is a convenience wrapper around<br />{module:dns/zone#createChange}.</p><p>This method accepts {module:dns/record} objects or string record types in<br />its place. This means that you can delete all A records or NS records, etc.<br />If used this way, two API requests are made (one to get, then another to<br />delete), which means <strong>the operation is not atomic</strong> and could<br />result in unexpected changes.</p>","summary":"<p>Delete records from this zone. This is a convenience wrapper around<br />{module:dns/zone#createChange}.</p>","body":"<p>This method accepts {module:dns/record} objects or string record types in<br />its place. This means that you can delete all A records or NS records, etc.<br />If used this way, two API requests are made (one to get, then another to<br />delete), which means <strong>the operation is not atomic</strong> and could<br />result in unexpected changes.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":230,"codeStart":296,"code":"Zone.prototype.deleteRecords = function(records, callback) {\n  records = arrify(records);\n\n  if (is.string(records[0])) {\n    this.deleteRecordsByType_(records, callback);\n    return;\n  }\n\n  this.createChange({\n    delete: records\n  }, callback);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"deleteRecords","string":"Zone.prototype.deleteRecords()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Emptying your zone means leaving only &#39;NS&#39; and &#39;SOA&#39; records. This method<br />will first fetch the non-NS and non-SOA records from your zone using<br />{module:dns/zone#getRecords}, then use {module:dns/zone#createChange} to<br />create a deletion change.</p>","summary":"<p>Emptying your zone means leaving only &#39;NS&#39; and &#39;SOA&#39; records. This method<br />will first fetch the non-NS and non-SOA records from your zone using<br />{module:dns/zone#getRecords}, then use {module:dns/zone#createChange} to<br />create a deletion change.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":309,"codeStart":322,"code":"Zone.prototype.empty = function(callback) {\n  var self = this;\n\n  this.getRecords(function(err, records) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    var recordsToDelete = records.filter(function(record) {\n      return record.type !== 'NS' && record.type !== 'SOA';\n    });\n\n    if (recordsToDelete.length === 0) {\n      callback();\n    } else {\n      self.deleteRecords(recordsToDelete, callback);\n    }\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"empty","string":"Zone.prototype.empty()"}},{"tags":[{"type":"resource","string":"[ResourceRecordSets: list API Documentation]{@link https://cloud.google.com/dns/api/v1/resourceRecordSets/list} ","html":"<p>[ResourceRecordSets: list API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/resourceRecordSets/list}\">https://cloud.google.com/dns/api/v1/resourceRecordSets/list}</a> </p>"},{"type":"param","string":"{string} localPath - The fully qualified path to the zone file.","name":"localPath","description":"<ul>\n<li>The fully qualified path to the zone file.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API or file system error.\n","name":"callback.err","description":"<ul>\n<li>An API or file system error. </li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"var zoneFilename = '/Users/stephen/zonefile.zone';\n\nzone.export(zoneFilename, function(err) {\n  if (!err) {\n    // The zone file was created successfully.\n  }\n});","html":"<p>var zoneFilename = &#39;/Users/stephen/zonefile.zone&#39;;</p><p>zone.export(zoneFilename, function(err) {<br />  if (!err) {<br />    // The zone file was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Provide a path to a zone file to copy records into the zone.</p>","summary":"<p>Provide a path to a zone file to copy records into the zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":343,"codeStart":361,"code":"Zone.prototype.export = function(localPath, callback) {\n  this.getRecords(function(err, records) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    var stringRecords = records.map(exec('toString')).join('\\n');\n\n    fs.writeFile(localPath, stringRecords, 'utf-8', function(err) {\n      callback(err || null);\n    });\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"export","string":"Zone.prototype.export()"}},{"tags":[{"type":"resource","string":"[Changes: get API Documentation]{@link https://cloud.google.com/dns/api/v1/changes/get} ","html":"<p>[Changes: get API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/changes/get}\">https://cloud.google.com/dns/api/v1/changes/get}</a> </p>"},{"type":"param","string":"{object=} query - The query object.","name":"query","description":"<ul>\n<li>The query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of results to return.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - The page token.","name":"query.pageToken","description":"<ul>\n<li>The page token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.sort - Set to 'asc' for ascending, and 'desc' for\n    descending or omit for no sorting.","name":"query.sort","description":"<ul>\n<li>Set to &#39;asc&#39; for ascending, and &#39;desc&#39; for     descending or omit for no sorting.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change[]} callback.changes - An array of\n    {module:dns/change} objects.","name":"callback.changes","description":"<ul>\n<li>An array of     {module:dns/change} objects.</li>\n</ul>\n","types":["Array.<module:dns/change>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>&gt;|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - A query object representing the next\n    page of results.","name":"callback.nextQuery","description":"<ul>\n<li>A query object representing the next     page of results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var callback = function(err, changes, nextQuery, apiResponse) {\n  // The `metadata` property is populated for you with the metadata at the\n  // time of fetching.\n  changes[0].metadata;\n\n  // However, in cases where you are concerned the metadata could have\n  // changed, use the `getMetadata` method.\n  changes[0].getMetadata(function(err, metadata) {});\n\n  if (nextQuery) {\n    // nextQuery will be non-null if there are more results.\n    zone.getChanges(nextQuery, callback);\n  }\n};\n\nzone.getChanges(callback);\n\n//-\n// Get the changes from your zone as a readable object stream.\n//-\nzone.getChanges()\n  .on('error', console.error)\n  .on('data', function(change) {\n    // change is a Change object.\n  })\n  .on('end', function() {\n    // All changes retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nzone.getChanges()\n  .on('data', function(change) {\n    this.end();\n  });","html":"<p>var callback = function(err, changes, nextQuery, apiResponse) {<br />  // The <code>metadata</code> property is populated for you with the metadata at the<br />  // time of fetching.<br />  changes[0].metadata;</p><p>  // However, in cases where you are concerned the metadata could have<br />  // changed, use the <code>getMetadata</code> method.<br />  changes[0].getMetadata(function(err, metadata) {});</p><p>  if (nextQuery) {<br />    // nextQuery will be non-null if there are more results.<br />    zone.getChanges(nextQuery, callback);<br />  }<br />};</p><p>zone.getChanges(callback);</p><p>//-<br />// Get the changes from your zone as a readable object stream.<br />//-<br />zone.getChanges()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(change) {<br />    // change is a Change object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All changes retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />zone.getChanges()<br />  .on(&#39;data&#39;, function(change) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get the list of changes associated with this zone. A change is an atomic<br />update to a collection of records.</p>","summary":"<p>Get the list of changes associated with this zone. A change is an atomic<br />update to a collection of records.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":376,"codeStart":434,"code":"Zone.prototype.getChanges = function(query, callback) {\n  var self = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  if (query.sort) {\n    query.sortOrder = query.sort === 'asc' ? 'ascending' : 'descending';\n    delete query.sort;\n  }\n\n  var path = '/managedZones/' + this.name + '/changes';\n\n  this.makeReq_('GET', path, query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var changes = (resp.changes || []).map(function(change) {\n      var changeInstance = self.change(change.id);\n      changeInstance.metadata = change;\n      return changeInstance;\n    });\n\n    var nextQuery = null;\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    callback(null, changes, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getChanges","string":"Zone.prototype.getChanges()"}},{"tags":[{"type":"resource","string":"[ManagedZones: get API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/get} ","html":"<p>[ManagedZones: get API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/get}\">https://cloud.google.com/dns/api/v1/managedZones/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.metadata - Metadata of the zone from the API.","name":"callback.metadata","description":"<ul>\n<li>Metadata of the zone from the API.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"zone.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>zone.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the metadata for the zone.</p>","summary":"<p>Get the metadata for the zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":472,"codeStart":485,"code":"Zone.prototype.getMetadata = function(callback) {\n  var self = this;\n  var path = '/managedZones/' + this.name;\n\n  this.makeReq_('GET', path, null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getMetadata","string":"Zone.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[ResourceRecordSets: list API Documentation]{@link https://cloud.google.com/dns/api/v1/resourceRecordSets/list} ","html":"<p>[ResourceRecordSets: list API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/resourceRecordSets/list}\">https://cloud.google.com/dns/api/v1/resourceRecordSets/list}</a> </p>"},{"type":"param","string":"{object=} query - The query object.","name":"query","description":"<ul>\n<li>The query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.name - Restricts the list to return only records with\n    this fully qualified domain name.","name":"query.name","description":"<ul>\n<li>Restricts the list to return only records with     this fully qualified domain name.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.type - Restricts the list to return only records of\n    this type. If present, the \"name\" parameter must also be present.","name":"query.type","description":"<ul>\n<li>Restricts the list to return only records of     this type. If present, the &quot;name&quot; parameter must also be present.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of results to be returned.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of results to be returned.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - The page token.","name":"query.pageToken","description":"<ul>\n<li>The page token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/record[]} callback.records - An array of\n    {module:dns/record} objects.","name":"callback.records","description":"<ul>\n<li>An array of     {module:dns/record} objects.</li>\n</ul>\n","types":["Array.<module:dns/record>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>&gt;|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - A query object representing the next\n    page of results.","name":"callback.nextQuery","description":"<ul>\n<li>A query object representing the next     page of results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var callback = function(err, records, nextQuery, apiResponse) {\n  if (!err) {\n    // records is an array of Record objects.\n  }\n\n  if (nextQuery) {\n    zone.getRecords(nextQuery, callback);\n  }\n};\n\nzone.getRecords(callback);\n\n//-\n// Provide a query for further customization.\n//-\n// Get the namespace records for example.com.\nvar query = {\n  name: 'example.com.',\n  type: 'NS'\n};\n\nzone.getRecords(query, callback);\n\n//-\n// Get the records from your zone as a readable object stream.\n//-\nzone.getRecords()\n  .on('error', console.error)\n  .on('data', function(record) {\n    // record is a Record object.\n  })\n  .on('end', function() {\n    // All records retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nzone.getRecords()\n  .on('data', function(change) {\n    this.end();\n  });\n\n//-\n// If you only want records of a specific type or types, provide them in\n// place of the query object.\n//-\nzone.getRecords('ns', function(err, records) {\n  if (!err) {\n    // records is an array of NS Record objects in your zone.\n  }\n});\n\n//-\n// You can also specify multiple record types.\n//-\nzone.getRecords(['ns', 'a', 'cname'], function(err, records) {\n  if (!err) {\n    // records is an array of NS, A, and CNAME records in your zone.\n  }\n});","html":"<p>var callback = function(err, records, nextQuery, apiResponse) {<br />  if (!err) {<br />    // records is an array of Record objects.<br />  }</p><p>  if (nextQuery) {<br />    zone.getRecords(nextQuery, callback);<br />  }<br />};</p><p>zone.getRecords(callback);</p><p>//-<br />// Provide a query for further customization.<br />//-<br />// Get the namespace records for example.com.<br />var query = {<br />  name: &#39;example.com.&#39;,<br />  type: &#39;NS&#39;<br />};</p><p>zone.getRecords(query, callback);</p><p>//-<br />// Get the records from your zone as a readable object stream.<br />//-<br />zone.getRecords()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(record) {<br />    // record is a Record object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All records retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />zone.getRecords()<br />  .on(&#39;data&#39;, function(change) {<br />    this.end();<br />  });</p><p>//-<br />// If you only want records of a specific type or types, provide them in<br />// place of the query object.<br />//-<br />zone.getRecords(&#39;ns&#39;, function(err, records) {<br />  if (!err) {<br />    // records is an array of NS Record objects in your zone.<br />  }<br />});</p><p>//-<br />// You can also specify multiple record types.<br />//-<br />zone.getRecords([&#39;ns&#39;, &#39;a&#39;, &#39;cname&#39;], function(err, records) {<br />  if (!err) {<br />    // records is an array of NS, A, and CNAME records in your zone.<br />  }<br />});</p>"}],"description":{"full":"<p>Get the list of records for this zone.</p>","summary":"<p>Get the list of records for this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":501,"codeStart":585,"code":"Zone.prototype.getRecords = function(query, callback) {\n  var self = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  if (is.string(query) || is.array(query)) {\n    var filterByTypes_ = {};\n\n    // For faster lookups, store the record types the user wants in an object.\n    arrify(query).forEach(function(type) {\n      filterByTypes_[type.toUpperCase()] = true;\n    });\n\n    query = {\n      filterByTypes_: filterByTypes_\n    };\n  }\n\n  var requestQuery = extend({}, query);\n  delete requestQuery.filterByTypes_;\n\n  var path = '/managedZones/' + this.name + '/rrsets';\n  this.makeReq_('GET', path, requestQuery, true, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var records = (resp.rrsets || []).map(function(record) {\n      return self.record(record.type, record);\n    });\n\n    if (query.filterByTypes_) {\n      records = records.filter(function(record) {\n        return query.filterByTypes_[record.type];\n      });\n    }\n\n    var nextQuery = null;\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    callback(null, records, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"getRecords","string":"Zone.prototype.getRecords()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{string} localPath - The fully qualified path to the zone file.","name":"localPath","description":"<ul>\n<li>The fully qualified path to the zone file.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API or file system error.","name":"callback.err","description":"<ul>\n<li>An API or file system error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"var zoneFilename = '/Users/dave/zonefile.zone';\n\nzone.import(zoneFilename, function(err, change, apiResponse) {\n  if (!err) {\n    // The change was created successfully.\n  }\n});","html":"<p>var zoneFilename = &#39;/Users/dave/zonefile.zone&#39;;</p><p>zone.import(zoneFilename, function(err, change, apiResponse) {<br />  if (!err) {<br />    // The change was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Copy the records from a zone file into this zone.</p>","summary":"<p>Copy the records from a zone file into this zone.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":637,"codeStart":657,"code":"Zone.prototype.import = function(localPath, callback) {\n  var self = this;\n\n  fs.readFile(localPath, 'utf-8', function(err, file) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    var parsedZonefile = zonefile.parse(file);\n\n    var recordsToCreate = [];\n    function addRecordToCreate(record) {\n      var recordInstance = new Record.fromZoneRecord_(self, recordType, record);\n      recordsToCreate.push(recordInstance);\n    }\n\n    for (var recordType in parsedZonefile) {\n      var recordTypeSet = arrify(parsedZonefile[recordType]);\n      recordTypeSet.forEach(addRecordToCreate);\n    }\n\n    self.addRecords(recordsToCreate, callback);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"import","string":"Zone.prototype.import()"}},{"tags":[{"type":"param","string":"{string} type - The type of record to construct or the type of record\n    you are referencing.","name":"type","description":"<ul>\n<li>The type of record to construct or the type of record     you are referencing.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} metadata - The metadata of this record.","name":"metadata","description":"<ul>\n<li>The metadata of this record.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} metadata.name - The name of the record, e.g.\n    `www.example.com.`.","name":"metadata.name","description":"<ul>\n<li>The name of the record, e.g.     <code>www.example.com.</code>.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]} metadata.data - Defined in\n    [RFC 1035, section 5](https://goo.gl/9EiM0e) and\n    [RFC 1034, section 3.6.1](https://goo.gl/Hwhsu9).","name":"metadata.data","description":"<ul>\n<li>Defined in     <a href=\"https://goo.gl/9EiM0e\">RFC 1035, section 5</a> and<br />  <a href=\"https://goo.gl/Hwhsu9\">RFC 1034, section 3.6.1</a>.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} metadata.ttl - Seconds that the resource is cached by\n    resolvers.","name":"metadata.ttl","description":"<ul>\n<li>Seconds that the resource is cached by     resolvers.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:dns/record}\n","types":["module:dns/record"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:dns/record}</p>"},{"type":"example","string":"//-\n// Reference an existing record to delete from your zone.\n//-\nvar oldARecord = zone.record('a', {\n  name: 'example.com.',\n  data: '1.2.3.4',\n  ttl: 86400\n});\n\n//-\n// Construct a record to add to your zone.\n//-\nvar newARecord = zone.record('a', {\n  name: 'example.com.',\n  data: '5.6.7.8',\n  ttl: 86400\n});\n\n//-\n// Use these records together to create a change.\n//-\nzone.createChange({\n  add: newARecord,\n  delete: oldARecord\n}, function(err, change, apiResponse) {});","html":"<p>//-<br />// Reference an existing record to delete from your zone.<br />//-<br />var oldARecord = zone.record(&#39;a&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;1.2.3.4&#39;,<br />  ttl: 86400<br />});</p><p>//-<br />// Construct a record to add to your zone.<br />//-<br />var newARecord = zone.record(&#39;a&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;5.6.7.8&#39;,<br />  ttl: 86400<br />});</p><p>//-<br />// Use these records together to create a change.<br />//-<br />zone.createChange({<br />  add: newARecord,<br />  delete: oldARecord<br />}, function(err, change, apiResponse) {});</p>"}],"description":{"full":"<p>A {module:dns/record} object can be used to construct a record you want to<br />add to your zone, or to refer to an existing one.</p><p>Note that using this method will not itself make any API requests. You will<br />use the object returned in other API calls, for example to add a record to<br />your zone or to delete an existing one.</p>","summary":"<p>A {module:dns/record} object can be used to construct a record you want to<br />add to your zone, or to refer to an existing one.</p>","body":"<p>Note that using this method will not itself make any API requests. You will<br />use the object returned in other API calls, for example to add a record to<br />your zone or to delete an existing one.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":683,"codeStart":730,"code":"Zone.prototype.record = function(type, metadata) {\n  return new Record(this, type, metadata);\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"record","string":"Zone.prototype.record()"}},{"tags":[{"type":"resource","string":"[ManagedZones: create API Documentation]{@link https://cloud.google.com/dns/api/v1/managedZones/create} ","html":"<p>[ManagedZones: create API Documentation]{@link <a href=\"https://cloud.google.com/dns/api/v1/managedZones/create}\">https://cloud.google.com/dns/api/v1/managedZones/create}</a> </p>"},{"type":"param","string":"{string|string[]} recordTypes - Type(s) of records to replace.","name":"recordTypes","description":"<ul>\n<li>Type(s) of records to replace.</li>\n</ul>\n","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{module:dns/record|module:dns/record[]} newRecords - The record\n    objects to add.","name":"newRecords","description":"<ul>\n<li>The record     objects to add.</li>\n</ul>\n","types":["module:dns/record","Array.<module:dns/record>"],"typesDescription":"module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>|<code>Array</code>.&lt;module:<a href=\"module%3Adns%2Frecord.html\">dns/record</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"var newNs1Record = zone.record('ns', {\n  name: 'example.com.',\n  data: 'ns-cloud1.googledomains.com.',\n  ttl: 86400\n});\n\nvar newNs2Record = zone.record('ns', {\n  name: 'example.com.',\n  data: 'ns-cloud2.googledomains.com.',\n  ttl: 86400\n});\n\nvar newNsRecords = [\n  newNs1Record,\n  newNs2Record\n];\n\nzone.replaceRecords('ns', newNsRecords, function(err, change, apiResponse) {\n  if (!err) {\n    // The change was created successfully.\n  }\n});","html":"<p>var newNs1Record = zone.record(&#39;ns&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;ns-cloud1.googledomains.com.&#39;,<br />  ttl: 86400<br />});</p><p>var newNs2Record = zone.record(&#39;ns&#39;, {<br />  name: &#39;example.com.&#39;,<br />  data: &#39;ns-cloud2.googledomains.com.&#39;,<br />  ttl: 86400<br />});</p><p>var newNsRecords = [<br />  newNs1Record,<br />  newNs2Record<br />];</p><p>zone.replaceRecords(&#39;ns&#39;, newNsRecords, function(err, change, apiResponse) {<br />  if (!err) {<br />    // The change was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Provide a record type that should be deleted and replaced with other records.</p><p><strong>This is not an atomic request.</strong> Two API requests are made<br />(one to get records of the type that you&#39;ve requested, then another to<br />replace them), which means the operation is not atomic and could result in<br />unexpected changes.</p>","summary":"<p>Provide a record type that should be deleted and replaced with other records.</p>","body":"<p><strong>This is not an atomic request.</strong> Two API requests are made<br />(one to get records of the type that you&#39;ve requested, then another to<br />replace them), which means the operation is not atomic and could result in<br />unexpected changes.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":734,"codeStart":776,"code":"Zone.prototype.replaceRecords = function(recordType, newRecords, callback) {\n  var self = this;\n\n  this.getRecords(recordType, function(err, recordsToDelete) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    self.createChange({\n      add: newRecords,\n      delete: recordsToDelete\n    }, callback);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"replaceRecords","string":"Zone.prototype.replaceRecords()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string[]} recordTypes - Types of records to delete. Ex: 'NS', 'A'.","name":"recordTypes","description":"<ul>\n<li>Types of records to delete. Ex: &#39;NS&#39;, &#39;A&#39;.</li>\n</ul>\n","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An API error.","name":"callback.err","description":"<ul>\n<li>An API error.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?module:dns/change} callback.change - A {module:dns/change} object.","name":"callback.change","description":"<ul>\n<li>A {module:dns/change} object.</li>\n</ul>\n","types":["module:dns/change"],"typesDescription":"module:<a href=\"module%3Adns%2Fchange.html\">dns/change</a>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.apiResponse - Raw API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>Raw API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"zone.deleteRecordsByType_(['NS', 'A'], function(err, change, apiResponse) {\n  if (!err) {\n    // The change was created successfully.\n  }\n});","html":"<p>zone.deleteRecordsByType_([&#39;NS&#39;, &#39;A&#39;], function(err, change, apiResponse) {<br />  if (!err) {<br />    // The change was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Delete records from the zone matching an array of types.</p>","summary":"<p>Delete records from the zone matching an array of types.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":792,"codeStart":810,"code":"Zone.prototype.deleteRecordsByType_ = function(recordTypes, callback) {\n  var self = this;\n\n  this.getRecords(recordTypes, function(err, records) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (records.length === 0) {\n      callback();\n      return;\n    }\n\n    self.deleteRecords(records, callback);\n  });\n};","ctx":{"type":"method","constructor":"Zone","cons":"Zone","name":"deleteRecordsByType_","string":"Zone.prototype.deleteRecordsByType_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":828,"codeStart":833,"code":"streamRouter.extend(Zone, ['getChanges', 'getRecords']);\n\nmodule.exports = Zone;","ctx":false}],"pubsub/iam":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"pubsub/iam","html":"<p>pubsub/iam</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar is = require('is');\nvar arrify = require('arrify');","ctx":false},{"tags":[{"type":"param","string":"{module:pubsub} pubsub - PubSub Object","name":"pubsub","description":"<ul>\n<li>PubSub Object</li>\n</ul>\n","types":["module:pubsub"],"typesDescription":"module:<a href=\"module%3Apubsub.html\">pubsub</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} resource - topic or subscription name","name":"resource","description":"<ul>\n<li>topic or subscription name</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":26,"codeStart":31},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:pubsub/iam ","html":"<p>module:pubsub/iam </p>"},{"type":"resource","string":"[Access Control Overview]{@link https://cloud.google.com/pubsub/access_control}","html":"<p>[Access Control Overview]{@link <a href=\"https://cloud.google.com/pubsub/access_control}\">https://cloud.google.com/pubsub/access_control}</a></p>"},{"type":"resource","string":"[What is Cloud IAM?]{@link https://cloud.google.com/iam/} ","html":"<p>[What is Cloud IAM?]{@link <a href=\"https://cloud.google.com/iam/}\">https://cloud.google.com/iam/}</a> </p>"},{"type":"example","string":"var pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\nvar topic = pubsub.topic('my-topic');\n// topic.iam\n\nvar subscription = pubsub.subscription('my-subscription');\n// subscription.iam","html":"<p>var pubsub = gcloud.pubsub({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p><p>var topic = pubsub.topic(&#39;my-topic&#39;);<br />// topic.iam</p><p>var subscription = pubsub.subscription(&#39;my-subscription&#39;);<br />// subscription.iam</p>"}],"description":{"full":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider range<br />of roles: editor, owner, publisher, subscriber, and viewer. This gives you<br />greater flexibility and allows you to set more fine-grained access control.</p><p>For example:</p><ul>\n<li>Grant access on a per-topic or per-subscription basis, rather than for<br />the whole Cloud project.</li>\n<li>Grant access with limited capabilities, such as to only publish messages<br />to a topic, or to only to consume messages from a subscription, but not<br />to delete the topic or subscription.</li>\n</ul>\n<p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by any<br />SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>","summary":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider range<br />of roles: editor, owner, publisher, subscriber, and viewer. This gives you<br />greater flexibility and allows you to set more fine-grained access control.</p>","body":"<p>For example:</p><ul>\n<li>Grant access on a per-topic or per-subscription basis, rather than for<br />the whole Cloud project.</li>\n<li>Grant access with limited capabilities, such as to only publish messages<br />to a topic, or to only to consume messages from a subscription, but not<br />to delete the topic or subscription.</li>\n</ul>\n<p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by any<br />SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":31,"codeStart":69,"code":"function IAM(pubsub, resource) {\n  this.resource = resource;\n  this.makeReq_ = pubsub.makeReq_.bind(pubsub);\n}","ctx":{"type":"constructor","name":"IAM","string":"IAM()"}},{"tags":[{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.policy - The [policy](https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy).","name":"callback.policy","description":"<ul>\n<li>The <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy\">policy</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"iam.getPolicy ","html":"<p>iam.getPolicy </p>"},{"type":"resource","string":"[Topics: getIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy}","html":"<p>[Topics: getIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy}</a></p>"},{"type":"resource","string":"[Subscriptions: getIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy} ","html":"<p>[Subscriptions: getIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy}</a> </p>"},{"type":"example","string":"topic.iam.getPolicy(function(err, policy, apiResponse) {});\n\nsubscription.iam.getPolicy(function(err, policy, apiResponse) {});","html":"<p>topic.iam.getPolicy(function(err, policy, apiResponse) {});</p><p>subscription.iam.getPolicy(function(err, policy, apiResponse) {});</p>"}],"description":{"full":"<p>Get the IAM policy</p>","summary":"<p>Get the IAM policy</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":74,"codeStart":92,"code":"IAM.prototype.getPolicy = function(callback) {\n  var path = this.resource + ':getIamPolicy';\n\n  this.makeReq_('GET', path, null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, resp, resp);\n  });\n};","ctx":{"type":"method","constructor":"IAM","cons":"IAM","name":"getPolicy","string":"IAM.prototype.getPolicy()"}},{"tags":[{"type":"throws","string":"{Error} If no policy is provided.\n","types":["Error"],"description":"<p>If no policy is provided. </p>"},{"type":"param","string":"{object} policy - The [policy](https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy).","name":"policy","description":"<ul>\n<li>The <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy\">policy</a>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{array=} policy.bindings - Bindings associate members with roles.","name":"policy.bindings","description":"<ul>\n<li>Bindings associate members with roles.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object[]=} policy.rules - Rules to be applied to the policy.","name":"policy.rules","description":"<ul>\n<li>Rules to be applied to the policy.</li>\n</ul>\n","types":["Array.<object>"],"typesDescription":"<code>Array</code>.&lt;<code>object</code>&gt;|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} policy.etag - Etags are used to perform a read-modify-write.","name":"policy.etag","description":"<ul>\n<li>Etags are used to perform a read-modify-write.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.policy - The updated policy.","name":"callback.policy","description":"<ul>\n<li>The updated policy.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"iam.setPolicy ","html":"<p>iam.setPolicy </p>"},{"type":"resource","string":"[Topics: setIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy}","html":"<p>[Topics: setIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy}</a></p>"},{"type":"resource","string":"[Subscriptions: setIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy}","html":"<p>[Subscriptions: setIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy}</a></p>"},{"type":"resource","string":"[Policy]{@link https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy} ","html":"<p>[Policy]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy}\">https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy}</a> </p>"},{"type":"example","string":"var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/pubsub.subscriber',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\ntopic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});\n\nsubscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});","html":"<p>var myPolicy = {<br />  bindings: [<br />    {<br />      role: &#39;roles/pubsub.subscriber&#39;,<br />      members: [&#39;serviceAccount:myotherproject@appspot.gserviceaccount.com&#39;]<br />    }<br />  ]<br />};</p><p>topic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});</p><p>subscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});</p>"}],"description":{"full":"<p>Set the IAM policy</p>","summary":"<p>Set the IAM policy</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":105,"codeStart":139,"code":"IAM.prototype.setPolicy = function(policy, callback) {\n  if (!is.object(policy)) {\n    throw new Error('A policy is required');\n  }\n\n  var path = this.resource + ':setIamPolicy';\n  var body = {\n    policy: policy\n  };\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, resp, resp);\n  });\n};","ctx":{"type":"method","constructor":"IAM","cons":"IAM","name":"setPolicy","string":"IAM.prototype.setPolicy()"}},{"tags":[{"type":"throws","string":"{Error} If permissions are not provided.\n","types":["Error"],"description":"<p>If permissions are not provided. </p>"},{"type":"param","string":"{string|string[]} permissions - The permission(s) to test for.","name":"permissions","description":"<ul>\n<li>The permission(s) to test for.</li>\n</ul>\n","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{array} callback.permissions - A subset of permissions that the caller\n    is allowed","name":"callback.permissions","description":"<ul>\n<li>A subset of permissions that the caller     is allowed</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"iam.testPermissions ","html":"<p>iam.testPermissions </p>"},{"type":"resource","string":"[Topics: testIamPermissions API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions}","html":"<p>[Topics: testIamPermissions API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions}</a></p>"},{"type":"resource","string":"[Subscriptions: testIamPermissions API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions}","html":"<p>[Subscriptions: testIamPermissions API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions}</a></p>"},{"type":"resource","string":"[Permissions Reference]{@link https://cloud.google.com/pubsub/access_control#permissions} ","html":"<p>[Permissions Reference]{@link <a href=\"https://cloud.google.com/pubsub/access_control#permissions}\">https://cloud.google.com/pubsub/access_control#permissions}</a> </p>"},{"type":"example","string":"//-\n// Test a single permission.\n//-\nvar test = 'pubsub.topics.update';\n\ntopic.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.topics.update\": true\n  // }\n});\n\n//-\n// Test several permissions at once.\n//-\nvar tests = [\n  'pubsub.subscriptions.consume',\n  'pubsub.subscriptions.update'\n];\n\nsubscription.iam.testPermissions(tests, function(err, permissions) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.subscriptions.consume\": true,\n  //   \"pubsub.subscriptions.update\": false\n  // }\n});","html":"<p>//-<br />// Test a single permission.<br />//-<br />var test = &#39;pubsub.topics.update&#39;;</p><p>topic.iam.testPermissions(test, function(err, permissions, apiResponse) {<br />  console.log(permissions);<br />  // {<br />  //   &quot;pubsub.topics.update&quot;: true<br />  // }<br />});</p><p>//-<br />// Test several permissions at once.<br />//-<br />var tests = [<br />  &#39;pubsub.subscriptions.consume&#39;,<br />  &#39;pubsub.subscriptions.update&#39;<br />];</p><p>subscription.iam.testPermissions(tests, function(err, permissions) {<br />  console.log(permissions);<br />  // {<br />  //   &quot;pubsub.subscriptions.consume&quot;: true,<br />  //   &quot;pubsub.subscriptions.update&quot;: false<br />  // }<br />});</p>"}],"description":{"full":"<p>Test a set of permissions for a resource.</p><p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>","summary":"<p>Test a set of permissions for a resource.</p>","body":"<p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":159,"codeStart":208,"code":"IAM.prototype.testPermissions = function(permissions, callback) {\n  if (!is.array(permissions) && !is.string(permissions)) {\n    throw new Error('Permissions are required');\n  }\n\n  var path = this.resource + ':testIamPermissions';\n  var body = {\n    permissions: arrify(permissions)\n  };\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var availablePermissions = resp.permissions || [];\n\n    var permissionsHash = body.permissions.reduce(function(acc, permission) {\n      acc[permission] = availablePermissions.indexOf(permission) > -1;\n      return acc;\n    }, {});\n\n    callback(null, permissionsHash, resp);\n  });\n};\n\nmodule.exports = IAM;","ctx":{"type":"method","constructor":"IAM","cons":"IAM","name":"testPermissions","string":"IAM.prototype.testPermissions()"}}],"pubsub":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"pubsub","html":"<p>pubsub</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar format = require('string-format-obj');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:pubsub/subscription}","types":["module:pubsub/subscription"],"typesDescription":"module:<a href=\"module%3Apubsub%2Fsubscription.html\">pubsub/subscription</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:pubsub/subscription}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var Subscription = require('./subscription.js');","ctx":{"type":"declaration","name":"Subscription","value":"require('./subscription.js')","string":"Subscription"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:pubsub/topic}","types":["module:pubsub/topic"],"typesDescription":"module:<a href=\"module%3Apubsub%2Ftopic.html\">pubsub/topic</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:pubsub/topic}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":42,"code":"var Topic = require('./topic.js');","ctx":{"type":"declaration","name":"Topic","value":"require('./topic.js')","string":"Topic"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":44,"codeStart":48,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{string} Base URL for Pub/Sub API.","html":"<p>{string} Base URL for Pub/Sub API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":50,"codeStart":54,"code":"var PUBSUB_BASE_URL = 'https://pubsub.googleapis.com/v1/';","ctx":{"type":"declaration","name":"PUBSUB_BASE_URL","value":"'https://pubsub.googleapis.com/v1/'","string":"PUBSUB_BASE_URL"}},{"tags":[{"type":"const","string":"{array} Required scopes for Pub/Sub API.","html":"<p>{array} Required scopes for Pub/Sub API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":56,"codeStart":60,"code":"var SCOPES = [\n  'https://www.googleapis.com/auth/pubsub',\n  'https://www.googleapis.com/auth/cloud-platform'\n];","ctx":{"type":"declaration","name":"SCOPES","value":"[","string":"SCOPES"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:pubsub ","html":"<p>module:pubsub </p>"},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'my-project'\n});\n\nvar pubsub = gcloud.pubsub();","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;my-project&#39;<br />});</p><p>var pubsub = gcloud.pubsub();</p>"}],"description":{"full":"<p><a href=\"https://developers.google.com/pubsub/overview\">Google Cloud Pub/Sub</a> is a<br />reliable, many-to-many, asynchronous messaging service from Google Cloud<br />Platform.</p>","summary":"<p><a href=\"https://developers.google.com/pubsub/overview\">Google Cloud Pub/Sub</a> is a<br />reliable, many-to-many, asynchronous messaging service from Google Cloud<br />Platform.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":65,"codeStart":83,"code":"function PubSub(options) {\n  if (!(this instanceof PubSub)) {\n    return new PubSub(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory({\n    credentials: options.credentials,\n    keyFile: options.keyFilename,\n    scopes: SCOPES,\n    email: options.email\n  });\n\n  this.projectId = options.projectId;\n  this.projectName = 'projects/' + this.projectId;\n}","ctx":{"type":"constructor","name":"PubSub","string":"PubSub()"}},{"tags":[{"type":"resource","string":"[Topics: list API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/list} ","html":"<p>[Topics: list API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/list}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/list}</a> </p>"},{"type":"param","string":"{object=} query - Query object.","name":"query","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} query.pageToken - Page token.","name":"query.pageToken","description":"<ul>\n<li>Page token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} query.pageSize - Max number of results to return.","name":"query.pageSize","description":"<ul>\n<li>Max number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error from the API call, may be null.","name":"callback.err","description":"<ul>\n<li>An error from the API call, may be null.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:pubsub/topic[]} callback.topics - The list of topics returned.","name":"callback.topics","description":"<ul>\n<li>The list of topics returned.</li>\n</ul>\n","types":["Array.<module:pubsub/topic>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Apubsub%2Ftopic.html\">pubsub/topic</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - A query object representing the next\n    page of topics.","name":"callback.nextQuery","description":"<ul>\n<li>A query object representing the next     page of topics.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response from the\n    service.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response from the     service.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"pubsub.getTopics(function(err, topics) {\n  if (!err) {\n    // topics is an array of Topic objects.\n  }\n});\n\n//-\n// Customize the query.\n//-\npubsub.getTopics({\n  pageSize: 3\n}, function(err, topics) {});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, rows, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    pubsub.getTopics(nextQuery, callback);\n  }\n};\n\npubsub.getTopics({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the topics as a readable object stream.\n//-\npubsub.getTopics()\n  .on('error', console.error)\n  .on('data', function(topic) {\n    // topic is a Topic object.\n  })\n  .on('end', function() {\n    // All topics retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\npubsub.getTopics()\n  .on('data', function(topic) {\n    this.end();\n  });","html":"<p>pubsub.getTopics(function(err, topics) {<br />  if (!err) {<br />    // topics is an array of Topic objects.<br />  }<br />});</p><p>//-<br />// Customize the query.<br />//-<br />pubsub.getTopics({<br />  pageSize: 3<br />}, function(err, topics) {});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, rows, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    pubsub.getTopics(nextQuery, callback);<br />  }<br />};</p><p>pubsub.getTopics({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the topics as a readable object stream.<br />//-<br />pubsub.getTopics()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(topic) {<br />    // topic is a Topic object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All topics retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />pubsub.getTopics()<br />  .on(&#39;data&#39;, function(topic) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of the topics registered to your project. You may optionally<br />provide a query object as the first argument to customize the response.</p>","summary":"<p>Get a list of the topics registered to your project. You may optionally<br />provide a query object as the first argument to customize the response.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":105,"codeStart":174,"code":"PubSub.prototype.getTopics = function(query, callback) {\n  var self = this;\n  if (!callback) {\n    callback = query;\n    query = {};\n  }\n  var path = this.projectName + '/topics';\n  this.makeReq_('GET', path, query, true, function(err, result) {\n    if (err) {\n      callback(err, null, null, result);\n      return;\n    }\n    var topics = (result.topics || []).map(function(item) {\n      var topicInstance = self.topic(item.name);\n      topicInstance.metadata = item;\n      return topicInstance;\n    });\n    var nextQuery = null;\n    if (result.nextPageToken) {\n      nextQuery = query;\n      nextQuery.pageToken = result.nextPageToken;\n    }\n    callback(null, topics, nextQuery, result);\n  });\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"getTopics","string":"PubSub.prototype.getTopics()"}},{"tags":[{"type":"resource","string":"[Topics: create API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/create} ","html":"<p>[Topics: create API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/create}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/create}</a> </p>"},{"type":"param","string":"{string} name - Name of the topic.","name":"name","description":"<ul>\n<li>Name of the topic.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error from the API call, may be null.","name":"callback.err","description":"<ul>\n<li>An error from the API call, may be null.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:pubsub/topic} callback.topic - The newly created topic.","name":"callback.topic","description":"<ul>\n<li>The newly created topic.</li>\n</ul>\n","types":["module:pubsub/topic"],"typesDescription":"module:<a href=\"module%3Apubsub%2Ftopic.html\">pubsub/topic</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response from the\n    service.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response from the     service.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"pubsub.createTopic('my-new-topic', function(err, topic, apiResponse) {\n  if (!err) {\n    // The topic was created successfully.\n  }\n});","html":"<p>pubsub.createTopic(&#39;my-new-topic&#39;, function(err, topic, apiResponse) {<br />  if (!err) {<br />    // The topic was created successfully.<br />  }<br />});</p>"}],"description":{"full":"<p>Create a topic with the given name.</p>","summary":"<p>Create a topic with the given name.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":200,"codeStart":219,"code":"PubSub.prototype.createTopic = function(name, callback) {\n  callback = callback || util.noop;\n  var topic = this.topic(name);\n  var path = this.projectName + '/topics/' + name;\n  this.makeReq_('PUT', path, null, null, function(err, result) {\n    if (err) {\n      callback(err, null, result);\n      return;\n    }\n    callback(null, topic, result);\n  });\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"createTopic","string":"PubSub.prototype.createTopic()"}},{"tags":[{"type":"resource","string":"[Subscriptions: create API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create} ","html":"<p>[Subscriptions: create API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create}</a> </p>"},{"type":"throws","string":"{Error} If a Topic instance or topic name is not provided.","types":["Error"],"description":"<p>If a Topic instance or topic name is not provided.</p>"},{"type":"throws","string":"{Error} If a subName is not provided.\n","types":["Error"],"description":"<p>If a subName is not provided. </p>"},{"type":"param","string":"{module:pubsub/topic|string} - topic - The Topic to create a\n    subscription to.","name":"-","description":"<p>topic - The Topic to create a     subscription to.</p>","types":["module:pubsub/topic","string"],"typesDescription":"module:<a href=\"module%3Apubsub%2Ftopic.html\">pubsub/topic</a>|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} subName - The name of the subscription.","name":"subName","description":"<ul>\n<li>The name of the subscription.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.ackDeadlineSeconds - The maximum time after receiving\n    a message that you must ack a message before it is redelivered.","name":"options.ackDeadlineSeconds","description":"<ul>\n<li>The maximum time after receiving     a message that you must ack a message before it is redelivered.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoAck - Automatically acknowledge the message once\n    it's pulled. (default: false)","name":"options.autoAck","description":"<ul>\n<li>Automatically acknowledge the message once     it&#39;s pulled. (default: false)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.interval - Interval in milliseconds to check for new\n    messages. (default: 10)","name":"options.interval","description":"<ul>\n<li>Interval in milliseconds to check for new     messages. (default: 10)</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.reuseExisting - If the subscription already exists,\n    reuse it. The options of the existing subscription are not changed. If\n    false, attempting to create a subscription that already exists will fail.\n    (default: false)","name":"options.reuseExisting","description":"<ul>\n<li>If the subscription already exists,     reuse it. The options of the existing subscription are not changed. If<br />  false, attempting to create a subscription that already exists will fail.<br />  (default: false)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:pubsub/subscription} callback.subscription - The subscription.","name":"callback.subscription","description":"<ul>\n<li>The subscription.</li>\n</ul>\n","types":["module:pubsub/subscription"],"typesDescription":"module:<a href=\"module%3Apubsub%2Fsubscription.html\">pubsub/subscription</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Subscribe to a topic. (Also see {module:pubsub/topic#subscribe}).\n//-\nvar topic = 'messageCenter';\nvar name = 'newMessages';\n\npubsub.subscribe(topic, name, function(err, subscription, apiResponse) {});\n\n//-\n// Customize the subscription.\n//-\npubsub.subscribe(topic, name, {\n  ackDeadlineSeconds: 90,\n  autoAck: true,\n  interval: 30\n}, function(err, subscription, apiResponse) {});\n\n//-\n// Create a subscription to a topic from another project.\n//-\nvar anotherProject = gcloud.pubsub({\n  projectId: 'another-project'\n});\n\nvar topic = anotherProject.topic('messageCenter');\n\npubsub.subscribe(topic, name, function(err, subscription, apiResponse) {});","html":"<p>//-<br />// Subscribe to a topic. (Also see {module:pubsub/topic#subscribe}).<br />//-<br />var topic = &#39;messageCenter&#39;;<br />var name = &#39;newMessages&#39;;</p><p>pubsub.subscribe(topic, name, function(err, subscription, apiResponse) {});</p><p>//-<br />// Customize the subscription.<br />//-<br />pubsub.subscribe(topic, name, {<br />  ackDeadlineSeconds: 90,<br />  autoAck: true,<br />  interval: 30<br />}, function(err, subscription, apiResponse) {});</p><p>//-<br />// Create a subscription to a topic from another project.<br />//-<br />var anotherProject = gcloud.pubsub({<br />  projectId: &#39;another-project&#39;<br />});</p><p>var topic = anotherProject.topic(&#39;messageCenter&#39;);</p><p>pubsub.subscribe(topic, name, function(err, subscription, apiResponse) {});</p>"}],"description":{"full":"<p>Create a subscription to a topic. You may optionally provide an object to<br />customize the subscription.</p><p>Your provided callback will be invoked with an error object if an API error<br />occurred or a {@linkcode module:pubsub/subscription} object.</p>","summary":"<p>Create a subscription to a topic. You may optionally provide an object to<br />customize the subscription.</p>","body":"<p>Your provided callback will be invoked with an error object if an API error<br />occurred or a {@linkcode module:pubsub/subscription} object.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":232,"codeStart":292,"code":"PubSub.prototype.subscribe = function(topic, subName, options, callback) {\n  if (!is.string(topic) && !(topic instanceof Topic)) {\n    throw new Error('A Topic is required for a new subscription.');\n  }\n\n  if (!is.string(subName)) {\n    throw new Error('A subscription name is required for a new subscription.');\n  }\n\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (is.string(topic)) {\n    topic = this.topic(topic);\n  }\n\n  var body = {\n    topic: topic.name\n  };\n\n  if (options.ackDeadlineSeconds) {\n    body.ackDeadlineSeconds = options.ackDeadlineSeconds;\n  }\n\n  var subscription = this.subscription(subName, options);\n\n  this.makeReq_('PUT', subscription.name, null, body, function(err, result) {\n    if (err && !(err.code === 409 && options.reuseExisting)) {\n      callback(err, null, result);\n      return;\n    }\n\n    callback(null, subscription, result);\n  });\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"subscribe","string":"PubSub.prototype.subscribe()"}},{"tags":[{"type":"throws","string":"{Error} If a name is not provided.\n","types":["Error"],"description":"<p>If a name is not provided. </p>"},{"type":"param","string":"{string} name - The name of the subscription.","name":"name","description":"<ul>\n<li>The name of the subscription.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoAck - Automatically acknowledge the message once\n    it's pulled.","name":"options.autoAck","description":"<ul>\n<li>Automatically acknowledge the message once     it&#39;s pulled.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.interval - Interval in milliseconds to check for new\n    messages.","name":"options.interval","description":"<ul>\n<li>Interval in milliseconds to check for new     messages.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:pubsub/subscription}\n","types":["module:pubsub/subscription"],"typesDescription":"module:<a href=\"module%3Apubsub%2Fsubscription.html\">pubsub/subscription</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:pubsub/subscription}</p>"},{"type":"example","string":"var subscription = pubsub.subscription('my-existing-subscription');\n\n// Register a listener for `message` events.\nsubscription.on('message', function(message) {\n  // Called every time a message is received.\n  // message.id = ID used to acknowledge its receival.\n  // message.data = Contents of the message.\n  // message.attributes = Attributes of the message.\n});","html":"<p>var subscription = pubsub.subscription(&#39;my-existing-subscription&#39;);</p><p>// Register a listener for <code>message</code> events.<br />subscription.on(&#39;message&#39;, function(message) {<br />  // Called every time a message is received.<br />  // message.id = ID used to acknowledge its receival.<br />  // message.data = Contents of the message.<br />  // message.attributes = Attributes of the message.<br />});</p>"}],"description":{"full":"<p>Create a Subscription object in reference to an existing subscription. This<br />command by itself will not run any API requests. You will receive a<br />{@linkcode module:pubsub/subscription} object, which will allow you to<br />interact with your subscription.</p>","summary":"<p>Create a Subscription object in reference to an existing subscription. This<br />command by itself will not run any API requests. You will receive a<br />{@linkcode module:pubsub/subscription} object, which will allow you to<br />interact with your subscription.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":332,"codeStart":359,"code":"PubSub.prototype.subscription = function(name, options) {\n  if (!name) {\n    throw new Error('The name of a subscription is required.');\n  }\n\n  options = options || {};\n  options.name = name;\n  return new Subscription(this, options);\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"subscription","string":"PubSub.prototype.subscription()"}},{"tags":[{"type":"throws","string":"{Error} If a name is not provided.\n","types":["Error"],"description":"<p>If a name is not provided. </p>"},{"type":"param","string":"{string} name - The name of the topic.","name":"name","description":"<ul>\n<li>The name of the topic.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:pubsub/topic}\n","types":["module:pubsub/topic"],"typesDescription":"module:<a href=\"module%3Apubsub%2Ftopic.html\">pubsub/topic</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:pubsub/topic}</p>"},{"type":"example","string":"var topic = pubsub.topic('my-existing-topic');\n\ntopic.publish({\n  data: 'New message!'\n}, function(err) {});","html":"<p>var topic = pubsub.topic(&#39;my-existing-topic&#39;);</p><p>topic.publish({<br />  data: &#39;New message!&#39;<br />}, function(err) {});</p>"}],"description":{"full":"<p>Create a Topic object to reference an existing topic. See<br />{module:pubsub/createTopic} to create a topic.</p>","summary":"<p>Create a Topic object to reference an existing topic. See<br />{module:pubsub/createTopic} to create a topic.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":369,"codeStart":385,"code":"PubSub.prototype.topic = function(name) {\n  if (!name) {\n    throw new Error('A name must be specified for a new topic.');\n  }\n\n  return new Topic(this, name);\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"topic","string":"PubSub.prototype.topic()"}},{"tags":[{"type":"resource","string":"[Subscriptions: list API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/list} ","html":"<p>[Subscriptions: list API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/list}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/list}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|module:pubsub/topic} options.topic - The name of the topic to\n    list subscriptions from.","name":"options.topic","description":"<ul>\n<li>The name of the topic to     list subscriptions from.</li>\n</ul>\n","types":["string","module:pubsub/topic"],"typesDescription":"<code>string</code>|module:<a href=\"module%3Apubsub%2Ftopic.html\">pubsub/topic</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.pageSize - Maximum number of results to return.","name":"options.pageSize","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.pageToken - Page token.","name":"options.pageToken","description":"<ul>\n<li>Page token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error from the API call, may be null.","name":"callback.err","description":"<ul>\n<li>An error from the API call, may be null.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:pubsub/subscription[]} callback.subscriptions - The list of\n    subscriptions returned.","name":"callback.subscriptions","description":"<ul>\n<li>The list of     subscriptions returned.</li>\n</ul>\n","types":["Array.<module:pubsub/subscription>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Apubsub%2Fsubscription.html\">pubsub/subscription</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - A query object representing the next\n    page of topics.","name":"callback.nextQuery","description":"<ul>\n<li>A query object representing the next     page of topics.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response from the\n    service.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response from the     service.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"pubsub.getSubscriptions(function(err, subscriptions) {\n  if (!err) {\n    // subscriptions is an array of Subscription objects.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, subscriptions, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    pubsub.getSubscriptions(nextQuery, callback);\n  }\n};\n\npubsub.getSubscriptions({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the subscriptions as a readable object stream.\n//-\npubsub.getSubscriptions()\n  .on('error', console.error)\n  .on('data', function(subscription) {\n    // subscription is a Subscription object.\n  })\n  .on('end', function() {\n    // All subscriptions retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\npubsub.getSubscriptions()\n  .on('data', function(topic) {\n    this.end();\n  });","html":"<p>pubsub.getSubscriptions(function(err, subscriptions) {<br />  if (!err) {<br />    // subscriptions is an array of Subscription objects.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, subscriptions, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    pubsub.getSubscriptions(nextQuery, callback);<br />  }<br />};</p><p>pubsub.getSubscriptions({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the subscriptions as a readable object stream.<br />//-<br />pubsub.getSubscriptions()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(subscription) {<br />    // subscription is a Subscription object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All subscriptions retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />pubsub.getSubscriptions()<br />  .on(&#39;data&#39;, function(topic) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of the subscriptions registered to all of your project&#39;s topics.<br />You may optionally provide a query object as the first argument to customize<br />the response.</p><p>Your provided callback will be invoked with an error object if an API error<br />occurred or an array of {@linkcode module:pubsub/subscription} objects.</p><p>To get subscriptions for a topic, see {module:pubsub/topic}.</p>","summary":"<p>Get a list of the subscriptions registered to all of your project&#39;s topics.<br />You may optionally provide a query object as the first argument to customize<br />the response.</p>","body":"<p>Your provided callback will be invoked with an error object if an API error<br />occurred or an array of {@linkcode module:pubsub/subscription} objects.</p><p>To get subscriptions for a topic, see {module:pubsub/topic}.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":393,"codeStart":464,"code":"PubSub.prototype.getSubscriptions = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var topicName;\n\n  if (is.string(options.topic)) {\n    topicName = options.topic;\n  } else if (options.topic instanceof Topic) {\n    topicName = options.topic.unformattedName;\n  }\n\n  var query = {};\n\n  if (options.pageSize) {\n    query.pageSize = options.pageSize;\n  }\n\n  if (options.pageToken) {\n    query.pageToken = options.pageToken;\n  }\n\n  var apiPath = format('{projectPath}{topicPath}/subscriptions', {\n    projectPath: 'projects/' + this.projectId,\n    topicPath: topicName ? '/topics/' + topicName : ''\n  });\n\n  this.makeReq_('GET', apiPath, query, null, function(err, result) {\n    if (err) {\n      callback(err, null, null, result);\n      return;\n    }\n\n    var subscriptions = (result.subscriptions || []).map(function(sub) {\n      return new Subscription(self, {\n        // Depending on if we're using a subscriptions.list or\n        // topics.subscriptions.list API endpoint, we will get back a\n        // Subscription resource or just the name of the subscription.\n        name: sub.name || sub\n      });\n    });\n\n    var nextQuery = null;\n\n    if (result.nextPageToken) {\n      nextQuery = options;\n      nextQuery.pageToken = result.nextPageToken;\n    }\n\n    callback(null, subscriptions, nextQuery, result);\n  });\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"getSubscriptions","string":"PubSub.prototype.getSubscriptions()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":523,"codeStart":535,"code":"PubSub.prototype.makeReq_ = function(method, path, q, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: q,\n    uri: PUBSUB_BASE_URL + path\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"PubSub","cons":"PubSub","name":"makeReq_","string":"PubSub.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>These methods can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":549,"codeStart":554,"code":"streamRouter.extend(PubSub, ['getSubscriptions', 'getTopics']);\n\nmodule.exports = PubSub;","ctx":false}],"pubsub/subscription":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"pubsub/subscription","html":"<p>pubsub/subscription</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar events = require('events');\nvar is = require('is');\nvar nodeutil = require('util');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":28,"codeStart":32,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:pubsub/iam}","types":["module:pubsub/iam"],"typesDescription":"module:<a href=\"module%3Apubsub%2Fiam.html\">pubsub/iam</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:pubsub/iam}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":34,"codeStart":38,"code":"var IAM = require('./iam');","ctx":{"type":"declaration","name":"IAM","value":"require('./iam')","string":"IAM"}},{"tags":[{"type":"param","string":"{module:pubsub} pubsub - PubSub object.","name":"pubsub","description":"<ul>\n<li>PubSub object.</li>\n</ul>\n","types":["module:pubsub"],"typesDescription":"module:<a href=\"module%3Apubsub.html\">pubsub</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoAck - Automatically acknowledge the message\n    once it's pulled. (default: false)","name":"options.autoAck","description":"<ul>\n<li>Automatically acknowledge the message     once it&#39;s pulled. (default: false)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.interval - Interval in milliseconds to check for new\n    messages. (default: 10)","name":"options.interval","description":"<ul>\n<li>Interval in milliseconds to check for new     messages. (default: 10)</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.name - Name of the subscription.","name":"options.name","description":"<ul>\n<li>Name of the subscription.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxInProgress - Maximum messages to consume\n    simultaneously.","name":"options.maxInProgress","description":"<ul>\n<li>Maximum messages to consume     simultaneously.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":40,"codeStart":52},{"tags":[{"type":"alias","string":"module:pubsub/subscription","html":"<p>module:pubsub/subscription</p>"},{"type":"constructor","string":"","html":""},{"type":"example","string":"var pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123'\n});\n\n//-\n// From {@linkcode module:pubsub#getSubscriptions}:\n//-\npubsub.getSubscriptions(function(err, subscriptions) {\n  // `subscriptions` is an array of Subscription objects.\n});\n\n//-\n// From {@linkcode module:pubsub/topic#getSubscriptions}:\n//-\nvar topic = pubsub.topic('my-topic');\ntopic.getSubscriptions(function(err, subscriptions) {\n  // `subscriptions` is an array of Subscription objects.\n});\n\n//-\n// From {@linkcode module:pubsub/topic#subscribe}:\n//-\nvar topic = pubsub.topic('my-topic');\ntopic.subscribe('new-subscription', function(err, subscription) {\n  // `subscription` is a Subscription object.\n});\n\n//-\n// From {@linkcode module:pubsub/topic#subscription}:\n//-\nvar topic = pubsub.topic('my-topic');\nvar subscription = topic.subscription('my-existing-subscription');\n// `subscription` is a Subscription object.\n\n//-\n// Once you have obtained a subscription object, you may begin to register\n// listeners. This will automatically trigger pulling for messages.\n//-\n// Register an error handler.\nsubscription.on('error', function(err) {});\n\n// Register a listener for `message` events.\nfunction onMessage(message) {\n  // Called every time a message is received.\n\n  // message.id = ID of the message.\n  // message.ackId = ID used to acknowledge the message receival.\n  // message.data = Contents of the message.\n\n  // Ack the message:\n  // message.ack(callback);\n\n  // Skip the message. This is useful with `maxInProgress` option when\n  // creating your subscription. This doesn't ack the message, but allows\n  // more messages to be retrieved if your limit was hit.\n  // message.skip();\n}\nsubscription.on('message', onMessage);\n\n// Remove the listener from receiving `message` events.\nsubscription.removeListener('message', onMessage);","html":"<p>var pubsub = gcloud.pubsub({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>//-<br />// From {@linkcode module:pubsub#getSubscriptions}:<br />//-<br />pubsub.getSubscriptions(function(err, subscriptions) {<br />  // <code>subscriptions</code> is an array of Subscription objects.<br />});</p><p>//-<br />// From {@linkcode module:pubsub/topic#getSubscriptions}:<br />//-<br />var topic = pubsub.topic(&#39;my-topic&#39;);<br />topic.getSubscriptions(function(err, subscriptions) {<br />  // <code>subscriptions</code> is an array of Subscription objects.<br />});</p><p>//-<br />// From {@linkcode module:pubsub/topic#subscribe}:<br />//-<br />var topic = pubsub.topic(&#39;my-topic&#39;);<br />topic.subscribe(&#39;new-subscription&#39;, function(err, subscription) {<br />  // <code>subscription</code> is a Subscription object.<br />});</p><p>//-<br />// From {@linkcode module:pubsub/topic#subscription}:<br />//-<br />var topic = pubsub.topic(&#39;my-topic&#39;);<br />var subscription = topic.subscription(&#39;my-existing-subscription&#39;);<br />// <code>subscription</code> is a Subscription object.</p><p>//-<br />// Once you have obtained a subscription object, you may begin to register<br />// listeners. This will automatically trigger pulling for messages.<br />//-<br />// Register an error handler.<br />subscription.on(&#39;error&#39;, function(err) {});</p><p>// Register a listener for <code>message</code> events.<br />function onMessage(message) {<br />  // Called every time a message is received.</p><p>  // message.id = ID of the message.<br />  // message.ackId = ID used to acknowledge the message receival.<br />  // message.data = Contents of the message.</p><p>  // Ack the message:<br />  // message.ack(callback);</p><p>  // Skip the message. This is useful with <code>maxInProgress</code> option when<br />  // creating your subscription. This doesn&#39;t ack the message, but allows<br />  // more messages to be retrieved if your limit was hit.<br />  // message.skip();<br />}<br />subscription.on(&#39;message&#39;, onMessage);</p><p>// Remove the listener from receiving <code>message</code> events.<br />subscription.removeListener(&#39;message&#39;, onMessage);</p>"}],"description":{"full":"<p>A Subscription object will give you access to your Google Cloud Pub/Sub<br />subscription.</p><p>Subscriptions are sometimes retrieved when using various methods:</p><ul>\n<li>{@linkcode module:pubsub#getSubscriptions}</li>\n<li>{@linkcode module:pubsub/topic#getSubscriptions}</li>\n<li>{@linkcode module:pubsub/topic#subscribe}</li>\n</ul>\n<p>Subscription objects may be created directly with:</p><ul>\n<li>{@linkcode module:pubsub/topic#subscription}</li>\n</ul>\n<p>All Subscription objects are instances of an<br /><a href=\"http://nodejs.org/api/events.html\">EventEmitter</a>. The subscription will pull<br />for messages automatically as long as there is at least one listener assigned<br />for the <code>message</code> event.</p>","summary":"<p>A Subscription object will give you access to your Google Cloud Pub/Sub<br />subscription.</p>","body":"<p>Subscriptions are sometimes retrieved when using various methods:</p><ul>\n<li>{@linkcode module:pubsub#getSubscriptions}</li>\n<li>{@linkcode module:pubsub/topic#getSubscriptions}</li>\n<li>{@linkcode module:pubsub/topic#subscribe}</li>\n</ul>\n<p>Subscription objects may be created directly with:</p><ul>\n<li>{@linkcode module:pubsub/topic#subscription}</li>\n</ul>\n<p>All Subscription objects are instances of an<br /><a href=\"http://nodejs.org/api/events.html\">EventEmitter</a>. The subscription will pull<br />for messages automatically as long as there is at least one listener assigned<br />for the <code>message</code> event.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":52,"codeStart":137,"code":"function Subscription(pubsub, options) {\n  events.EventEmitter.call(this);\n\n  this.name = Subscription.formatName_(pubsub.projectId, options.name);\n\n  this.makeReq_ = pubsub.makeReq_.bind(pubsub);\n\n  this.autoAck = is.boolean(options.autoAck) ? options.autoAck : false;\n  this.closed = true;\n  this.interval = is.number(options.interval) ? options.interval : 10;\n  this.inProgressAckIds = {};\n  this.maxInProgress =\n    is.number(options.maxInProgress) ? options.maxInProgress : Infinity;\n  this.messageListeners = 0;\n  this.paused = false;","ctx":{"type":"constructor","name":"Subscription","string":"Subscription()"}},{"tags":[{"type":"mixes","string":"module:pubsub/iam ","html":"<p>module:pubsub/iam </p>"},{"type":"resource","string":"[Access Control Overview]{@link https://cloud.google.com/pubsub/access_control}","html":"<p>[Access Control Overview]{@link <a href=\"https://cloud.google.com/pubsub/access_control}\">https://cloud.google.com/pubsub/access_control}</a></p>"},{"type":"resource","string":"[What is Cloud IAM?]{@link https://cloud.google.com/iam/} ","html":"<p>[What is Cloud IAM?]{@link <a href=\"https://cloud.google.com/iam/}\">https://cloud.google.com/iam/}</a> </p>"},{"type":"example","string":"//-\n// Get the IAM policy for your subscription.\n//-\nsubscription.iam.getPolicy(function(err, policy) {\n  console.log(policy);\n});","html":"<p>//-<br />// Get the IAM policy for your subscription.<br />//-<br />subscription.iam.getPolicy(function(err, policy) {<br />  console.log(policy);<br />});</p>"}],"description":{"full":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider<br />range of roles: editor, owner, publisher, subscriber, and viewer. This<br />gives you greater flexibility and allows you to set more fine-grained<br />access control.</p><p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by<br />any SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>","summary":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider<br />range of roles: editor, owner, publisher, subscriber, and viewer. This<br />gives you greater flexibility and allows you to set more fine-grained<br />access control.</p>","body":"<p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by<br />any SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":153,"codeStart":179,"code":"this.iam = new IAM(pubsub, this.name);\n\nthis.listenForEvents_();\n}\n\nnodeutil.inherits(Subscription, events.EventEmitter);","ctx":{"type":"property","receiver":"this","name":"iam","value":"new IAM(pubsub, this.name)","string":"this.iam"}},{"tags":[{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Format the name of a subscription. A subscription&#39;s full name is in the<br />format of projects/{projectId}/subscriptions/{subName}.</p>","summary":"<p>Format the name of a subscription. A subscription&#39;s full name is in the<br />format of projects/{projectId}/subscriptions/{subName}.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":186,"codeStart":192,"code":"Subscription.formatName_ = function(projectId, name) {\n  // Simple check if the name is already formatted.\n  if (name.indexOf('/') > -1) {\n    return name;\n  }\n  return 'projects/' + projectId + '/subscriptions/' + name;\n};","ctx":{"type":"method","receiver":"Subscription","name":"formatName_","string":"Subscription.formatName_()"}},{"tags":[{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Simplify a message from an API response to have three properties, <code>id</code>,<br /><code>data</code> and <code>attributes</code>. <code>data</code> is always converted to a string.</p>","summary":"<p>Simplify a message from an API response to have three properties, <code>id</code>,<br /><code>data</code> and <code>attributes</code>. <code>data</code> is always converted to a string.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":200,"codeStart":206,"code":"Subscription.formatMessage_ = function(msg) {\n  var innerMessage = msg.message;\n  var message = {\n    ackId: msg.ackId\n  };\n\n  if (innerMessage) {\n    message.id = innerMessage.messageId;\n\n    if (innerMessage.data) {\n      message.data = new Buffer(innerMessage.data, 'base64').toString('utf-8');\n\n      try {\n        message.data = JSON.parse(message.data);\n      } catch(e) {}\n    }\n\n    if (innerMessage.attributes) {\n      message.attributes = innerMessage.attributes;\n    }\n  }\n\n  return message;\n};","ctx":{"type":"method","receiver":"Subscription","name":"formatMessage_","string":"Subscription.formatMessage_()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"example","string":"subscription.listenForEvents_();","html":"<p>subscription.listenForEvents_();</p>"}],"description":{"full":"<p>Begin listening for events on the subscription. This method keeps track of<br />how many message listeners are assigned, and then removed, making sure<br />polling is handled automatically.</p><p>As long as there is one active message listener, the connection is open. As<br />soon as there are no more message listeners, the connection is closed.</p>","summary":"<p>Begin listening for events on the subscription. This method keeps track of<br />how many message listeners are assigned, and then removed, making sure<br />polling is handled automatically.</p>","body":"<p>As long as there is one active message listener, the connection is open. As<br />soon as there are no more message listeners, the connection is closed.</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":231,"codeStart":244,"code":"Subscription.prototype.listenForEvents_ = function() {\n  var self = this;\n\n  this.on('newListener', function(event) {\n    if (event === 'message') {\n      self.messageListeners++;\n      if (self.closed) {\n        self.closed = false;\n        self.startPulling_();\n      }\n    }\n  });\n\n  this.on('removeListener', function(event) {\n    if (event === 'message' && --self.messageListeners === 0) {\n      self.closed = true;\n    }\n  });\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"listenForEvents_","string":"Subscription.prototype.listenForEvents_()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"example","string":"subscription.startPulling_();","html":"<p>subscription.startPulling_();</p>"}],"description":{"full":"<p>Poll the backend for new messages. This runs a loop to ping the API at the<br />provided interval from the subscription&#39;s instantiation. If one wasn&#39;t<br />provided, the default value is 10 milliseconds.</p><p>If messages are received, they are emitted on the <code>message</code> event.</p><p>Note: This method is automatically called once a message event handler is<br />assigned to the description.</p><p>To stop pulling, see {@linkcode module:pubsub/subscription#close}.</p>","summary":"<p>Poll the backend for new messages. This runs a loop to ping the API at the<br />provided interval from the subscription&#39;s instantiation. If one wasn&#39;t<br />provided, the default value is 10 milliseconds.</p>","body":"<p>If messages are received, they are emitted on the <code>message</code> event.</p><p>Note: This method is automatically called once a message event handler is<br />assigned to the description.</p><p>To stop pulling, see {@linkcode module:pubsub/subscription#close}.</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":264,"codeStart":281,"code":"Subscription.prototype.startPulling_ = function() {\n  var self = this;\n\n  if (this.closed || this.paused) {\n    return;\n  }\n\n  var maxResults;\n\n  if (this.maxInProgress < Infinity) {\n    maxResults = this.maxInProgress - Object.keys(this.inProgressAckIds).length;\n  }\n\n  this.pull({\n    returnImmediately: false,\n    maxResults: maxResults\n  }, function(err, messages, apiResponse) {\n    if (err) {\n      self.emit('error', err, apiResponse);\n    }\n\n    if (messages) {\n      messages.forEach(function(message) {\n        self.emit('message', message, apiResponse);\n      });\n    }\n\n    setTimeout(self.startPulling_.bind(self), self.interval);\n  });\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"startPulling_","string":"Subscription.prototype.startPulling_()"}},{"tags":[{"type":"resource","string":"[Subscriptions: acknowledge API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/acknowledge} ","html":"<p>[Subscriptions: acknowledge API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/acknowledge}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/acknowledge}</a> </p>"},{"type":"throws","string":"{Error} If at least one ackId is not provided.\n","types":["Error"],"description":"<p>If at least one ackId is not provided. </p>"},{"type":"param","string":"{string|string[]} ackIds - An ackId or array of ackIds.","name":"ackIds","description":"<ul>\n<li>An ackId or array of ackIds.</li>\n</ul>\n","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"subscription.ack('ePHEESyhuE8e...', function(err, apiResponse) {});","html":"<p>subscription.ack(&#39;ePHEESyhuE8e...&#39;, function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Acknowledge to the backend that the message was retrieved. You must provide<br />either a single ackId or an array of ackIds.</p>","summary":"<p>Acknowledge to the backend that the message was retrieved. You must provide<br />either a single ackId or an array of ackIds.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":312,"codeStart":326,"code":"Subscription.prototype.ack = function(ackIds, callback) {\n  var self = this;\n\n  if (!ackIds || ackIds.length === 0) {\n    throw new Error(\n        'At least one ID must be specified before it can be acknowledged.');\n  }\n\n  ackIds = arrify(ackIds);\n\n  var body = {\n    ackIds: ackIds\n  };\n\n  callback = callback || util.noop;\n\n  var path = this.name + ':acknowledge';\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (!err) {\n      ackIds.forEach(function(ackId) {\n        delete self.inProgressAckIds[ackId];\n      });\n      self.refreshPausedStatus_();\n    }\n\n    callback(err, resp);\n  });\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"ack","string":"Subscription.prototype.ack()"}},{"tags":[{"type":"resource","string":"[Subscriptions: delete API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/delete} ","html":"<p>[Subscriptions: delete API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/delete}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"subscription.delete(function(err, apiResponse) {});","html":"<p>subscription.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete the subscription. Pull requests from the current subscription will be<br />errored once unsubscription is complete.</p>","summary":"<p>Delete the subscription. Pull requests from the current subscription will be<br />errored once unsubscription is complete.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":356,"codeStart":367,"code":"Subscription.prototype.delete = function(callback) {\n  var self = this;\n  callback = callback || util.noop;\n  this.makeReq_('DELETE', this.name, null, true, function(err, result) {\n    if (err) {\n      callback(err, result);\n      return;\n    }\n    self.closed = true;\n    self.removeAllListeners();\n    callback(null, result);\n  });\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"delete","string":"Subscription.prototype.delete()"}},{"tags":[{"type":"todo","string":"Should not be racing with other pull. ","html":"<p>Should not be racing with other pull. </p>"},{"type":"resource","string":"[Subscriptions: pull API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/pull} ","html":"<p>[Subscriptions: pull API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/pull}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/pull}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.returnImmediately - If set, the system will respond\n    immediately. Otherwise, wait until new messages are available. Returns if\n    timeout is reached.","name":"options.returnImmediately","description":"<ul>\n<li>If set, the system will respond     immediately. Otherwise, wait until new messages are available. Returns if<br />  timeout is reached.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.maxResults - Limit the amount of messages pulled.","name":"options.maxResults","description":"<ul>\n<li>Limit the amount of messages pulled.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Pull all available messages.\n//-\nsubscription.pull(function(err, messages) {\n  // messages = [\n  //   {\n  //     ackId: '',     // ID used to acknowledge its receival.\n  //     id: '',        // Unique message ID.\n  //     data: '',      // Contents of the message.\n  //     attributes: {} // Attributes of the message.\n  //\n  //     Helper functions:\n  //     ack(callback): // Ack the message.\n  //     skip():        // Free up 1 slot on the sub's maxInProgress value.\n  //   },\n  //   // ...\n  // ]\n});\n\n//-\n// Pull a single message.\n//-\nvar opts = {\n  maxResults: 1\n};\n\nsubscription.pull(opts, function(err, messages, apiResponse) {});","html":"<p>//-<br />// Pull all available messages.<br />//-<br />subscription.pull(function(err, messages) {<br />  // messages = [<br />  //   {<br />  //     ackId: &#39;&#39;,     // ID used to acknowledge its receival.<br />  //     id: &#39;&#39;,        // Unique message ID.<br />  //     data: &#39;&#39;,      // Contents of the message.<br />  //     attributes: {} // Attributes of the message.<br />  //<br />  //     Helper functions:<br />  //     ack(callback): // Ack the message.<br />  //     skip():        // Free up 1 slot on the sub&#39;s maxInProgress value.<br />  //   },<br />  //   // ...<br />  // ]<br />});</p><p>//-<br />// Pull a single message.<br />//-<br />var opts = {<br />  maxResults: 1<br />};</p><p>subscription.pull(opts, function(err, messages, apiResponse) {});</p>"}],"description":{"full":"<p>Pull messages from the subscribed topic. If messages were found, your<br />callback is executed with an array of message objects.</p><p>Note that messages are pulled automatically once you register your first<br />event listener to the subscription, thus the call to <code>pull</code> is handled for<br />you. If you don&#39;t want to start pulling, simply don&#39;t register a<br /><code>subscription.on(&#39;message&#39;, function() {})</code> event handler.</p>","summary":"<p>Pull messages from the subscribed topic. If messages were found, your<br />callback is executed with an array of message objects.</p>","body":"<p>Note that messages are pulled automatically once you register your first<br />event listener to the subscription, thus the call to <code>pull</code> is handled for<br />you. If you don&#39;t want to start pulling, simply don&#39;t register a<br /><code>subscription.on(&#39;message&#39;, function() {})</code> event handler.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":381,"codeStart":430,"code":"Subscription.prototype.pull = function(options, callback) {\n  var self = this;\n  var MAX_EVENTS_LIMIT = 1000;\n\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!is.number(options.maxResults)) {\n    options.maxResults = MAX_EVENTS_LIMIT;\n  }\n\n  var body = {\n    returnImmediately: !!options.returnImmediately,\n    maxMessages: options.maxResults\n  };\n\n  var path = this.name + ':pull';\n  this.makeReq_('POST', path, null, body, function(err, response) {\n    if (err) {\n      callback(err, null, response);\n      return;\n    }\n\n    var messages = response.receivedMessages || [];\n    messages = messages\n      .map(Subscription.formatMessage_)\n      .map(self.decorateMessage_.bind(self));\n\n    self.refreshPausedStatus_();\n\n    if (self.autoAck && messages.length !== 0) {\n      var ackIds = messages.map(function(message) {\n        return message.ackId;\n      });\n\n      self.ack(ackIds, function(err) {\n        callback(err, messages, response);\n      });\n    } else {\n      callback(null, messages, response);\n    }\n  });\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"pull","string":"Subscription.prototype.pull()"}},{"tags":[{"type":"resource","string":"[Subscriptions: modifyAckDeadline API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/modifyAckDeadline} ","html":"<p>[Subscriptions: modifyAckDeadline API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/modifyAckDeadline}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/modifyAckDeadline}</a> </p>"},{"type":"param","string":"{object} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number|number[]} options.ackIds - The ack id(s) to change.","name":"options.ackIds","description":"<ul>\n<li>The ack id(s) to change.</li>\n</ul>\n","types":["number","Array.<number>"],"typesDescription":"<code>number</code>|<code>Array</code>.&lt;<code>number</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.seconds - Number of seconds after call is made to\n    set the deadline of the ack.","name":"options.seconds","description":"<ul>\n<li>Number of seconds after call is made to     set the deadline of the ack.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Function=} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["Function"],"typesDescription":"<code>Function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var options = {\n  ackIds: [123],\n  seconds: 10 // Expire in 10 seconds from call.\n};\n\nsubscription.setAckDeadline(options, function(err, apiResponse) {});","html":"<p>var options = {<br />  ackIds: [123],<br />  seconds: 10 // Expire in 10 seconds from call.<br />};</p><p>subscription.setAckDeadline(options, function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Modify the ack deadline for a specific message. This method is useful to<br />indicate that more time is needed to process a message by the subscriber, or<br />to make the message available for redelivery if the processing was<br />interrupted.</p>","summary":"<p>Modify the ack deadline for a specific message. This method is useful to<br />indicate that more time is needed to process a message by the subscriber, or<br />to make the message available for redelivery if the processing was<br />interrupted.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":476,"codeStart":498,"code":"Subscription.prototype.setAckDeadline = function(options, callback) {\n  var body = {\n    ackIds: arrify(options.ackIds),\n    ackDeadlineSeconds: options.seconds\n  };\n\n  callback = callback || util.noop;\n\n  var path = this.name + ':modifyAckDeadline';\n  this.makeReq_('POST', path, null, body, callback);\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"setAckDeadline","string":"Subscription.prototype.setAckDeadline()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{object} message - A message object.","name":"message","description":"<ul>\n<li>A message object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object} message - The original message after being decorated.","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>message - The original message after being decorated.</p>"},{"type":"param","string":"{function} message.ack - Ack the message.","name":"message.ack","description":"<ul>\n<li>Ack the message.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} message.skip - Increate the number of available messages to\n    simultaneously receive.","name":"message.skip","description":"<ul>\n<li>Increate the number of available messages to     simultaneously receive.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Add functionality on top of a message returned from the API, including the<br />ability to <code>ack</code> and <code>skip</code> the message.</p><p>This also records the message as being &quot;in progress&quot;. See<br />{module:subscription#refreshPausedStatus_}.</p>","summary":"<p>Add functionality on top of a message returned from the API, including the<br />ability to <code>ack</code> and <code>skip</code> the message.</p>","body":"<p>This also records the message as being &quot;in progress&quot;. See<br />{module:subscription#refreshPausedStatus_}.</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":510,"codeStart":525,"code":"Subscription.prototype.decorateMessage_ = function(message) {\n  var self = this;\n\n  this.inProgressAckIds[message.ackId] = true;\n\n  message.ack = self.ack.bind(self, message.ackId);\n\n  message.skip = function() {\n    delete self.inProgressAckIds[message.ackId];\n    self.refreshPausedStatus_();\n  };\n\n  return message;\n};","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"decorateMessage_","string":"Subscription.prototype.decorateMessage_()"}},{"tags":[{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Update the status of <code>maxInProgress</code>. Å subscription becomes &quot;paused&quot; (not<br />pulling) when the number of messages that have yet to be ack&#39;d or skipped<br />exceeds the user&#39;s specified <code>maxInProgress</code> value.</p><p>This will start pulling when that event reverses: we were paused, but one or<br />more messages were just ack&#39;d or skipped, freeing up room for more messages<br />to be consumed.</p>","summary":"<p>Update the status of <code>maxInProgress</code>. Å subscription becomes &quot;paused&quot; (not<br />pulling) when the number of messages that have yet to be ack&#39;d or skipped<br />exceeds the user&#39;s specified <code>maxInProgress</code> value.</p>","body":"<p>This will start pulling when that event reverses: we were paused, but one or<br />more messages were just ack&#39;d or skipped, freeing up room for more messages<br />to be consumed.</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":540,"codeStart":551,"code":"Subscription.prototype.refreshPausedStatus_ = function() {\n  var isCurrentlyPaused = this.paused;\n  var inProgress = Object.keys(this.inProgressAckIds).length;\n  this.paused = inProgress >= this.maxInProgress;\n\n  if (isCurrentlyPaused && !this.paused && this.messageListeners > 0) {\n    this.startPulling_();\n  }\n};\n\nmodule.exports = Subscription;","ctx":{"type":"method","constructor":"Subscription","cons":"Subscription","name":"refreshPausedStatus_","string":"Subscription.prototype.refreshPausedStatus_()"}}],"pubsub/topic":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"pubsub/topic","html":"<p>pubsub/topic</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar arrify = require('arrify');\nvar is = require('is');\nvar prop = require('propprop');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":31,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{module:pubsub/iam}","types":["module:pubsub/iam"],"typesDescription":"module:<a href=\"module%3Apubsub%2Fiam.html\">pubsub/iam</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:pubsub/iam}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":33,"codeStart":37,"code":"var IAM = require('./iam');","ctx":{"type":"declaration","name":"IAM","value":"require('./iam')","string":"IAM"}},{"tags":[{"type":"param","string":"{module:pubsub} pubsub - PubSub object.","name":"pubsub","description":"<ul>\n<li>PubSub object.</li>\n</ul>\n","types":["module:pubsub"],"typesDescription":"module:<a href=\"module%3Apubsub.html\">pubsub</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - Name of the topic.","name":"name","description":"<ul>\n<li>Name of the topic.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":39,"codeStart":44},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:pubsub/topic ","html":"<p>module:pubsub/topic </p>"},{"type":"example","string":"var pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123'\n});\n\nvar topic = pubsub.topic('my-topic');","html":"<p>var pubsub = gcloud.pubsub({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var topic = pubsub.topic(&#39;my-topic&#39;);</p>"}],"description":{"full":"<p>A Topic object allows you to interact with a Google Cloud Pub/Sub topic.</p>","summary":"<p>A Topic object allows you to interact with a Google Cloud Pub/Sub topic.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":44,"codeStart":57,"code":"function Topic(pubsub, name) {\n  this.name = Topic.formatName_(pubsub.projectId, name);\n\n  this.projectId = pubsub.projectId;\n  this.pubsub = pubsub;\n  this.unformattedName = name;\n\n  this.makeReq_ = this.pubsub.makeReq_.bind(this.pubsub);","ctx":{"type":"constructor","name":"Topic","string":"Topic()"}},{"tags":[{"type":"mixes","string":"module:pubsub/iam ","html":"<p>module:pubsub/iam </p>"},{"type":"resource","string":"[Access Control Overview]{@link https://cloud.google.com/pubsub/access_control}","html":"<p>[Access Control Overview]{@link <a href=\"https://cloud.google.com/pubsub/access_control}\">https://cloud.google.com/pubsub/access_control}</a></p>"},{"type":"resource","string":"[What is Cloud IAM?]{@link https://cloud.google.com/iam/} ","html":"<p>[What is Cloud IAM?]{@link <a href=\"https://cloud.google.com/iam/}\">https://cloud.google.com/iam/}</a> </p>"},{"type":"example","string":"//-\n// Get the IAM policy for your topic.\n//-\ntopic.iam.getPolicy(function(err, policy) {\n  console.log(policy);\n});","html":"<p>//-<br />// Get the IAM policy for your topic.<br />//-<br />topic.iam.getPolicy(function(err, policy) {<br />  console.log(policy);<br />});</p>"}],"description":{"full":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider<br />range of roles: editor, owner, publisher, subscriber, and viewer. This<br />gives you greater flexibility and allows you to set more fine-grained<br />access control.</p><p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by<br />any SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>","summary":"<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider<br />range of roles: editor, owner, publisher, subscriber, and viewer. This<br />gives you greater flexibility and allows you to set more fine-grained<br />access control.</p>","body":"<p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by<br />any SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":66,"codeStart":92,"code":"this.iam = new IAM(pubsub, this.name);\n}","ctx":{"type":"property","receiver":"this","name":"iam","value":"new IAM(pubsub, this.name)","string":"this.iam"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"return","string":"{object}","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"}],"description":{"full":"<p>Format a message object as the upstream API expects it.</p>","summary":"<p>Format a message object as the upstream API expects it.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":95,"codeStart":102,"code":"Topic.formatMessage_ = function(message) {\n  if (!(message.data instanceof Buffer)) {\n    message.data = new Buffer(JSON.stringify(message.data));\n  }\n\n  message.data = message.data.toString('base64');\n\n  return message;\n};","ctx":{"type":"method","receiver":"Topic","name":"formatMessage_","string":"Topic.formatMessage_()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"return","string":"{string}","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{string}</p>"}],"description":{"full":"<p>Format the name of a topic. A Topic&#39;s full name is in the format of<br />&#39;projects/{projectId}/topics/{topicName}&#39;.</p>","summary":"<p>Format the name of a topic. A Topic&#39;s full name is in the format of<br />&#39;projects/{projectId}/topics/{topicName}&#39;.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":112,"codeStart":120,"code":"Topic.formatName_ = function(projectId, name) {\n  // Simple check if the name is already formatted.\n  if (name.indexOf('/') > -1) {\n    return name;\n  }\n  return 'projects/' + projectId + '/topics/' + name;\n};","ctx":{"type":"method","receiver":"Topic","name":"formatName_","string":"Topic.formatName_()"}},{"tags":[{"type":"resource","string":"[Topics: publish API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/publish} ","html":"<p>[Topics: publish API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/publish}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/publish}</a> </p>"},{"type":"throws","string":"{Error} If no message is provided.","types":["Error"],"description":"<p>If no message is provided.</p>"},{"type":"throws","string":"{Error} If a message is missing a data property.\n","types":["Error"],"description":"<p>If a message is missing a data property. </p>"},{"type":"param","string":"{object|object[]} message - The message(s) to publish.","name":"message","description":"<ul>\n<li>The message(s) to publish.</li>\n</ul>\n","types":["object","Array.<object>"],"typesDescription":"<code>object</code>|<code>Array</code>.&lt;<code>object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} message.data - The contents of the message.","name":"message.data","description":"<ul>\n<li>The contents of the message.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{array=} message.attributes - Key/value pair of attributes to apply to\n    the message. All values must be strings.","name":"message.attributes","description":"<ul>\n<li>Key/value pair of attributes to apply to     the message. All values must be strings.</li>\n</ul>\n","types":["array"],"typesDescription":"<code>array</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"topic.publish({\n  data: 'Hello, world!'\n}, function(err, messageIds, apiResponse) {});\n\n//-\n// The data property can be a JSON object as well.\n//-\nvar registerMessage = {\n  data: {\n    userId: 3,\n    name: 'Stephen',\n    event: 'new user'\n  },\n  attributes: {\n    key: 'value',\n    hello: 'world'\n  }\n};\n\ntopic.publish(registerMessage, function(err, messageIds, apiResponse) {});\n\n//-\n// You can publish a batch of messages at once by supplying an array.\n//-\nvar purchaseMessage = {\n  data: {\n    userId: 3,\n    product: 'computer',\n    event: 'purchase'\n  }\n};\n\ntopic.publish([\n  registerMessage,\n  purchaseMessage\n], function(err, messageIds, apiResponse) {});","html":"<p>topic.publish({<br />  data: &#39;Hello, world!&#39;<br />}, function(err, messageIds, apiResponse) {});</p><p>//-<br />// The data property can be a JSON object as well.<br />//-<br />var registerMessage = {<br />  data: {<br />    userId: 3,<br />    name: &#39;Stephen&#39;,<br />    event: &#39;new user&#39;<br />  },<br />  attributes: {<br />    key: &#39;value&#39;,<br />    hello: &#39;world&#39;<br />  }<br />};</p><p>topic.publish(registerMessage, function(err, messageIds, apiResponse) {});</p><p>//-<br />// You can publish a batch of messages at once by supplying an array.<br />//-<br />var purchaseMessage = {<br />  data: {<br />    userId: 3,<br />    product: &#39;computer&#39;,<br />    event: &#39;purchase&#39;<br />  }<br />};</p><p>topic.publish([<br />  registerMessage,<br />  purchaseMessage<br />], function(err, messageIds, apiResponse) {});</p>"}],"description":{"full":"<p>Publish the provided message or array of messages. On success, an array of<br />messageIds is returned in the response.</p>","summary":"<p>Publish the provided message or array of messages. On success, an array of<br />messageIds is returned in the response.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":128,"codeStart":181,"code":"Topic.prototype.publish = function(messages, callback) {\n  messages = arrify(messages);\n\n  if (messages.length === 0) {\n    throw new Error('Cannot publish without a message.');\n  }\n\n  if (!messages.every(prop('data'))) {\n    throw new Error('Cannot publish message without a `data` property.');\n  }\n\n  callback = callback || util.noop;\n\n  var body = {\n    messages: messages.map(Topic.formatMessage_)\n  };\n\n  var path = this.name + ':publish';\n  this.makeReq_('POST', path, null, body, function(err, result) {\n    if (err) {\n      callback(err, null, result);\n      return;\n    }\n    callback(null, result && result.messageIds || [], result);\n  });\n};","ctx":{"type":"method","constructor":"Topic","cons":"Topic","name":"publish","string":"Topic.prototype.publish()"}},{"tags":[{"type":"resource","string":"[Topics: delete API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/delete} ","html":"<p>[Topics: delete API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/delete}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"topic.delete(function(err, apiResponse) {});","html":"<p>topic.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete the topic. This will not delete subscriptions to this topic.</p>","summary":"<p>Delete the topic. This will not delete subscriptions to this topic.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":208,"codeStart":218,"code":"Topic.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n  this.makeReq_('DELETE', this.name, null, null, callback);\n};","ctx":{"type":"method","constructor":"Topic","cons":"Topic","name":"delete","string":"Topic.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Topics: get API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/get} ","html":"<p>[Topics: get API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/get}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The metadata of the Topic.","name":"callback.metadata","description":"<ul>\n<li>The metadata of the Topic.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.","name":"callback.apiResponse","description":"<ul>\n<li>The full API response.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Get the official representation of this topic from the API.</p>","summary":"<p>Get the official representation of this topic from the API.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":223,"codeStart":233,"code":"Topic.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  this.makeReq_('GET', this.name, null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Topic","cons":"Topic","name":"getMetadata","string":"Topic.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Subscriptions: list API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics.subscriptions/list} ","html":"<p>[Subscriptions: list API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics.subscriptions/list}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics.subscriptions/list}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} options.pageSize - Maximum number of results to return.","name":"options.pageSize","description":"<ul>\n<li>Maximum number of results to return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.pageToken - Page token.","name":"options.pageToken","description":"<ul>\n<li>Page token.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var callback = function(err, subscriptions, nextQuery, apiResponse) {\n  // If `nextQuery` is non-null, there may be more results to fetch. To do\n  // so, run `topic.getSubscriptions(nextQuery, callback);`.\n};\n\n// Get all subscriptions for this topic.\ntopic.getSubscriptions(callback);\n\n// Customize the query.\ntopic.getSubscriptions({\n  pageSize: 3\n}, callback);\n\n//-\n// Get the subscriptions for this topic as a readable object stream.\n//-\ntopic.getSubscriptions()\n  .on('error', console.error)\n  .on('data', function(subscription) {\n    // subscription is a Subscription object.\n  })\n  .on('end', function() {\n    // All subscriptions retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ntopic.getSubscriptions()\n  .on('data', function(subscription) {\n    this.end();\n  });","html":"<p>var callback = function(err, subscriptions, nextQuery, apiResponse) {<br />  // If <code>nextQuery</code> is non-null, there may be more results to fetch. To do<br />  // so, run <code>topic.getSubscriptions(nextQuery, callback);</code>.<br />};</p><p>// Get all subscriptions for this topic.<br />topic.getSubscriptions(callback);</p><p>// Customize the query.<br />topic.getSubscriptions({<br />  pageSize: 3<br />}, callback);</p><p>//-<br />// Get the subscriptions for this topic as a readable object stream.<br />//-<br />topic.getSubscriptions()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(subscription) {<br />    // subscription is a Subscription object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All subscriptions retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />topic.getSubscriptions()<br />  .on(&#39;data&#39;, function(subscription) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get a list of the subscriptions registered to this topic. You may optionally<br />provide a query object as the first argument to customize the response.</p><p>Your provided callback will be invoked with an error object if an API error<br />occurred or an array of {@linkcode module:pubsub/subscription} objects.</p>","summary":"<p>Get a list of the subscriptions registered to this topic. You may optionally<br />provide a query object as the first argument to customize the response.</p>","body":"<p>Your provided callback will be invoked with an error object if an API error<br />occurred or an array of {@linkcode module:pubsub/subscription} objects.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":247,"codeStart":296,"code":"Topic.prototype.getSubscriptions = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.topic = this;\n\n  return this.pubsub.getSubscriptions(options, callback);\n};","ctx":{"type":"method","constructor":"Topic","cons":"Topic","name":"getSubscriptions","string":"Topic.prototype.getSubscriptions()"}},{"tags":[{"type":"resource","string":"[Subscriptions: create API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create} ","html":"<p>[Subscriptions: create API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/create}</a> </p>"},{"type":"param","string":"{string} subName - The name of the subscription.","name":"subName","description":"<ul>\n<li>The name of the subscription.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} options.ackDeadlineSeconds - The maximum time after\n    receiving a message that you must ack a message before it is redelivered.","name":"options.ackDeadlineSeconds","description":"<ul>\n<li>The maximum time after     receiving a message that you must ack a message before it is redelivered.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} options.autoAck - Automatically acknowledge the message\n    once it's pulled. (default: false)","name":"options.autoAck","description":"<ul>\n<li>Automatically acknowledge the message     once it&#39;s pulled. (default: false)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} options.interval - Interval in milliseconds to check for new\n    messages. (default: 10)","name":"options.interval","description":"<ul>\n<li>Interval in milliseconds to check for new     messages. (default: 10)</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} options.reuseExisting - If the subscription already exists,\n    reuse it. The options of the existing subscription are not changed. If\n    false, attempting to create a subscription that already exists will fail.\n    (default: false)","name":"options.reuseExisting","description":"<ul>\n<li>If the subscription already exists,     reuse it. The options of the existing subscription are not changed. If<br />  false, attempting to create a subscription that already exists will fail.<br />  (default: false)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.\n","name":"callback","description":"<ul>\n<li>The callback function. </li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"// Without specifying any options.\ntopic.subscribe('newMessages', function(err, subscription, apiResponse) {});\n\n// With options.\ntopic.subscribe('newMessages', {\n  ackDeadlineSeconds: 90,\n  autoAck: true,\n  interval: 30\n}, function(err, subscription, apiResponse) {});","html":"<p>// Without specifying any options.<br />topic.subscribe(&#39;newMessages&#39;, function(err, subscription, apiResponse) {});</p><p>// With options.<br />topic.subscribe(&#39;newMessages&#39;, {<br />  ackDeadlineSeconds: 90,<br />  autoAck: true,<br />  interval: 30<br />}, function(err, subscription, apiResponse) {});</p>"}],"description":{"full":"<p>Create a subscription to this topic. You may optionally provide an object to<br />customize the subscription.</p><p>Your provided callback will be invoked with an error object if an API error<br />occurred or a {@linkcode module:pubsub/subscription} object.</p>","summary":"<p>Create a subscription to this topic. You may optionally provide an object to<br />customize the subscription.</p>","body":"<p>Your provided callback will be invoked with an error object if an API error<br />occurred or a {@linkcode module:pubsub/subscription} object.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":308,"codeStart":342,"code":"Topic.prototype.subscribe = function(subName, options, callback) {\n  this.pubsub.subscribe(this, subName, options, callback);\n};","ctx":{"type":"method","constructor":"Topic","cons":"Topic","name":"subscribe","string":"Topic.prototype.subscribe()"}},{"tags":[{"type":"param","string":"{string} name - Name of the subscription.","name":"name","description":"<ul>\n<li>Name of the subscription.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} options.autoAck - Automatically acknowledge the message\n    once it's pulled.","name":"options.autoAck","description":"<ul>\n<li>Automatically acknowledge the message     once it&#39;s pulled.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} options.interval - Interval in milliseconds to check for new\n    messages.","name":"options.interval","description":"<ul>\n<li>Interval in milliseconds to check for new     messages.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:pubsub/subscription}\n","types":["module:pubsub/subscription"],"typesDescription":"module:<a href=\"module%3Apubsub%2Fsubscription.html\">pubsub/subscription</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:pubsub/subscription}</p>"},{"type":"example","string":"var subscription = topic.subscription('my-existing-subscription');\n\n// Register a listener for `message` events.\nsubscription.on('message', function(message) {\n  // Called every time a message is received.\n  // message.id = ID used to acknowledge its receival.\n  // message.data = Contents of the message.\n  // message.attributes = Attributes of the message.\n});","html":"<p>var subscription = topic.subscription(&#39;my-existing-subscription&#39;);</p><p>// Register a listener for <code>message</code> events.<br />subscription.on(&#39;message&#39;, function(message) {<br />  // Called every time a message is received.<br />  // message.id = ID used to acknowledge its receival.<br />  // message.data = Contents of the message.<br />  // message.attributes = Attributes of the message.<br />});</p>"}],"description":{"full":"<p>Create a Subscription object in reference to an existing subscription. This<br />command by itself will not run any API requests. You will receive a<br />{@linkcode module:pubsub/subscription} object, which will allow you to<br />interact with your subscription.</p>","summary":"<p>Create a Subscription object in reference to an existing subscription. This<br />command by itself will not run any API requests. You will receive a<br />{@linkcode module:pubsub/subscription} object, which will allow you to<br />interact with your subscription.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":346,"codeStart":371,"code":"Topic.prototype.subscription = function(name, options) {\n  return this.pubsub.subscription(name, options);\n};\n\nmodule.exports = Topic;","ctx":{"type":"method","constructor":"Topic","cons":"Topic","name":"subscription","string":"Topic.prototype.subscription()"}}],"search/document":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"search/document","html":"<p>search/document</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:search/field}","types":["module:search/field"],"typesDescription":"module:<a href=\"module%3Asearch%2Ffield.html\">search/field</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:search/field}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":25,"codeStart":29,"code":"var Field = require('./field.js');","ctx":{"type":"declaration","name":"Field","value":"require('./field.js')","string":"Field"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":31,"codeStart":35,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:search/document ","html":"<p>module:search/document </p>"},{"type":"param","string":"{string=} id - ID of the document.\n","name":"id","description":"<ul>\n<li>ID of the document. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar search = gcloud.search({\n  projectId: 'grape-spaceship-123'\n});\n\nvar document = search.index('records').document('stephen');","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var search = gcloud.search({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var document = search.index(&#39;records&#39;).document(&#39;stephen&#39;);</p>"}],"description":{"full":"<p>Create a Document object to create or manipulate a document from your index.</p>","summary":"<p>Create a Document object to create or manipulate a document from your index.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":37,"codeStart":54,"code":"function Document(index, id) {\n  this.search_ = index.search_;\n  this.index_ = index;\n\n  this.id = id;\n  this.fields = {};\n}","ctx":{"type":"constructor","name":"Document","string":"Document()"}},{"tags":[{"type":"throws","string":"{error} if a name is not provided.\n","types":["error"],"description":"<p>if a name is not provided. </p>"},{"type":"param","string":"{string} name - This field's name.","name":"name","description":"<ul>\n<li>This field&#39;s name.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:search/field}\n","types":["module:search/field"],"typesDescription":"module:<a href=\"module%3Asearch%2Ffield.html\">search/field</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:search/field}</p>"},{"type":"example","string":"var scoreField = document.addField('score');\n// scoreField is a Field object.","html":"<p>var scoreField = document.addField(&#39;score&#39;);<br />// scoreField is a Field object.</p>"}],"description":{"full":"<p>Add a field to this document.</p>","summary":"<p>Add a field to this document.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":62,"codeStart":74,"code":"Document.prototype.addField = function(name) {\n  if (!is.string(name)) {\n    throw new Error('A name is required to add a field to this document.');\n  }\n\n  this.fields[name] = new Field();\n\n  return this.fields[name];\n};","ctx":{"type":"method","constructor":"Document","cons":"Document","name":"addField","string":"Document.prototype.addField()"}},{"tags":[{"type":"resource","string":"[Documents: delete API Documentation]{@link https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/delete} ","html":"<p>[Documents: delete API Documentation]{@link <a href=\"https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/delete}\">https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"document.delete(function(err, apiResponse) {});","html":"<p>document.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete this document.</p>","summary":"<p>Delete this document.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":84,"codeStart":96,"code":"Document.prototype.delete = function(callback) {\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    (callback || util.noop)(err, resp);\n  });\n};","ctx":{"type":"method","constructor":"Document","cons":"Document","name":"delete","string":"Document.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Documents: get API Documentation]{@link https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/get} ","html":"<p>[Documents: get API Documentation]{@link <a href=\"https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/get}\">https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/get}</a> </p>"},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:search/document} callback.doc - The Document reference.","name":"callback.doc","description":"<ul>\n<li>The Document reference.</li>\n</ul>\n","types":["module:search/document"],"typesDescription":"module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"document.getMetadata(function(err, doc, apiResponse) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // `doc` is a reference to `document`, both of which are now up to date.\n  //\n  //   document.fields = Array of Field objects.\n  //   document.rank = Document's numeric rank.\n});","html":"<p>document.getMetadata(function(err, doc, apiResponse) {<br />  if (err) {<br />    console.error(err);<br />    return;<br />  }</p><p>  // <code>doc</code> is a reference to <code>document</code>, both of which are now up to date.<br />  //<br />  //   document.fields = Array of Field objects.<br />  //   document.rank = Document&#39;s numeric rank.<br />});</p>"}],"description":{"full":"<p>Get the details of this document. After running, the Document instance will<br />update the <code>fields</code> and <code>rank</code> properties to their most recent values at the<br />time of this call.</p>","summary":"<p>Get the details of this document. After running, the Document instance will<br />update the <code>fields</code> and <code>rank</code> properties to their most recent values at the<br />time of this call.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":102,"codeStart":127,"code":"Document.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '/', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.fields = {};\n    delete self.rank;\n\n    if (is.object(resp.fields)) {\n      Object.keys(resp.fields).forEach(function(fieldName) {\n        var fieldInstance = self.addField(fieldName);\n        fieldInstance.values = resp.fields[fieldName].values;\n      });\n    }\n\n    if (is.number(resp.rank)) {\n      self.rank = resp.rank;\n    }\n\n    callback(null, self, resp);\n  });\n};","ctx":{"type":"method","constructor":"Document","cons":"Document","name":"getMetadata","string":"Document.prototype.getMetadata()"}},{"tags":[{"type":"throws","string":"{error} If a rank is not a number.\n","types":["error"],"description":"<p>If a rank is not a number. </p>"},{"type":"param","string":"{number} rank - The rank of this document.\n","name":"rank","description":"<ul>\n<li>The rank of this document. </li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"document.setRank(8);","html":"<p>document.setRank(8);</p>"}],"description":{"full":"<p>Set the rank for this document. The rank of a document is a positive integer<br />which determines the default ordering of documents returned from a search. By<br />default, the rank is set at the time the document is created to the number of<br />seconds since January 1, 2011.</p>","summary":"<p>Set the rank for this document. The rank of a document is a positive integer<br />which determines the default ordering of documents returned from a search. By<br />default, the rank is set at the time the document is created to the number of<br />seconds since January 1, 2011.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":156,"codeStart":169,"code":"Document.prototype.setRank = function(rank) {\n  if (!is.number(rank) || rank < 0) {\n    throw new Error('rank should be a positive integer.');\n  }\n\n  this.rank = rank;\n};","ctx":{"type":"method","constructor":"Document","cons":"Document","name":"setRank","string":"Document.prototype.setRank()"}},{"tags":[{"type":"example","string":"document.toJSON();\n// {\n//   docId: 'this-document-id',\n//   fields: {\n//     // ...\n//   },\n//   rank: 8\n// }","html":"<p>document.toJSON();<br />// {<br />//   docId: &#39;this-document-id&#39;,<br />//   fields: {<br />//     // ...<br />//   },<br />//   rank: 8<br />// }</p>"}],"description":{"full":"<p>Return just the document detail properties of this Document instance.</p>","summary":"<p>Return just the document detail properties of this Document instance.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":177,"codeStart":190,"code":"Document.prototype.toJSON = function() {\n  var documentObject = {\n    fields: this.fields\n  };\n\n  if (is.string(this.id)) {\n    documentObject.docId = this.id;\n  }\n\n  if (is.number(this.rank)) {\n    documentObject.rank = this.rank;\n  }\n\n  return documentObject;\n};","ctx":{"type":"method","constructor":"Document","cons":"Document","name":"toJSON","string":"Document.prototype.toJSON()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":206,"codeStart":218,"code":"Document.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/documents/' + this.id + path;\n\n  this.index_.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Document;","ctx":{"type":"method","constructor":"Document","cons":"Document","name":"makeReq_","string":"Document.prototype.makeReq_()"}}],"search/field":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"search/field","html":"<p>search/field</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar format = require('string-format-obj');\nvar is = require('is');","ctx":false},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:search/field ","html":"<p>module:search/field </p>"},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar search = gcloud.search({\n  projectId: 'grape-spaceship-123'\n});\n\nvar document = search.index('records').document('stephen');\nvar field = document.addField('alias');","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var search = gcloud.search({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var document = search.index(&#39;records&#39;).document(&#39;stephen&#39;);<br />var field = document.addField(&#39;alias&#39;);</p>"}],"description":{"full":"<p>Create a Field object to easily format a Cloud Search index&#39;s field.</p>","summary":"<p>Create a Field object to easily format a Cloud Search index&#39;s field.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":42,"code":"function Field() {\n  this.values = [];\n}","ctx":{"type":"constructor","name":"Field","string":"Field()"}},{"tags":[{"type":"param","string":"{string} atom - String value.\n","name":"atom","description":"<ul>\n<li>String value. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"field.addAtomValue('ryanseys');","html":"<p>field.addAtomValue(&#39;ryanseys&#39;);</p>"}],"description":{"full":"<p>An atom value is a string value that is treated as a single token. A query<br />will not match if it includes only a substring rather than the full field<br />value.</p>","summary":"<p>An atom value is a string value that is treated as a single token. A query<br />will not match if it includes only a substring rather than the full field<br />value.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":46,"codeStart":56,"code":"Field.prototype.addAtomValue = function(atom) {\n  this.addTextValue(atom, { format: 'ATOM' });\n};","ctx":{"type":"method","constructor":"Field","cons":"Field","name":"addAtomValue","string":"Field.prototype.addAtomValue()"}},{"tags":[{"type":"param","string":"{string|object} geo - Coordinate value as a string or object. String\n    format: `'40.6894, -74.0447'`.","name":"geo","description":"<ul>\n<li>Coordinate value as a string or object. String     format: <code>&#39;40.6894, -74.0447&#39;</code>.</li>\n</ul>\n","types":["string","object"],"typesDescription":"<code>string</code>|<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} geo.latitude - Latitudinal value.","name":"geo.latitude","description":"<ul>\n<li>Latitudinal value.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} geo.longitude - Longitudinal value.\n","name":"geo.longitude","description":"<ul>\n<li>Longitudinal value. </li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var coordinates = '40.6894, -74.0447';\nfield.addGeoValue(coordinates);\n\n//-\n// Use an object.\n//-\nvar coordinates = {\n  latitude: 40.6894,\n  longitude: -74.0447\n};\n\nfield.addGeoValue(coordinates);","html":"<p>var coordinates = &#39;40.6894, -74.0447&#39;;<br />field.addGeoValue(coordinates);</p><p>//-<br />// Use an object.<br />//-<br />var coordinates = {<br />  latitude: 40.6894,<br />  longitude: -74.0447<br />};</p><p>field.addGeoValue(coordinates);</p>"}],"description":{"full":"<p>A geo value is a point on earth with latitude and longitude coordinates.</p>","summary":"<p>A geo value is a point on earth with latitude and longitude coordinates.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":60,"codeStart":82,"code":"Field.prototype.addGeoValue = function(geo) {\n  if (is.object(geo)) {\n    geo = format('{latitude}, {longitude}', geo);\n  }\n\n  this.values.push({\n    geoValue: geo\n  });\n};","ctx":{"type":"method","constructor":"Field","cons":"Field","name":"addGeoValue","string":"Field.prototype.addGeoValue()"}},{"tags":[{"type":"param","string":"{string} html - HTML value.\n","name":"html","description":"<ul>\n<li>HTML value. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var html = '<html><head><title>hello, world</title></head></html>';\nfield.addHtmlValue(html);","html":"<p>var html = &#39;<html><head><title>hello, world</title></head></html>&#39;;<br />field.addHtmlValue(html);</p>"}],"description":{"full":"<p>An HTML value is an HTML-formatted string. Text out of markup tags are<br />tokenized and markup tags are considered metadata.</p>","summary":"<p>An HTML value is an HTML-formatted string. Text out of markup tags are<br />tokenized and markup tags are considered metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":92,"codeStart":102,"code":"Field.prototype.addHtmlValue = function(html) {\n  this.addTextValue(html, { format: 'HTML' });\n};","ctx":{"type":"method","constructor":"Field","cons":"Field","name":"addHtmlValue","string":"Field.prototype.addHtmlValue()"}},{"tags":[{"type":"throws","string":"{error} If a number is not provided.\n","types":["error"],"description":"<p>If a number is not provided. </p>"},{"type":"param","string":"{number} number - Number value.\n","name":"number","description":"<ul>\n<li>Number value. </li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"field.addNumberValue(8);","html":"<p>field.addNumberValue(8);</p>"}],"description":{"full":"<p>A number value is a double precision floating point value.</p>","summary":"<p>A number value is a double precision floating point value.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":106,"codeStart":116,"code":"Field.prototype.addNumberValue = function(number) {\n  if (!is.number(number)) {\n    throw new Error('number must be a number.');\n  }\n\n  this.values.push({\n    numberValue: number\n  });\n};","ctx":{"type":"method","constructor":"Field","cons":"Field","name":"addNumberValue","string":"Field.prototype.addNumberValue()"}},{"tags":[{"type":"param","string":"{string} text - Text value.","name":"text","description":"<ul>\n<li>Text value.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.format - One of `ATOM`, `HTML`, or `TEXT`. (Default:\n    `TEXT`).\n","name":"options.format","description":"<ul>\n<li>One of <code>ATOM</code>, <code>HTML</code>, or <code>TEXT</code>. (Default:     <code>TEXT</code>).</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"field.addTextValue('Hello!');","html":"<p>field.addTextValue(&#39;Hello!&#39;);</p>"}],"description":{"full":"<p>A text value is a string that is tokenized as plain text.</p>","summary":"<p>A text value is a string that is tokenized as plain text.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":126,"codeStart":137,"code":"Field.prototype.addTextValue = function(text, options) {\n  options = options || {};\n  var format = options.format || 'TEXT';\n\n  this.values.push({\n    stringValue: text.toLowerCase(),\n    stringFormat: format.toUpperCase()\n  });\n};","ctx":{"type":"method","constructor":"Field","cons":"Field","name":"addTextValue","string":"Field.prototype.addTextValue()"}},{"tags":[{"type":"param","string":"{string|date} timestamp - Timestamp value.\n","name":"timestamp","description":"<ul>\n<li>Timestamp value. </li>\n</ul>\n","types":["string","date"],"typesDescription":"<code>string</code>|<code>date</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var timestamp = '2014-08-18T21:19:55.000Z';\nfield.addTimestampValue(timestamp);\n\n//-\n// Use a Date object.\n//-\nvar now = Date.now();\nfield.addTimestampValue(now);","html":"<p>var timestamp = &#39;2014-08-18T21:19:55.000Z&#39;;<br />field.addTimestampValue(timestamp);</p><p>//-<br />// Use a Date object.<br />//-<br />var now = Date.now();<br />field.addTimestampValue(now);</p>"}],"description":{"full":"<p>A timestamp value is a date-time value with millisecond precision.</p>","summary":"<p>A timestamp value is a date-time value with millisecond precision.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":147,"codeStart":162,"code":"Field.prototype.addTimestampValue = function(timestamp) {\n  if (timestamp instanceof Date) {\n    timestamp = timestamp.toJSON();\n  }\n\n  this.values.push({\n    timestampValue: timestamp\n  });\n};\n\nmodule.exports = Field;","ctx":{"type":"method","constructor":"Field","cons":"Field","name":"addTimestampValue","string":"Field.prototype.addTimestampValue()"}}],"search":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"search","html":"<p>search</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:search/index}","types":["module:search/index"],"typesDescription":"module:<a href=\"module%3Asearch%2Findex.html\">search/index</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:search/index}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":31,"code":"var Index = require('./index-class.js');","ctx":{"type":"declaration","name":"Index","value":"require('./index-class.js')","string":"Index"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":33,"codeStart":37,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":39,"codeStart":43,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{array} Required scopes for the Search API.","html":"<p>{array} Required scopes for the Search API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":45,"codeStart":49,"code":"var SCOPES = [\n  'https://www.googleapis.com/auth/cloud-platform',\n  'https://www.googleapis.com/auth/cloudsearch',\n  'https://www.googleapis.com/auth/userinfo.email'\n];","ctx":{"type":"declaration","name":"SCOPES","value":"[","string":"SCOPES"}},{"tags":[{"type":"const","string":"{string} Base URL for the Search API.","html":"<p>{string} Base URL for the Search API.</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":55,"codeStart":59,"code":"var SEARCH_BASE_URL = 'https://cloudsearch.googleapis.com/v1/';","ctx":{"type":"declaration","name":"SEARCH_BASE_URL","value":"'https://cloudsearch.googleapis.com/v1/'","string":"SEARCH_BASE_URL"}},{"tags":[{"type":"alias","string":"module:search","html":"<p>module:search</p>"},{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar search = gcloud.search();","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var search = gcloud.search();</p>"}],"description":{"full":"<p>Create a Search object to Interact with the Cloud Search API. Using this<br />object, you can access your indexes with {module:search/index} and documents<br />with {module:search/document}.</p><p>Follow along with the examples to see how to do everything from creating<br />documents to searching indexes.</p>","summary":"<p>Create a Search object to Interact with the Cloud Search API. Using this<br />object, you can access your indexes with {module:search/index} and documents<br />with {module:search/document}.</p>","body":"<p>Follow along with the examples to see how to do everything from creating<br />documents to searching indexes.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":61,"codeStart":82,"code":"function Search(options) {\n  if (!(this instanceof Search)) {\n    return new Search(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory({\n    credentials: options.credentials,\n    email: options.email,\n    keyFile: options.keyFilename,\n    scopes: SCOPES\n  });\n\n  this.projectId_ = options.projectId;\n}","ctx":{"type":"constructor","name":"Search","string":"Search()"}},{"tags":[{"type":"resource","string":"[Indexes: list API Documentation]{@link https://cloud.google.com/search/reference/rest/v1/projects/indexes/list} ","html":"<p>[Indexes: list API Documentation]{@link <a href=\"https://cloud.google.com/search/reference/rest/v1/projects/indexes/list}\">https://cloud.google.com/search/reference/rest/v1/projects/indexes/list}</a> </p>"},{"type":"param","string":"{object=} query - Query object.","name":"query","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageSize - The maximum number of indexes to return per\n    page. If not specified, 100 indexes are returned per page.","name":"query.pageSize","description":"<ul>\n<li>The maximum number of indexes to return per     page. If not specified, 100 indexes are returned per page.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"query.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.prefix - The prefix of the index name. It is used to\n    list all indexes with names that have this prefix.","name":"query.prefix","description":"<ul>\n<li>The prefix of the index name. It is used to     list all indexes with names that have this prefix.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.view - See [this table](https://goo.gl/sY6Lpt) for a\n    list of accepted values and what each will do.","name":"query.view","description":"<ul>\n<li>See <a href=\"https://goo.gl/sY6Lpt\">this table</a> for a     list of accepted values and what each will do.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:search/index[]} callback.indexes - A list of Indexes.","name":"callback.indexes","description":"<ul>\n<li>A list of Indexes.</li>\n</ul>\n","types":["Array.<module:search/index>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Asearch%2Findex.html\">search/index</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"search.getIndexes(function(err, indexes) {\n  // indexes is an array of Index objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction onApiResponse(err, indexes, nextQuery, apiResponse) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // indexes is an array of Index objects.\n\n  if (nextQuery) {\n    search.getIndexes(nextQuery, onApiResponse);\n  }\n}\n\nsearch.getIndexes({\n  autoPaginate: false\n}, onApiResponse);\n\n//-\n// Get the indexes as a readable object stream.\n//-\nsearch.getIndexes()\n  .on('error', console.error)\n  .on('data', function(index) {\n    // index is an Index object.\n  })\n  .on('end', function() {\n    // All indexes retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nsearch.getIndexes()\n  .on('data', function(index) {\n    this.end();\n  });","html":"<p>search.getIndexes(function(err, indexes) {<br />  // indexes is an array of Index objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function onApiResponse(err, indexes, nextQuery, apiResponse) {<br />  if (err) {<br />    console.error(err);<br />    return;<br />  }</p><p>  // indexes is an array of Index objects.</p><p>  if (nextQuery) {<br />    search.getIndexes(nextQuery, onApiResponse);<br />  }<br />}</p><p>search.getIndexes({<br />  autoPaginate: false<br />}, onApiResponse);</p><p>//-<br />// Get the indexes as a readable object stream.<br />//-<br />search.getIndexes()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(index) {<br />    // index is an Index object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All indexes retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />search.getIndexes()<br />  .on(&#39;data&#39;, function(index) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get {module:search/index} objects for all of the indexes in your project.</p>","summary":"<p>Get {module:search/index} objects for all of the indexes in your project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":103,"codeStart":173,"code":"Search.prototype.getIndexes = function(query, callback) {\n  var self = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  query = extend({}, query);\n\n  if (query.prefix) {\n    query.indexNamePrefix = query.prefix;\n    delete query.prefix;\n  }\n\n  this.makeReq_('GET', '/indexes', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var indexes = (resp.indexes || []).map(function(indexObject) {\n      var index = self.index(indexObject.indexId);\n\n      if (is.object(resp.indexedField)) {\n        index.fields = resp.indexedField;\n      }\n\n      return index;\n    });\n\n    callback(null, indexes, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Search","cons":"Search","name":"getIndexes","string":"Search.prototype.getIndexes()"}},{"tags":[{"type":"param","string":"{string} id - Name of the index.","name":"id","description":"<ul>\n<li>Name of the index.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:search/index}","types":["module:search/index"],"typesDescription":"module:<a href=\"module%3Asearch%2Findex.html\">search/index</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:search/index}</p>"}],"description":{"full":"<p>Get a reference to a Google Cloud Search index.</p>","summary":"<p>Get a reference to a Google Cloud Search index.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":216,"codeStart":222,"code":"Search.prototype.index = function(id) {\n  return new Index(this, id);\n};","ctx":{"type":"method","constructor":"Search","cons":"Search","name":"index","string":"Search.prototype.index()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":226,"codeStart":238,"code":"Search.prototype.makeReq_ = function(method, path, query, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: query,\n    uri: format('{base}projects/{projectId}{path}', {\n      base: SEARCH_BASE_URL,\n      projectId: this.projectId_,\n      path: path\n    })\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"Search","cons":"Search","name":"makeReq_","string":"Search.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>{module:search#getIndexes} can be used with either a callback or as a<br />readable object stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>{module:search#getIndexes} can be used with either a callback or as a<br />readable object stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":256,"codeStart":261,"code":"streamRouter.extend(Search, 'getIndexes');\n\nmodule.exports = Search;","ctx":false}],"storage/acl":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"storage/acl","html":"<p>storage/acl</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar is = require('is');\nvar nodeutil = require('util');","ctx":false},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:storage/acl","html":"<p>module:storage/acl</p>"}],"description":{"full":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p><p>An ACL consists of one or more entries, where each entry grants permissions<br />to an entity. Permissions define the actions that can be performed against an<br />object or bucket (for example, <code>READ</code> or <code>WRITE</code>); the entity defines who the<br />permission applies to (for example, a specific user or group of users).</p><p>Where an <code>entity</code> value is accepted, we follow the format the Cloud Storage<br />API expects.</p><p>Refer to<br /><a href=\"https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls\">https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls</a><br />for the most up-to-date values.</p><ul>\n<li><code>user-userId</code></li>\n<li><code>user-email</code></li>\n<li><code>group-groupId</code></li>\n<li><code>group-email</code></li>\n<li><code>domain-domain</code></li>\n<li><code>project-team-projectId</code></li>\n<li><code>allUsers</code></li>\n<li><code>allAuthenticatedUsers</code></li>\n</ul>\n<p>Examples:</p><ul>\n<li>The user &quot;liz@example.com&quot; would be <code>user-liz@example.com</code>.</li>\n<li>The group &quot;example@googlegroups.com&quot; would be<br /><code>group-example@googlegroups.com</code>.</li>\n<li>To refer to all members of the Google Apps for Business domain<br />&quot;example.com&quot;, the entity would be <code>domain-example.com</code>.</li>\n</ul>\n<p>For more detailed information, see<br /><a href=\"http://goo.gl/6qBBPO\">About Access Control Lists</a>.</p>","summary":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p>","body":"<p>An ACL consists of one or more entries, where each entry grants permissions<br />to an entity. Permissions define the actions that can be performed against an<br />object or bucket (for example, <code>READ</code> or <code>WRITE</code>); the entity defines who the<br />permission applies to (for example, a specific user or group of users).</p><p>Where an <code>entity</code> value is accepted, we follow the format the Cloud Storage<br />API expects.</p><p>Refer to<br /><a href=\"https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls\">https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls</a><br />for the most up-to-date values.</p><ul>\n<li><code>user-userId</code></li>\n<li><code>user-email</code></li>\n<li><code>group-groupId</code></li>\n<li><code>group-email</code></li>\n<li><code>domain-domain</code></li>\n<li><code>project-team-projectId</code></li>\n<li><code>allUsers</code></li>\n<li><code>allAuthenticatedUsers</code></li>\n</ul>\n<p>Examples:</p><ul>\n<li>The user &quot;liz@example.com&quot; would be <code>user-liz@example.com</code>.</li>\n<li>The group &quot;example@googlegroups.com&quot; would be<br /><code>group-example@googlegroups.com</code>.</li>\n<li>To refer to all members of the Google Apps for Business domain<br />&quot;example.com&quot;, the entity would be <code>domain-example.com</code>.</li>\n</ul>\n<p>For more detailed information, see<br /><a href=\"http://goo.gl/6qBBPO\">About Access Control Lists</a>.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":66,"code":"function Acl(options) {\n  AclRoleAccessorMethods.call(this);\n\n  this.makeReq = options.makeReq;\n  this.pathPrefix = options.pathPrefix;\n}","ctx":{"type":"constructor","name":"Acl","string":"Acl()"}},{"tags":[{"type":"alias","string":"acl.owners ","html":"<p>acl.owners </p>"},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"var gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123'\n});\n\n//-\n// Add a user as an owner of a file.\n//-\nvar myBucket = gcs.bucket('my-bucket');\nvar myFile = myBucket.file('my-file');\nmyFile.acl.owners.addUser('email@example.com', function(err, aclObject) {});\n\n//-\n// For reference, the above command is the same as running the following.\n//-\nmyFile.acl.add({\n  entity: 'user-email@example.com',\n  role: gcs.acl.OWNER_ROLE\n}, function(err, aclObject) {});","html":"<p>var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>//-<br />// Add a user as an owner of a file.<br />//-<br />var myBucket = gcs.bucket(&#39;my-bucket&#39;);<br />var myFile = myBucket.file(&#39;my-file&#39;);<br />myFile.acl.owners.addUser(&#39;email@example.com&#39;, function(err, aclObject) {});</p><p>//-<br />// For reference, the above command is the same as running the following.<br />//-<br />myFile.acl.add({<br />  entity: &#39;user-email@example.com&#39;,<br />  role: gcs.acl.OWNER_ROLE<br />}, function(err, aclObject) {});</p>"}],"description":{"full":"<p>An object of convenience methods to add or delete owner ACL permissions for a<br />given entity.</p><p>The supported methods include:</p><ul>\n<li><code>myFile.acl.owners.addAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.owners.deleteAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.owners.addAllUsers</code></li>\n<li><code>myFile.acl.owners.deleteAllUsers</code></li>\n<li><code>myFile.acl.owners.addDomain</code></li>\n<li><code>myFile.acl.owners.deleteDomain</code></li>\n<li><code>myFile.acl.owners.addGroup</code></li>\n<li><code>myFile.acl.owners.deleteGroup</code></li>\n<li><code>myFile.acl.owners.addProject</code></li>\n<li><code>myFile.acl.owners.deleteProject</code></li>\n<li><code>myFile.acl.owners.addUser</code></li>\n<li><code>myFile.acl.owners.deleteUser</code></li>\n</ul>\n","summary":"<p>An object of convenience methods to add or delete owner ACL permissions for a<br />given entity.</p>","body":"<p>The supported methods include:</p><ul>\n<li><code>myFile.acl.owners.addAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.owners.deleteAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.owners.addAllUsers</code></li>\n<li><code>myFile.acl.owners.deleteAllUsers</code></li>\n<li><code>myFile.acl.owners.addDomain</code></li>\n<li><code>myFile.acl.owners.deleteDomain</code></li>\n<li><code>myFile.acl.owners.addGroup</code></li>\n<li><code>myFile.acl.owners.deleteGroup</code></li>\n<li><code>myFile.acl.owners.addProject</code></li>\n<li><code>myFile.acl.owners.deleteProject</code></li>\n<li><code>myFile.acl.owners.addUser</code></li>\n<li><code>myFile.acl.owners.deleteUser</code></li>\n</ul>\n"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":73,"codeStart":116,"code":"Acl.prototype.owners = {};","ctx":{"type":"property","constructor":"Acl","cons":"Acl","name":"owners","value":"{}","string":"Acl.prototype.owners"}},{"tags":[{"type":"alias","string":"acl.readers ","html":"<p>acl.readers </p>"},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"//-\n// Add a user as a reader of a file.\n//-\nmyFile.acl.readers.addUser('email@example.com', function(err, aclObject) {});\n\n//-\n// For reference, the above command is the same as running the following.\n//-\nmyFile.acl.add({\n  entity: 'user-email@example.com',\n  role: gcs.acl.READER_ROLE\n}, function(err, aclObject) {});","html":"<p>//-<br />// Add a user as a reader of a file.<br />//-<br />myFile.acl.readers.addUser(&#39;email@example.com&#39;, function(err, aclObject) {});</p><p>//-<br />// For reference, the above command is the same as running the following.<br />//-<br />myFile.acl.add({<br />  entity: &#39;user-email@example.com&#39;,<br />  role: gcs.acl.READER_ROLE<br />}, function(err, aclObject) {});</p>"}],"description":{"full":"<p>An object of convenience methods to add or delete reader ACL permissions for<br />a given entity.</p><p>The supported methods include:</p><ul>\n<li><code>myFile.acl.readers.addAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.readers.deleteAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.readers.addAllUsers</code></li>\n<li><code>myFile.acl.readers.deleteAllUsers</code></li>\n<li><code>myFile.acl.readers.addDomain</code></li>\n<li><code>myFile.acl.readers.deleteDomain</code></li>\n<li><code>myFile.acl.readers.addGroup</code></li>\n<li><code>myFile.acl.readers.deleteGroup</code></li>\n<li><code>myFile.acl.readers.addProject</code></li>\n<li><code>myFile.acl.readers.deleteProject</code></li>\n<li><code>myFile.acl.readers.addUser</code></li>\n<li><code>myFile.acl.readers.deleteUser</code></li>\n</ul>\n","summary":"<p>An object of convenience methods to add or delete reader ACL permissions for<br />a given entity.</p>","body":"<p>The supported methods include:</p><ul>\n<li><code>myFile.acl.readers.addAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.readers.deleteAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.readers.addAllUsers</code></li>\n<li><code>myFile.acl.readers.deleteAllUsers</code></li>\n<li><code>myFile.acl.readers.addDomain</code></li>\n<li><code>myFile.acl.readers.deleteDomain</code></li>\n<li><code>myFile.acl.readers.addGroup</code></li>\n<li><code>myFile.acl.readers.deleteGroup</code></li>\n<li><code>myFile.acl.readers.addProject</code></li>\n<li><code>myFile.acl.readers.deleteProject</code></li>\n<li><code>myFile.acl.readers.addUser</code></li>\n<li><code>myFile.acl.readers.deleteUser</code></li>\n</ul>\n"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":118,"codeStart":155,"code":"Acl.prototype.readers = {};","ctx":{"type":"property","constructor":"Acl","cons":"Acl","name":"readers","value":"{}","string":"Acl.prototype.readers"}},{"tags":[{"type":"alias","string":"acl.writers ","html":"<p>acl.writers </p>"},{"type":"return","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{object}</p>"},{"type":"example","string":"//-\n// Add a user as a writer of a file.\n//-\nmyFile.acl.writers.addUser('email@example.com', function(err, aclObject) {});\n\n//-\n// For reference, the above command is the same as running the following.\n//-\nmyFile.acl.add({\n  entity: 'user-email@example.com',\n  role: gcs.acl.WRITER_ROLE\n}, function(err, aclObject) {});","html":"<p>//-<br />// Add a user as a writer of a file.<br />//-<br />myFile.acl.writers.addUser(&#39;email@example.com&#39;, function(err, aclObject) {});</p><p>//-<br />// For reference, the above command is the same as running the following.<br />//-<br />myFile.acl.add({<br />  entity: &#39;user-email@example.com&#39;,<br />  role: gcs.acl.WRITER_ROLE<br />}, function(err, aclObject) {});</p>"}],"description":{"full":"<p>An object of convenience methods to add or delete writer ACL permissions for<br />a given entity.</p><p>The supported methods include:</p><ul>\n<li><code>myFile.acl.writers.addAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.writers.deleteAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.writers.addAllUsers</code></li>\n<li><code>myFile.acl.writers.deleteAllUsers</code></li>\n<li><code>myFile.acl.writers.addDomain</code></li>\n<li><code>myFile.acl.writers.deleteDomain</code></li>\n<li><code>myFile.acl.writers.addGroup</code></li>\n<li><code>myFile.acl.writers.deleteGroup</code></li>\n<li><code>myFile.acl.writers.addProject</code></li>\n<li><code>myFile.acl.writers.deleteProject</code></li>\n<li><code>myFile.acl.writers.addUser</code></li>\n<li><code>myFile.acl.writers.deleteUser</code></li>\n</ul>\n","summary":"<p>An object of convenience methods to add or delete writer ACL permissions for<br />a given entity.</p>","body":"<p>The supported methods include:</p><ul>\n<li><code>myFile.acl.writers.addAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.writers.deleteAllAuthenticatedUsers</code></li>\n<li><code>myFile.acl.writers.addAllUsers</code></li>\n<li><code>myFile.acl.writers.deleteAllUsers</code></li>\n<li><code>myFile.acl.writers.addDomain</code></li>\n<li><code>myFile.acl.writers.deleteDomain</code></li>\n<li><code>myFile.acl.writers.addGroup</code></li>\n<li><code>myFile.acl.writers.deleteGroup</code></li>\n<li><code>myFile.acl.writers.addProject</code></li>\n<li><code>myFile.acl.writers.deleteProject</code></li>\n<li><code>myFile.acl.writers.addUser</code></li>\n<li><code>myFile.acl.writers.deleteUser</code></li>\n</ul>\n"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":157,"codeStart":194,"code":"Acl.prototype.writers = {};\n\nnodeutil.inherits(Acl, AclRoleAccessorMethods);","ctx":{"type":"property","constructor":"Acl","cons":"Acl","name":"writers","value":"{}","string":"Acl.prototype.writers"}},{"tags":[{"type":"resource","string":"[BucketAccessControls: insert API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/insert}","html":"<p>[BucketAccessControls: insert API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/insert}\">https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/insert}</a></p>"},{"type":"resource","string":"[ObjectAccessControls: insert API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert} ","html":"<p>[ObjectAccessControls: insert API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert}\">https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert}</a> </p>"},{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.entity - Whose permissions will be added.","name":"options.entity","description":"<ul>\n<li>Whose permissions will be added.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.role - Permissions allowed for the defined entity.\n    See {module:storage#acl}.","name":"options.role","description":"<ul>\n<li>Permissions allowed for the defined entity.     See {module:storage#acl}.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{int=} options.generation - **File Objects Only** Select a specific\n    revision of this file (as opposed to the latest version, the default).","name":"options.generation","description":"<ul>\n<li><strong>File Objects Only</strong> Select a specific     revision of this file (as opposed to the latest version, the default).</li>\n</ul>\n","types":["int"],"typesDescription":"<a href=\"int.html\">int</a>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.aclObject - The Acl Object.","name":"callback.aclObject","description":"<ul>\n<li>The Acl Object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"acl.add ","html":"<p>acl.add </p>"},{"type":"example","string":"myBucket.acl.add({\n  entity: 'user-useremail@example.com',\n  role: gcs.acl.OWNER_ROLE\n}, function(err, aclObject, apiResponse) {});\n\n//-\n// For file ACL operations, you can also specify a `generation` property.\n// Here is how you would grant ownership permissions to a user on a specific\n// revision of a file.\n//-\nmyFile.acl.add({\n  entity: 'user-useremail@example.com',\n  role: gcs.acl.OWNER_ROLE,\n  generation: 1\n}, function(err, aclObject, apiResponse) {});","html":"<p>myBucket.acl.add({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  role: gcs.acl.OWNER_ROLE<br />}, function(err, aclObject, apiResponse) {});</p><p>//-<br />// For file ACL operations, you can also specify a <code>generation</code> property.<br />// Here is how you would grant ownership permissions to a user on a specific<br />// revision of a file.<br />//-<br />myFile.acl.add({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  role: gcs.acl.OWNER_ROLE,<br />  generation: 1<br />}, function(err, aclObject, apiResponse) {});</p>"}],"description":{"full":"<p>Add access controls on a {module:storage/bucket} or {module:storage/file}.</p>","summary":"<p>Add access controls on a {module:storage/bucket} or {module:storage/file}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":198,"codeStart":234,"code":"Acl.prototype.add = function(options, callback) {\n  var that = this;\n\n  var body = {\n    entity: options.entity,\n    role: options.role.toUpperCase()\n  };\n\n  var query = null;\n\n  if (options.generation) {\n    query = {\n      generation: options.generation\n    };\n  }\n\n  this.makeReq_('POST', '', query, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, that.makeAclObject_(resp), resp);\n  });\n};","ctx":{"type":"method","constructor":"Acl","cons":"Acl","name":"add","string":"Acl.prototype.add()"}},{"tags":[{"type":"resource","string":"[BucketAccessControls: delete API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/delete}","html":"<p>[BucketAccessControls: delete API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/delete}\">https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/delete}</a></p>"},{"type":"resource","string":"[ObjectAccessControls: delete API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/delete} ","html":"<p>[ObjectAccessControls: delete API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/delete}\">https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/delete}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.entity - Whose permissions will be revoked.","name":"options.entity","description":"<ul>\n<li>Whose permissions will be revoked.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{int=} options.generation - **File Objects Only** Select a specific\n    revision of this file (as opposed to the latest version, the default).","name":"options.generation","description":"<ul>\n<li><strong>File Objects Only</strong> Select a specific     revision of this file (as opposed to the latest version, the default).</li>\n</ul>\n","types":["int"],"typesDescription":"<a href=\"int.html\">int</a>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"acl.delete ","html":"<p>acl.delete </p>"},{"type":"example","string":"myBucket.acl.delete({\n  entity: 'user-useremail@example.com'\n}, function(err, apiResponse) {});\n\n//-\n// For file ACL operations, you can also specify a `generation` property.\n//-\nmyFile.acl.delete({\n  entity: 'user-useremail@example.com',\n  generation: 1\n}, function(err, apiResponse) {});","html":"<p>myBucket.acl.delete({<br />  entity: &#39;user-useremail@example.com&#39;<br />}, function(err, apiResponse) {});</p><p>//-<br />// For file ACL operations, you can also specify a <code>generation</code> property.<br />//-<br />myFile.acl.delete({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  generation: 1<br />}, function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete access controls on a {module:storage/bucket} or {module:storage/file}.</p>","summary":"<p>Delete access controls on a {module:storage/bucket} or {module:storage/file}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":260,"codeStart":289,"code":"Acl.prototype.delete = function(options, callback) {\n  var path = '/' + encodeURIComponent(options.entity);\n  var query = null;\n\n  if (options.generation) {\n    query = {\n      generation: options.generation\n    };\n  }\n\n  this.makeReq_('DELETE', path, query, null, callback);\n};","ctx":{"type":"method","constructor":"Acl","cons":"Acl","name":"delete","string":"Acl.prototype.delete()"}},{"tags":[{"type":"resource","string":"[BucketAccessControls: get API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/get}","html":"<p>[BucketAccessControls: get API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/get}\">https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/get}</a></p>"},{"type":"resource","string":"[ObjectAccessControls: get API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/get} ","html":"<p>[ObjectAccessControls: get API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/get}\">https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/get}</a> </p>"},{"type":"param","string":"{object|function} options - Configuration object. If you want to\n    receive a list of all access controls, pass the callback function as the\n    only argument.","name":"options","description":"<ul>\n<li>Configuration object. If you want to     receive a list of all access controls, pass the callback function as the<br />  only argument.</li>\n</ul>\n","types":["object","function"],"typesDescription":"<code>object</code>|<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.entity - Whose permissions will be fetched.","name":"options.entity","description":"<ul>\n<li>Whose permissions will be fetched.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{int=} options.generation - **File Objects Only** Select a specific\n    revision of this file (as opposed to the latest version, the default).","name":"options.generation","description":"<ul>\n<li><strong>File Objects Only</strong> Select a specific     revision of this file (as opposed to the latest version, the default).</li>\n</ul>\n","types":["int"],"typesDescription":"<a href=\"int.html\">int</a>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} callback.aclObject - Single or Array of Acl Objects.","name":"callback.aclObject","description":"<ul>\n<li>Single or Array of Acl Objects.</li>\n</ul>\n","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"acl.get ","html":"<p>acl.get </p>"},{"type":"example","string":"myBucket.acl.get({\n  entity: 'user-useremail@example.com'\n}, function(err, aclObject, apiResponse) {});\n\n//-\n// Get all access controls.\n//-\nmyBucket.acl.get(function(err, aclObjects, apiResponse) {\n  // aclObjects = [\n  //   {\n  //     entity: 'user-useremail@example.com',\n  //     role: 'owner'\n  //   }\n  // ]\n});\n\n//-\n// For file ACL operations, you can also specify a `generation` property.\n//-\nmyFile.acl.get({\n  entity: 'user-useremail@example.com',\n  generation: 1\n}, function(err, aclObject, apiResponse) {});","html":"<p>myBucket.acl.get({<br />  entity: &#39;user-useremail@example.com&#39;<br />}, function(err, aclObject, apiResponse) {});</p><p>//-<br />// Get all access controls.<br />//-<br />myBucket.acl.get(function(err, aclObjects, apiResponse) {<br />  // aclObjects = [<br />  //   {<br />  //     entity: &#39;user-useremail@example.com&#39;,<br />  //     role: &#39;owner&#39;<br />  //   }<br />  // ]<br />});</p><p>//-<br />// For file ACL operations, you can also specify a <code>generation</code> property.<br />//-<br />myFile.acl.get({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  generation: 1<br />}, function(err, aclObject, apiResponse) {});</p>"}],"description":{"full":"<p>Get access controls on a {module:storage/bucket} or {module:storage/file}. If<br />an entity is omitted, you will receive an array of all applicable access<br />controls.</p>","summary":"<p>Get access controls on a {module:storage/bucket} or {module:storage/file}. If<br />an entity is omitted, you will receive an array of all applicable access<br />controls.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":302,"codeStart":348,"code":"Acl.prototype.get = function(options, callback) {\n  var that = this;\n  var path = '';\n  var query = null;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = null;\n  } else {\n    path = '/' + encodeURIComponent(options.entity);\n\n    if (options.generation) {\n      query = {\n        generation: options.generation\n      };\n    }\n  }\n\n  this.makeReq_('GET', path, query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var results = resp;\n\n    if (resp.items) {\n      results = (resp.items || []).map(that.makeAclObject_);\n    } else {\n      results = that.makeAclObject_(results);\n    }\n\n    callback(null, results, resp);\n  });\n};","ctx":{"type":"method","constructor":"Acl","cons":"Acl","name":"get","string":"Acl.prototype.get()"}},{"tags":[{"type":"resource","string":"[BucketAccessControls: update API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/update}","html":"<p>[BucketAccessControls: update API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/update}\">https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/update}</a></p>"},{"type":"resource","string":"[ObjectAccessControls: update API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/update} ","html":"<p>[ObjectAccessControls: update API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/update}\">https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/update}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.entity - Whose permissions will be updated.","name":"options.entity","description":"<ul>\n<li>Whose permissions will be updated.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.role - Permissions allowed for the defined entity.\n    See {module:storage#acl}.","name":"options.role","description":"<ul>\n<li>Permissions allowed for the defined entity.     See {module:storage#acl}.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{int=} options.generation - **File Objects Only** Select a specific\n    revision of this file (as opposed to the latest version, the default).","name":"options.generation","description":"<ul>\n<li><strong>File Objects Only</strong> Select a specific     revision of this file (as opposed to the latest version, the default).</li>\n</ul>\n","types":["int"],"typesDescription":"<a href=\"int.html\">int</a>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.aclObject - The updated Acl Object.","name":"callback.aclObject","description":"<ul>\n<li>The updated Acl Object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"alias","string":"acl.update ","html":"<p>acl.update </p>"},{"type":"example","string":"var gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123'\n});\n\nmyBucket.acl.update({\n  entity: 'user-useremail@example.com',\n  role: gcs.acl.WRITER_ROLE\n}, function(err, aclObject, apiResponse) {});\n\n//-\n// For file ACL operations, you can also specify a `generation` property.\n//-\nmyFile.acl.update({\n  entity: 'user-useremail@example.com',\n  role: gcs.acl.WRITER_ROLE,\n  generation: 1\n}, function(err, aclObject, apiResponse) {});","html":"<p>var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>myBucket.acl.update({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  role: gcs.acl.WRITER_ROLE<br />}, function(err, aclObject, apiResponse) {});</p><p>//-<br />// For file ACL operations, you can also specify a <code>generation</code> property.<br />//-<br />myFile.acl.update({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  role: gcs.acl.WRITER_ROLE,<br />  generation: 1<br />}, function(err, aclObject, apiResponse) {});</p>"}],"description":{"full":"<p>Update access controls on a {module:storage/bucket} or {module:storage/file}.</p>","summary":"<p>Update access controls on a {module:storage/bucket} or {module:storage/file}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":384,"codeStart":422,"code":"Acl.prototype.update = function(options, callback) {\n  var that = this;\n  var path = '/' + encodeURIComponent(options.entity);\n  var query = null;\n\n  if (options.generation) {\n    query = {\n      generation: options.generation\n    };\n  }\n\n  var body = {\n    role: options.role.toUpperCase()\n  };\n\n  this.makeReq_('PUT', path, query, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, that.makeAclObject_(resp), resp);\n  });\n};","ctx":{"type":"method","constructor":"Acl","cons":"Acl","name":"update","string":"Acl.prototype.update()"}},{"tags":[{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Transform API responses to a consistent object format.</p>","summary":"<p>Transform API responses to a consistent object format.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":447,"codeStart":452,"code":"Acl.prototype.makeAclObject_ = function(accessControlObject) {\n  var obj = {\n    entity: accessControlObject.entity,\n    role: accessControlObject.role\n  };\n\n  if (accessControlObject.projectTeam) {\n    obj.projectTeam = accessControlObject.projectTeam;\n  }\n\n  return obj;\n};","ctx":{"type":"method","constructor":"Acl","cons":"Acl","name":"makeAclObject_","string":"Acl.prototype.makeAclObject_()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Patch requests up to the bucket&#39;s request object.</p>","summary":"<p>Patch requests up to the bucket&#39;s request object.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":465,"codeStart":476,"code":"Acl.prototype.makeReq_ = function(method, path, query, body, callback) {\n  this.makeReq(method, this.pathPrefix + path, query, body, callback);\n};\n\nmodule.exports = Acl;","ctx":{"type":"method","constructor":"Acl","cons":"Acl","name":"makeReq_","string":"Acl.prototype.makeReq_()"}},{"tags":[{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Attach functionality to a {module:storage/acl} instance. This will add an<br />object for each role group (owners, readers, and writers), with each object<br />containing methods to add or delete a type of entity.</p><p>As an example, here are a few methods that are created.</p><p>  myBucket.acl.readers.deleteGroup(&#39;groupId&#39;, function(err) {});</p><p>  myBucket.acl.owners.addUser(&#39;email@example.com&#39;, function(err, acl) {});</p><p>  myBucket.acl.writers.addDomain(&#39;example.com&#39;, function(err, acl) {});</p>","summary":"<p>Attach functionality to a {module:storage/acl} instance. This will add an<br />object for each role group (owners, readers, and writers), with each object<br />containing methods to add or delete a type of entity.</p>","body":"<p>As an example, here are a few methods that are created.</p><p>  myBucket.acl.readers.deleteGroup(&#39;groupId&#39;, function(err) {});</p><p>  myBucket.acl.owners.addUser(&#39;email@example.com&#39;, function(err, acl) {});</p><p>  myBucket.acl.writers.addDomain(&#39;example.com&#39;, function(err, acl) {});</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":482,"codeStart":497,"code":"function AclRoleAccessorMethods() {\n  AclRoleAccessorMethods.roles.forEach(this._assignAccessMethods.bind(this));\n}\n\nAclRoleAccessorMethods.accessMethods = [\n  'add',\n  'delete'\n];\n\nAclRoleAccessorMethods.entities = [\n  // Special entity groups that do not require further specification.\n  'allAuthenticatedUsers',\n  'allUsers',\n\n  // Entity groups that require specification, e.g. `user-email@example.com`.\n  'domain-',\n  'group-',\n  'project-',\n  'user-'\n];\n\nAclRoleAccessorMethods.roles = [\n  'OWNER',\n  'READER',\n  'WRITER'\n];\n\nAclRoleAccessorMethods.prototype._assignAccessMethods = function(role) {\n  var that = this;\n\n  var accessMethods = AclRoleAccessorMethods.accessMethods;\n  var entities = AclRoleAccessorMethods.entities;\n  var roleGroup = role.toLowerCase() + 's';\n\n  this[roleGroup] = entities.reduce(function(acc, entity) {\n    var isPrefix = entity.charAt(entity.length - 1) === '-';\n\n    accessMethods.forEach(function(accessMethod) {\n      var method = accessMethod + entity[0].toUpperCase() + entity.substr(1);\n\n      if (isPrefix) {\n        method = method.replace('-', '');\n      }\n\n      // Wrap the parent accessor method (e.g. `add` or `delete`) to avoid the\n      // more complex API of specifying an `entity` and `role`.\n      acc[method] = function(entityId, callback) {\n        var apiEntity;\n\n        if (isPrefix) {\n          apiEntity = entity + entityId;\n        } else {\n          // If the entity is not a prefix, it is a special entity group that\n          // does not require further details. The accessor methods only accept\n          // a callback.\n          apiEntity = entity;\n          callback = entityId;\n        }\n\n        that[accessMethod]({\n          entity: apiEntity,\n          role: role\n        }, callback);\n      };\n    });\n\n    return acc;\n  }, {});\n};\n\nmodule.exports.AclRoleAccessorMethods = AclRoleAccessorMethods;","ctx":{"type":"function","name":"AclRoleAccessorMethods","string":"AclRoleAccessorMethods()"}}],"storage/bucket":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"storage/bucket","html":"<p>storage/bucket</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar async = require('async');\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar fs = require('fs');\nvar is = require('is');\nvar mime = require('mime-types');\nvar path = require('path');","ctx":false},{"tags":[{"type":"type","string":"{module:storage/acl}","types":["module:storage/acl"],"typesDescription":"module:<a href=\"module%3Astorage%2Facl.html\">storage/acl</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:storage/acl}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":31,"codeStart":35,"code":"var Acl = require('./acl.js');","ctx":{"type":"declaration","name":"Acl","value":"require('./acl.js')","string":"Acl"}},{"tags":[{"type":"type","string":"{module:storage/file}","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:storage/file}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":37,"codeStart":41,"code":"var File = require('./file.js');","ctx":{"type":"declaration","name":"File","value":"require('./file.js')","string":"File"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":43,"codeStart":47,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":49,"codeStart":53,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{string}","html":"<p>{string}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":55,"codeStart":59,"code":"var STORAGE_BASE_URL = 'https://www.googleapis.com/storage/v1/b';","ctx":{"type":"declaration","name":"STORAGE_BASE_URL","value":"'https://www.googleapis.com/storage/v1/b'","string":"STORAGE_BASE_URL"}},{"tags":[{"type":"const","string":"{number}","html":"<p>{number}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>The size of a file (in bytes) must be greater than this number to<br />automatically trigger a resumable upload.</p>","summary":"<p>The size of a file (in bytes) must be greater than this number to<br />automatically trigger a resumable upload.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":61,"codeStart":68,"code":"var RESUMABLE_THRESHOLD = 5000000;","ctx":{"type":"declaration","name":"RESUMABLE_THRESHOLD","value":"5000000","string":"RESUMABLE_THRESHOLD"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:storage/bucket ","html":"<p>module:storage/bucket </p>"},{"type":"throws","string":"{Error} if a bucket name isn't provided.\n","types":["Error"],"description":"<p>if a bucket name isn&#39;t provided. </p>"},{"type":"param","string":"{object} options - Configuration options.","name":"options","description":"<ul>\n<li>Configuration options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.bucketName - Name of the bucket.","name":"options.bucketName","description":"<ul>\n<li>Name of the bucket.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.keyFilename - Full path to the JSON key downloaded\n    from the Google Developers Console. Alternatively, you may provide a\n    `credentials` object.","name":"options.keyFilename","description":"<ul>\n<li>Full path to the JSON key downloaded     from the Google Developers Console. Alternatively, you may provide a<br />  <code>credentials</code> object.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options.credentials - Credentials object, used in place of\n    a `keyFilename`.\n","name":"options.credentials","description":"<ul>\n<li>Credentials object, used in place of     a <code>keyFilename</code>.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123'\n});\n\nvar albums = gcs.bucket('albums');","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var albums = gcs.bucket(&#39;albums&#39;);</p>"}],"description":{"full":"<p>Create a Bucket object to interact with a Google Cloud Storage bucket.</p>","summary":"<p>Create a Bucket object to interact with a Google Cloud Storage bucket.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":70,"codeStart":95,"code":"function Bucket(storage, name) {\n  this.metadata = {};\n  this.name = name;\n  this.storage = storage;\n\n  if (!this.name) {\n    throw new Error('A bucket name is needed to use Google Cloud Storage.');\n  }","ctx":{"type":"constructor","name":"Bucket","string":"Bucket()"}},{"tags":[{"type":"resource","string":"[About Access Control Lists]{@link http://goo.gl/6qBBPO}","html":"<p>[About Access Control Lists]{@link <a href=\"http://goo.gl/6qBBPO}\">http://goo.gl/6qBBPO}</a></p>"},{"type":"resource","string":"[Default ACLs]{@link https://cloud.google.com/storage/docs/accesscontrol#default} ","html":"<p>[Default ACLs]{@link <a href=\"https://cloud.google.com/storage/docs/accesscontrol#default}\">https://cloud.google.com/storage/docs/accesscontrol#default}</a> </p>"},{"type":"mixes","string":"module:storage/acl ","html":"<p>module:storage/acl </p>"},{"type":"example","string":"//-\n// Make a bucket's contents publicly readable.\n//-\nvar myBucket = gcs.bucket('my-bucket');\nmyBucket.acl.add({\n  entity: 'allUsers',\n  role: gcs.acl.READER_ROLE\n}, function(err, aclObject) {});","html":"<p>//-<br />// Make a bucket&#39;s contents publicly readable.<br />//-<br />var myBucket = gcs.bucket(&#39;my-bucket&#39;);<br />myBucket.acl.add({<br />  entity: &#39;allUsers&#39;,<br />  role: gcs.acl.READER_ROLE<br />}, function(err, aclObject) {});</p>"}],"description":{"full":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p><p>An ACL consists of one or more entries, where each entry grants permissions<br />to an entity. Permissions define the actions that can be performed against<br />an object or bucket (for example, <code>READ</code> or <code>WRITE</code>); the entity defines<br />who the permission applies to (for example, a specific user or group of<br />users).</p><p>The <code>acl</code> object on a Bucket instance provides methods to get you a list of<br />the ACLs defined on your bucket, as well as set, update, and delete them.</p><p>Buckets also have<br /><a href=\"https://cloud.google.com/storage/docs/accesscontrol#default\">default ACLs</a><br />for all created files. Default ACLs specify permissions that all new<br />objects added to the bucket will inherit by default. You can add, delete,<br />get, and update entities and permissions for these as well with<br />{module:storage/bucket#acl.default}.</p>","summary":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p>","body":"<p>An ACL consists of one or more entries, where each entry grants permissions<br />to an entity. Permissions define the actions that can be performed against<br />an object or bucket (for example, <code>READ</code> or <code>WRITE</code>); the entity defines<br />who the permission applies to (for example, a specific user or group of<br />users).</p><p>The <code>acl</code> object on a Bucket instance provides methods to get you a list of<br />the ACLs defined on your bucket, as well as set, update, and delete them.</p><p>Buckets also have<br /><a href=\"https://cloud.google.com/storage/docs/accesscontrol#default\">default ACLs</a><br />for all created files. Default ACLs specify permissions that all new<br />objects added to the bucket will inherit by default. You can add, delete,<br />get, and update entities and permissions for these as well with<br />{module:storage/bucket#acl.default}.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":104,"codeStart":140,"code":"this.acl = new Acl({\n  makeReq: this.makeReq_.bind(this),\n  pathPrefix: '/acl'\n});\n\nthis.acl.default = new Acl({\n  makeReq: this.makeReq_.bind(this),\n  pathPrefix: '/defaultObjectAcl'\n});","ctx":{"type":"property","receiver":"this","name":"acl","value":"new Acl({","string":"this.acl"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>Sadly, to generate the documentation properly, this comment block describes<br />a useless variable named <code>ignored</code> and aliases it to <code>acl.default</code>. This is<br />done so the doc building process picks this up, without adding cruft to the<br />Bucket class itself.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Sadly, to generate the documentation properly, this comment block describes<br />a useless variable named <code>ignored</code> and aliases it to <code>acl.default</code>. This is<br />done so the doc building process picks this up, without adding cruft to the<br />Bucket class itself.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":151,"codeStart":158},{"tags":[{"type":"alias","string":"acl.default","html":"<p>acl.default</p>"}],"description":{"full":"<p>Google Cloud Storage Buckets have <a href=\"http://goo.gl/YpGdyv\">default ACLs</a> for<br />all created files. You can add, delete, get, and update entities and<br />permissions for these as well. The method signatures and examples are all<br />the same, after only prefixing the method call with <code>default</code>.</p>","summary":"<p>Google Cloud Storage Buckets have <a href=\"http://goo.gl/YpGdyv\">default ACLs</a> for<br />all created files. You can add, delete, get, and update entities and<br />permissions for these as well. The method signatures and examples are all<br />the same, after only prefixing the method call with <code>default</code>.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":158,"codeStart":166,"code":"var aclDefault = true;","ctx":{"type":"declaration","name":"aclDefault","value":"true","string":"aclDefault"}},{"tags":[{"type":"alias","string":"acl.default.add","html":"<p>acl.default.add</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.add}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.add}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":168,"codeStart":172,"code":"var aclDefaultAdd = true;","ctx":{"type":"declaration","name":"aclDefaultAdd","value":"true","string":"aclDefaultAdd"}},{"tags":[{"type":"alias","string":"acl.default.delete","html":"<p>acl.default.delete</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.delete}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.delete}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":174,"codeStart":178,"code":"var aclDefaultDelete = true;","ctx":{"type":"declaration","name":"aclDefaultDelete","value":"true","string":"aclDefaultDelete"}},{"tags":[{"type":"alias","string":"acl.default.get","html":"<p>acl.default.get</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.get}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.get}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":180,"codeStart":184,"code":"var aclDefaultGet = true;","ctx":{"type":"declaration","name":"aclDefaultGet","value":"true","string":"aclDefaultGet"}},{"tags":[{"type":"alias","string":"acl.default.update","html":"<p>acl.default.update</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.update}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.update}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":186,"codeStart":190,"code":"var aclDefaultUpdate = true;","ctx":{"type":"declaration","name":"aclDefaultUpdate","value":"true","string":"aclDefaultUpdate"}},{"tags":[{"type":"alias","string":"acl.default.owners","html":"<p>acl.default.owners</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.owners}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.owners}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":192,"codeStart":196,"code":"var aclDefaultOwners = true;","ctx":{"type":"declaration","name":"aclDefaultOwners","value":"true","string":"aclDefaultOwners"}},{"tags":[{"type":"alias","string":"acl.default.readers","html":"<p>acl.default.readers</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.readers}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.readers}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":198,"codeStart":202,"code":"var aclDefaultReaders = true;","ctx":{"type":"declaration","name":"aclDefaultReaders","value":"true","string":"aclDefaultReaders"}},{"tags":[{"type":"alias","string":"acl.default.writers","html":"<p>acl.default.writers</p>"}],"description":{"full":"<p>Maps to {module:storage/bucket#acl.writers}.</p>","summary":"<p>Maps to {module:storage/bucket#acl.writers}.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":204,"codeStart":208,"code":"}","ctx":false},{"tags":[{"type":"resource","string":"[Objects: compose API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/compose} ","html":"<p>[Objects: compose API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/compose}\">https://cloud.google.com/storage/docs/json_api/v1/objects/compose}</a> </p>"},{"type":"throws","string":"{Error} if a non-array is provided as sources argument.","types":["Error"],"description":"<p>if a non-array is provided as sources argument.</p>"},{"type":"throws","string":"{Error} if less than two sources are provided.","types":["Error"],"description":"<p>if less than two sources are provided.</p>"},{"type":"throws","string":"{Error} if no destination is provided.","types":["Error"],"description":"<p>if no destination is provided.</p>"},{"type":"throws","string":"{Error} if content type can't be determined for the destination file.\n","types":["Error"],"description":"<p>if content type can&#39;t be determined for the destination file. </p>"},{"type":"param","string":"{string[]|module:storage/file} sources - The source files that will be\n    combined.","name":"sources","description":"<ul>\n<li>The source files that will be     combined.</li>\n</ul>\n","types":["Array.<string>","module:storage/file"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;|module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|module:storage/file} destination - The file you would like the\n    source files combined into.","name":"destination","description":"<ul>\n<li>The file you would like the     source files combined into.</li>\n</ul>\n","types":["string","module:storage/file"],"typesDescription":"<code>string</code>|module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file} callback.newFile - The combined file.","name":"callback.newFile","description":"<ul>\n<li>The combined file.</li>\n</ul>\n","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var logBucket = gcs.bucket('log-bucket');\n\nvar logs2013 = logBucket.file('2013-logs.txt');\nvar logs2014 = logBucket.file('2014-logs.txt');\n\nvar allLogs = logBucket.file('all-logs.txt');\n\nlogBucket.combine([\n  logs2013,\n  logs2014\n], allLogs, function(err, newFile, apiResponse) {\n  // newFile === allLogs\n});","html":"<p>var logBucket = gcs.bucket(&#39;log-bucket&#39;);</p><p>var logs2013 = logBucket.file(&#39;2013-logs.txt&#39;);<br />var logs2014 = logBucket.file(&#39;2014-logs.txt&#39;);</p><p>var allLogs = logBucket.file(&#39;all-logs.txt&#39;);</p><p>logBucket.combine([<br />  logs2013,<br />  logs2014<br />], allLogs, function(err, newFile, apiResponse) {<br />  // newFile === allLogs<br />});</p>"}],"description":{"full":"<p>Combine mutliple files into one new file.</p>","summary":"<p>Combine mutliple files into one new file.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":212,"codeStart":246,"code":"Bucket.prototype.combine = function(sources, destination, callback) {\n  if (!is.array(sources) || sources.length < 2) {\n    throw new Error('You must provide at least two source files.');\n  }\n\n  if (!destination) {\n    throw new Error('A destination file must be specified.');\n  }\n\n  var self = this;\n\n  sources = sources.map(convertToFile);\n  destination = convertToFile(destination);\n  callback = callback || util.noop;\n\n  if (!destination.metadata.contentType) {\n    var destinationContentType = mime.contentType(destination.name);\n\n    if (destinationContentType) {\n      destination.metadata.contentType = destinationContentType;\n    } else {\n      throw new Error(\n        'A content type could not be detected for the destination file.');\n    }\n  }\n\n  this.storage.makeAuthorizedRequest_({\n    method: 'POST',\n    uri: format('{base}/{destBucket}/o/{destFile}/compose', {\n      base: STORAGE_BASE_URL,\n      destBucket: destination.bucket.name,\n      destFile: encodeURIComponent(destination.name)\n    }),\n    json: {\n      destination: {\n        contentType: destination.metadata.contentType\n      },\n      sourceObjects: sources.map(function(source) {\n        var sourceObject = {\n          name: source.name\n        };\n\n        if (source.metadata && source.metadata.generation) {\n          sourceObject.generation = source.metadata.generation;\n        }\n\n        return sourceObject;\n      })\n    }\n  }, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, destination, resp);\n  });\n\n  function convertToFile(file) {\n    if (file instanceof File) {\n      return file;\n    } else {\n      return self.file(file);\n    }\n  }\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"combine","string":"Bucket.prototype.combine()"}},{"tags":[{"type":"resource","string":"[Buckets: delete API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/delete} ","html":"<p>[Buckets: delete API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/delete}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var bucket = gcs.bucket('delete-me');\nbucket.delete(function(err, apiResponse) {});","html":"<p>var bucket = gcs.bucket(&#39;delete-me&#39;);<br />bucket.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete the bucket.</p>","summary":"<p>Delete the bucket.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":313,"codeStart":326,"code":"Bucket.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n  this.makeReq_('DELETE', '', null, true, callback);\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"delete","string":"Bucket.prototype.delete()"}},{"tags":[{"type":"resource","string":"[Objects: delete API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/delete} ","html":"<p>[Objects: delete API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/delete}\">https://cloud.google.com/storage/docs/json_api/v1/objects/delete}</a> </p>"},{"type":"param","string":"{object=} query - Query object. See {module:storage/bucket#getFiles}\n    for all of the supported properties.","name":"query","description":"<ul>\n<li>Query object. See {module:storage/bucket#getFiles}     for all of the supported properties.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} query.force - Supress errors until all files have been\n    processed.","name":"query.force","description":"<ul>\n<li>Supress errors until all files have been     processed.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error|?error[]} callback.err - An API error or array of errors from\n    files that were not able to be deleted.\n","name":"callback.err","description":"<ul>\n<li>An API error or array of errors from     files that were not able to be deleted.</li>\n</ul>\n","types":["error","Array.<error>"],"typesDescription":"<code>error</code>|<code>Array</code>.&lt;<code>error</code>&gt;|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Delete all of the files in the bucket.\n//-\nbucket.deleteFiles(function(err) {});\n\n//-\n// By default, if a file cannot be deleted, this method will stop deleting\n// files from your bucket. You can override this setting with `force: true`.\n//-\nbucket.deleteFiles({\n  force: true\n}, function(errors) {\n  // `errors`:\n  //    Array of errors if any occurred, otherwise null.\n});\n\n//-\n// The first argument to this method acts as a query to\n// {module:storage/bucket#getFiles}. As an example, you can delete files\n// which match a prefix.\n//-\nbucket.deleteFiles({\n  prefix: 'images/'\n}, function(err) {\n  if (!err) {\n    // All files in the `images` directory have been deleted.\n  }\n});","html":"<p>//-<br />// Delete all of the files in the bucket.<br />//-<br />bucket.deleteFiles(function(err) {});</p><p>//-<br />// By default, if a file cannot be deleted, this method will stop deleting<br />// files from your bucket. You can override this setting with <code>force: true</code>.<br />//-<br />bucket.deleteFiles({<br />  force: true<br />}, function(errors) {<br />  // <code>errors</code>:<br />  //    Array of errors if any occurred, otherwise null.<br />});</p><p>//-<br />// The first argument to this method acts as a query to<br />// {module:storage/bucket#getFiles}. As an example, you can delete files<br />// which match a prefix.<br />//-<br />bucket.deleteFiles({<br />  prefix: &#39;images/&#39;<br />}, function(err) {<br />  if (!err) {<br />    // All files in the <code>images</code> directory have been deleted.<br />  }<br />});</p>"}],"description":{"full":"<p>Iterate over the bucket&#39;s files, calling <code>file.delete()</code> on each.</p><p><strong>This is not an atomic request.</strong> A delete attempt will be made<br />for each file individually. Any one can fail, in which case only a portion of<br />the files you intended to be deleted would have.</p><p>Operations are performed in parallel, up to 10 at once. The first error<br />breaks the loop and will execute the provided callback with it. Specify<br /><code>{ force: true }</code> to suppress the errors until all files have had a chance to<br />be processed.</p><p>The <code>query</code> object passed as the first argument will also be passed to<br />{module:storage/bucket#getFiles}.</p>","summary":"<p>Iterate over the bucket&#39;s files, calling <code>file.delete()</code> on each.</p>","body":"<p><strong>This is not an atomic request.</strong> A delete attempt will be made<br />for each file individually. Any one can fail, in which case only a portion of<br />the files you intended to be deleted would have.</p><p>Operations are performed in parallel, up to 10 at once. The first error<br />breaks the loop and will execute the provided callback with it. Specify<br /><code>{ force: true }</code> to suppress the errors until all files have had a chance to<br />be processed.</p><p>The <code>query</code> object passed as the first argument will also be passed to<br />{module:storage/bucket#getFiles}.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":331,"codeStart":386,"code":"Bucket.prototype.deleteFiles = function(query, callback) {\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  query = query || {};\n\n  var MAX_PARALLEL_LIMIT = 10;\n  var errors = [];\n\n  this.getFiles(query, function(err, files) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    function deleteFile(file, callback) {\n      file.delete(function(err) {\n        if (err) {\n          if (query.force) {\n            errors.push(err);\n            callback();\n            return;\n          }\n\n          callback(err);\n          return;\n        }\n\n        callback();\n      });\n    }\n\n    // Iterate through each file and attempt to delete it.\n    async.eachLimit(files, MAX_PARALLEL_LIMIT, deleteFile, function(err) {\n      if (err || errors.length > 0) {\n        callback(err || errors);\n        return;\n      }\n\n      callback();\n    });\n  });\n\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"deleteFiles","string":"Bucket.prototype.deleteFiles()"}},{"tags":[{"type":"param","string":"{string} name - The name of the file in this bucket.","name":"name","description":"<ul>\n<li>The name of the file in this bucket.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration options.","name":"options","description":"<ul>\n<li>Configuration options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|number} options.generation - Only use a specific revision of\n    this file.","name":"options.generation","description":"<ul>\n<li>Only use a specific revision of     this file.</li>\n</ul>\n","types":["string","number"],"typesDescription":"<code>string</code>|<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:storage/file}\n","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:storage/file}</p>"},{"type":"example","string":"var file = bucket.file('my-existing-file.png');","html":"<p>var file = bucket.file(&#39;my-existing-file.png&#39;);</p>"}],"description":{"full":"<p>Create a File object. See {module:storage/file} to see how to handle<br />the different use cases you may have.</p>","summary":"<p>Create a File object. See {module:storage/file} to see how to handle<br />the different use cases you may have.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":433,"codeStart":446,"code":"Bucket.prototype.file = function(name, options) {\n  return new File(this, name, options);\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"file","string":"Bucket.prototype.file()"}},{"tags":[{"type":"resource","string":"[Objects: list API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/list} ","html":"<p>[Objects: list API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/list}\">https://cloud.google.com/storage/docs/json_api/v1/objects/list}</a> </p>"},{"type":"param","string":"{object=} query - Query object.","name":"query","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} query.autoPaginate - Have pagination handled automatically.\n    Default: true.","name":"query.autoPaginate","description":"<ul>\n<li>Have pagination handled automatically.     Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.delimiter - Results will contain only objects whose\n    names, aside from the prefix, do not contain delimiter. Objects whose\n    names, aside from the prefix, contain delimiter will have their name\n    truncated after the delimiter, returned in `apiResponse.prefixes`.\n    Duplicate prefixes are omitted.","name":"query.delimiter","description":"<ul>\n<li>Results will contain only objects whose     names, aside from the prefix, do not contain delimiter. Objects whose<br />  names, aside from the prefix, contain delimiter will have their name<br />  truncated after the delimiter, returned in <code>apiResponse.prefixes</code>.<br />  Duplicate prefixes are omitted.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.prefix - Filter results to objects whose names begin\n    with this prefix.","name":"query.prefix","description":"<ul>\n<li>Filter results to objects whose names begin     with this prefix.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of items plus prefixes to\n    return.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of items plus prefixes to     return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"query.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{bool} query.versions - If true, returns File objects scoped to their\n    versions.","name":"query.versions","description":"<ul>\n<li>If true, returns File objects scoped to their     versions.</li>\n</ul>\n","types":["bool"],"typesDescription":"<a href=\"bool.html\">bool</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file[]} callback.files - List of files.","name":"callback.files","description":"<ul>\n<li>List of files.</li>\n</ul>\n","types":["Array.<module:storage/file>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"bucket.getFiles(function(err, files) {\n  if (!err) {\n    // files is an array of File objects.\n  }\n});\n\n//-\n// If your bucket has versioning enabled, you can get all of your files\n// scoped to their generation.\n//-\nbucket.getFiles({\n  versions: true\n}, function(err, files) {\n  // Each file is scoped to its generation.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, files, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    bucket.getFiles(nextQuery, callback);\n  }\n\n  // The `metadata` property is populated for you with the metadata at the\n  // time of fetching.\n  files[0].metadata;\n\n  // However, in cases where you are concerned the metadata could have\n  // changed, use the `getMetadata` method.\n  files[0].getMetadata(function(err, metadata) {});\n};\n\nbucket.getFiles({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the files from your bucket as a readable object stream.\n//-\nbucket.getFiles()\n  .on('error', console.error)\n  .on('data', function(file) {\n    // file is a File object.\n  })\n  .on('end', function() {\n    // All files retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nbucket.getFiles()\n  .on('data', function(file) {\n    this.end();\n  });","html":"<p>bucket.getFiles(function(err, files) {<br />  if (!err) {<br />    // files is an array of File objects.<br />  }<br />});</p><p>//-<br />// If your bucket has versioning enabled, you can get all of your files<br />// scoped to their generation.<br />//-<br />bucket.getFiles({<br />  versions: true<br />}, function(err, files) {<br />  // Each file is scoped to its generation.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, files, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    bucket.getFiles(nextQuery, callback);<br />  }</p><p>  // The <code>metadata</code> property is populated for you with the metadata at the<br />  // time of fetching.<br />  files[0].metadata;</p><p>  // However, in cases where you are concerned the metadata could have<br />  // changed, use the <code>getMetadata</code> method.<br />  files[0].getMetadata(function(err, metadata) {});<br />};</p><p>bucket.getFiles({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the files from your bucket as a readable object stream.<br />//-<br />bucket.getFiles()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(file) {<br />    // file is a File object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All files retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />bucket.getFiles()<br />  .on(&#39;data&#39;, function(file) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get File objects for the files currently in the bucket.</p>","summary":"<p>Get File objects for the files currently in the bucket.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":450,"codeStart":539,"code":"Bucket.prototype.getFiles = function(query, callback) {\n  var self = this;\n\n  if (!callback) {\n    callback = query;\n    query = {};\n  }\n\n  this.makeReq_('GET', '/o', query, true, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var files = (resp.items || []).map(function(item) {\n      var options = {};\n\n      if (query.versions) {\n        options.generation = item.generation;\n      }\n\n      var file = self.file(item.name, options);\n      file.metadata = item;\n\n      return file;\n    });\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, { pageToken: resp.nextPageToken });\n    }\n\n    callback(null, files, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"getFiles","string":"Bucket.prototype.getFiles()"}},{"tags":[{"type":"resource","string":"[Buckets: get API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/get} ","html":"<p>[Buckets: get API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/get}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - Tbe bucket's metadata.","name":"callback.metadata","description":"<ul>\n<li>Tbe bucket&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"bucket.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>bucket.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the bucket&#39;s metadata.</p><p>To set metadata, see {module:storage/bucket#setMetadata}.</p>","summary":"<p>Get the bucket&#39;s metadata.</p>","body":"<p>To set metadata, see {module:storage/bucket#setMetadata}.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":576,"codeStart":591,"code":"Bucket.prototype.getMetadata = function(callback) {\n  callback = callback || util.noop;\n  this.makeReq_('GET', '', null, true, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n    this.metadata = resp;\n    callback(null, this.metadata, resp);\n  }.bind(this));\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"getMetadata","string":"Bucket.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Buckets: patch API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/patch} ","html":"<p>[Buckets: patch API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/patch}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/patch}</a> </p>"},{"type":"param","string":"{object=} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.includeFiles - Make each file in the bucket private.\n    Default: `false`.","name":"options.includeFiles","description":"<ul>\n<li>Make each file in the bucket private.     Default: <code>false</code>.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.force - Queue errors occurred while making files\n    private until all files have been processed.","name":"options.force","description":"<ul>\n<li>Queue errors occurred while making files     private until all files have been processed.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file[]} callback.files - List of files made private.\n","name":"callback.files","description":"<ul>\n<li>List of files made private. </li>\n</ul>\n","types":["Array.<module:storage/file>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Make the bucket private.\n//-\nbucket.makePrivate(function(err) {});\n\n//-\n// Make the bucket and its contents private.\n//-\nvar opts = {\n  includeFiles: true\n};\n\nbucket.makePrivate(opts, function(err, files) {\n  // `err`:\n  //    The first error to occur, otherwise null.\n  //\n  // `files`:\n  //    Array of files successfully made private in the bucket.\n});\n\n//-\n// Make the bucket and its contents private, using force to suppress errors\n// until all files have been processed.\n//-\nvar opts = {\n  includeFiles: true,\n  force: true\n};\n\nbucket.makePrivate(opts, function(errors, files) {\n  // `errors`:\n  //    Array of errors if any occurred, otherwise null.\n  //\n  // `files`:\n  //    Array of files successfully made private in the bucket.\n});","html":"<p>//-<br />// Make the bucket private.<br />//-<br />bucket.makePrivate(function(err) {});</p><p>//-<br />// Make the bucket and its contents private.<br />//-<br />var opts = {<br />  includeFiles: true<br />};</p><p>bucket.makePrivate(opts, function(err, files) {<br />  // <code>err</code>:<br />  //    The first error to occur, otherwise null.<br />  //<br />  // <code>files</code>:<br />  //    Array of files successfully made private in the bucket.<br />});</p><p>//-<br />// Make the bucket and its contents private, using force to suppress errors<br />// until all files have been processed.<br />//-<br />var opts = {<br />  includeFiles: true,<br />  force: true<br />};</p><p>bucket.makePrivate(opts, function(errors, files) {<br />  // <code>errors</code>:<br />  //    Array of errors if any occurred, otherwise null.<br />  //<br />  // <code>files</code>:<br />  //    Array of files successfully made private in the bucket.<br />});</p>"}],"description":{"full":"<p>Make the bucket listing private.</p><p>You may also choose to make the contents of the bucket private by specifying<br /><code>includeFiles: true</code>. This will automatically run<br />{module:storage/file#makePrivate} for every file in the bucket.</p><p>When specifying <code>includeFiles: true</code>, use <code>force: true</code> to delay execution of<br />your callback until all files have been processed. By default, the callback<br />is executed after the first error. Use <code>force</code> to queue such errors until all<br />files have been procssed, after which they will be returned as an array as<br />the first argument to your callback.</p><p>NOTE: This may cause the process to be long-running and use a high number of<br />requests. Use with caution.</p>","summary":"<p>Make the bucket listing private.</p>","body":"<p>You may also choose to make the contents of the bucket private by specifying<br /><code>includeFiles: true</code>. This will automatically run<br />{module:storage/file#makePrivate} for every file in the bucket.</p><p>When specifying <code>includeFiles: true</code>, use <code>force: true</code> to delay execution of<br />your callback until all files have been processed. By default, the callback<br />is executed after the first error. Use <code>force</code> to queue such errors until all<br />files have been procssed, after which they will be returned as an array as<br />the first argument to your callback.</p><p>NOTE: This may cause the process to be long-running and use a high number of<br />requests. Use with caution.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":603,"codeStart":668,"code":"Bucket.prototype.makePrivate = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.private = true;\n\n  async.series([setPredefinedAcl, makeFilesPrivate], callback);\n\n  function setPredefinedAcl(done) {\n    var query = {\n      predefinedAcl: 'projectPrivate'\n    };\n\n    // You aren't allowed to set both predefinedAcl & acl properties on a bucket\n    // so acl must explicitly be nullified.\n    var metadata = { acl: null };\n\n    self.makeReq_('PATCH', '', query, metadata, function(err, resp) {\n      if (err) {\n        done(err);\n        return;\n      }\n\n      self.metadata = resp;\n\n      done();\n    });\n  }\n\n  function makeFilesPrivate(done) {\n    if (!options.includeFiles) {\n      done();\n      return;\n    }\n\n    self.makeAllFilesPublicPrivate_(options, done);\n  }\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"makePrivate","string":"Bucket.prototype.makePrivate()"}},{"tags":[{"type":"resource","string":"[Buckets: patch API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/patch} ","html":"<p>[Buckets: patch API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/patch}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/patch}</a> </p>"},{"type":"param","string":"{object=} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.includeFiles - Make each file in the bucket publicly\n    readable. Default: `false`.","name":"options.includeFiles","description":"<ul>\n<li>Make each file in the bucket publicly     readable. Default: <code>false</code>.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.force - Queue errors occurred while making files\n    public until all files have been processed.","name":"options.force","description":"<ul>\n<li>Queue errors occurred while making files     public until all files have been processed.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file[]} callback.files - List of files made public.\n","name":"callback.files","description":"<ul>\n<li>List of files made public. </li>\n</ul>\n","types":["Array.<module:storage/file>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Make the bucket publicly readable.\n//-\nbucket.makePublic(function(err) {});\n\n//-\n// Make the bucket and its contents publicly readable.\n//-\nvar opts = {\n  includeFiles: true\n};\n\nbucket.makePublic(opts, function(err, files) {\n  // `err`:\n  //    The first error to occur, otherwise null.\n  //\n  // `files`:\n  //    Array of files successfully made public in the bucket.\n});\n\n//-\n// Make the bucket and its contents publicly readable, using force to\n// suppress errors until all files have been processed.\n//-\nvar opts = {\n  includeFiles: true,\n  force: true\n};\n\nbucket.makePublic(opts, function(errors, files) {\n  // `errors`:\n  //    Array of errors if any occurred, otherwise null.\n  //\n  // `files`:\n  //    Array of files successfully made public in the bucket.\n});","html":"<p>//-<br />// Make the bucket publicly readable.<br />//-<br />bucket.makePublic(function(err) {});</p><p>//-<br />// Make the bucket and its contents publicly readable.<br />//-<br />var opts = {<br />  includeFiles: true<br />};</p><p>bucket.makePublic(opts, function(err, files) {<br />  // <code>err</code>:<br />  //    The first error to occur, otherwise null.<br />  //<br />  // <code>files</code>:<br />  //    Array of files successfully made public in the bucket.<br />});</p><p>//-<br />// Make the bucket and its contents publicly readable, using force to<br />// suppress errors until all files have been processed.<br />//-<br />var opts = {<br />  includeFiles: true,<br />  force: true<br />};</p><p>bucket.makePublic(opts, function(errors, files) {<br />  // <code>errors</code>:<br />  //    Array of errors if any occurred, otherwise null.<br />  //<br />  // <code>files</code>:<br />  //    Array of files successfully made public in the bucket.<br />});</p>"}],"description":{"full":"<p>Make the bucket publicly readable.</p><p>You may also choose to make the contents of the bucket publicly readable by<br />specifying <code>includeFiles: true</code>. This will automatically run<br />{module:storage/file#makePublic} for every file in the bucket.</p><p>When specifying <code>includeFiles: true</code>, use <code>force: true</code> to delay execution of<br />your callback until all files have been processed. By default, the callback<br />is executed after the first error. Use <code>force</code> to queue such errors until all<br />files have been procssed, after which they will be returned as an array as<br />the first argument to your callback.</p><p>NOTE: This may cause the process to be long-running and use a high number of<br />requests. Use with caution.</p>","summary":"<p>Make the bucket publicly readable.</p>","body":"<p>You may also choose to make the contents of the bucket publicly readable by<br />specifying <code>includeFiles: true</code>. This will automatically run<br />{module:storage/file#makePublic} for every file in the bucket.</p><p>When specifying <code>includeFiles: true</code>, use <code>force: true</code> to delay execution of<br />your callback until all files have been processed. By default, the callback<br />is executed after the first error. Use <code>force</code> to queue such errors until all<br />files have been procssed, after which they will be returned as an array as<br />the first argument to your callback.</p><p>NOTE: This may cause the process to be long-running and use a high number of<br />requests. Use with caution.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":712,"codeStart":777,"code":"Bucket.prototype.makePublic = function(options, callback) {\n  var self = this;\n\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  options.public = true;\n\n  async.series([\n    addAclPermissions,\n    addDefaultAclPermissions,\n    makeFilesPublic\n  ], callback);\n\n  function addAclPermissions(done) {\n    // Allow reading bucket contents while preserving original permissions.\n    self.acl.add({\n      entity: 'allUsers',\n      role: 'READER'\n    }, done);\n  }\n\n  function addDefaultAclPermissions(done) {\n    self.acl.default.add({\n      entity: 'allUsers',\n      role: 'READER'\n    }, done);\n  }\n\n  function makeFilesPublic(done) {\n    if (!options.includeFiles) {\n      done();\n      return;\n    }\n\n    self.makeAllFilesPublicPrivate_(options, done);\n  }\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"makePublic","string":"Bucket.prototype.makePublic()"}},{"tags":[{"type":"resource","string":"[Buckets: patch API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/patch} ","html":"<p>[Buckets: patch API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/patch}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/patch}</a> </p>"},{"type":"param","string":"{object} metadata - The metadata you wish to set.","name":"metadata","description":"<ul>\n<li>The metadata you wish to set.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The bucket's metadata.","name":"callback.metadata","description":"<ul>\n<li>The bucket&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Set website metadata field on the bucket.\n//-\nbucket.setMetadata({\n  website: {\n    mainPageSuffix: 'http://example.com',\n    notFoundPage: 'http://example.com/404.html'\n  }\n}, function(err, metadata, apiResponse) {});\n\n//-\n// Enable versioning for your bucket.\n//-\nbucket.setMetadata({\n  versioning: {\n    enabled: true\n  }\n}, function(err, metadata, apiResponse) {});","html":"<p>//-<br />// Set website metadata field on the bucket.<br />//-<br />bucket.setMetadata({<br />  website: {<br />    mainPageSuffix: &#39;<a href=\"http://example.com\">http://example.com</a>&#39;,<br />    notFoundPage: &#39;<a href=\"http://example.com/404.html\">http://example.com/404.html</a>&#39;<br />  }<br />}, function(err, metadata, apiResponse) {});</p><p>//-<br />// Enable versioning for your bucket.<br />//-<br />bucket.setMetadata({<br />  versioning: {<br />    enabled: true<br />  }<br />}, function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Set the bucket&#39;s metadata.</p>","summary":"<p>Set the bucket&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":819,"codeStart":850,"code":"Bucket.prototype.setMetadata = function(metadata, callback) {\n  var that = this;\n  callback = callback || util.noop;\n\n  this.makeReq_('PATCH', '', null, metadata, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"setMetadata","string":"Bucket.prototype.setMetadata()"}},{"tags":[{"type":"resource","string":"[Upload Options (Simple or Resumable)]{@link https://cloud.google.com/storage/docs/json_api/v1/how-tos/upload#uploads}","html":"<p>[Upload Options (Simple or Resumable)]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/how-tos/upload#uploads}\">https://cloud.google.com/storage/docs/json_api/v1/how-tos/upload#uploads}</a></p>"},{"type":"resource","string":"[Objects: insert API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/insert} ","html":"<p>[Objects: insert API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/insert}\">https://cloud.google.com/storage/docs/json_api/v1/objects/insert}</a> </p>"},{"type":"param","string":"{string} localPath - The fully qualified path to the file you wish to\n    upload to your bucket.","name":"localPath","description":"<ul>\n<li>The fully qualified path to the file you wish to     upload to your bucket.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration options.","name":"options","description":"<ul>\n<li>Configuration options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|module:storage/file} options.destination - The place to save\n    your file. If given a string, the file will be uploaded to the bucket\n    using the string as a filename. When given a File object, your local file\n    will be uploaded to the File object's bucket and under the File object's\n    name. Lastly, when this argument is omitted, the file is uploaded to your\n    bucket using the name of the local file.","name":"options.destination","description":"<ul>\n<li>The place to save     your file. If given a string, the file will be uploaded to the bucket<br />  using the string as a filename. When given a File object, your local file<br />  will be uploaded to the File object&#39;s bucket and under the File object&#39;s<br />  name. Lastly, when this argument is omitted, the file is uploaded to your<br />  bucket using the name of the local file.</li>\n</ul>\n","types":["string","module:storage/file"],"typesDescription":"<code>string</code>|module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.gzip - Automatically gzip the file. This will set\n    `options.metadata.contentEncoding` to `gzip`.","name":"options.gzip","description":"<ul>\n<li>Automatically gzip the file. This will set     <code>options.metadata.contentEncoding</code> to <code>gzip</code>.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options.metadata - Metadata to set for your file.","name":"options.metadata","description":"<ul>\n<li>Metadata to set for your file.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} options.resumable - Force a resumable upload. (default:\n    true for files larger than 5 MB).","name":"options.resumable","description":"<ul>\n<li>Force a resumable upload. (default:     true for files larger than 5 MB).</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file} callback.file - The uploaded File.","name":"callback.file","description":"<ul>\n<li>The uploaded File.</li>\n</ul>\n","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.","name":"callback.apiResponse","description":"<ul>\n<li>The full API response.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|boolean} options.validation - Possible values: `\"md5\"`,\n    `\"crc32c\"`, or `false`. By default, data integrity is validated with an\n    MD5 checksum for maximum reliability. CRC32c will provide better\n    performance with less reliability. You may also choose to skip validation\n    completely, however this is **not recommended**.\n","name":"options.validation","description":"<ul>\n<li>Possible values: <code>&quot;md5&quot;</code>,     <code>&quot;crc32c&quot;</code>, or <code>false</code>. By default, data integrity is validated with an<br />  MD5 checksum for maximum reliability. CRC32c will provide better<br />  performance with less reliability. You may also choose to skip validation<br />  completely, however this is <strong>not recommended</strong>.</li>\n</ul>\n","types":["string","boolean"],"typesDescription":"<code>string</code>|<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// The easiest way to upload a file.\n//-\nbucket.upload('/local/path/image.png', function(err, file, apiResponse) {\n  // Your bucket now contains:\n  // - \"image.png\" (with the contents of `/local/path/image.png')\n\n  // `file` is an instance of a File object that refers to your new file.\n});\n\n//-\n// It's not always that easy. You will likely want to specify the filename\n// used when your new file lands in your bucket.\n//\n// You may also want to set metadata or customize other options.\n//-\nvar options = {\n  destination: 'new-image.png',\n  resumable: true,\n  validation: 'crc32c',\n  metadata: {\n    event: 'Fall trip to the zoo'\n  }\n};\n\nbucket.upload('local-image.png', options, function(err, file) {\n  // Your bucket now contains:\n  // - \"new-image.png\" (with the contents of `local-image.png')\n\n  // `file` is an instance of a File object that refers to your new file.\n});\n\n//-\n// You can also have a file gzip'd on the fly.\n//-\nbucket.upload('index.html', { gzip: true }, function(err, file) {\n  // Your bucket now contains:\n  // - \"index.html\" (automatically compressed with gzip)\n\n  // Downloading the file with `file.download` will automatically decode the\n  // file.\n});\n\n//-\n// You may also re-use a File object, {module:storage/file}, that references\n// the file you wish to create or overwrite.\n//-\nvar options = {\n  destination: bucket.file('existing-file.png'),\n  resumable: false\n};\n\nbucket.upload('local-img.png', options, function(err, newFile) {\n  // Your bucket now contains:\n  // - \"existing-file.png\" (with the contents of `local-img.png')\n\n  // Note:\n  // The `newFile` parameter is equal to `file`.\n});","html":"<p>//-<br />// The easiest way to upload a file.<br />//-<br />bucket.upload(&#39;/local/path/image.png&#39;, function(err, file, apiResponse) {<br />  // Your bucket now contains:<br />  // - &quot;image.png&quot; (with the contents of `/local/path/image.png&#39;)</p><p>  // <code>file</code> is an instance of a File object that refers to your new file.<br />});</p><p>//-<br />// It&#39;s not always that easy. You will likely want to specify the filename<br />// used when your new file lands in your bucket.<br />//<br />// You may also want to set metadata or customize other options.<br />//-<br />var options = {<br />  destination: &#39;new-image.png&#39;,<br />  resumable: true,<br />  validation: &#39;crc32c&#39;,<br />  metadata: {<br />    event: &#39;Fall trip to the zoo&#39;<br />  }<br />};</p><p>bucket.upload(&#39;local-image.png&#39;, options, function(err, file) {<br />  // Your bucket now contains:<br />  // - &quot;new-image.png&quot; (with the contents of `local-image.png&#39;)</p><p>  // <code>file</code> is an instance of a File object that refers to your new file.<br />});</p><p>//-<br />// You can also have a file gzip&#39;d on the fly.<br />//-<br />bucket.upload(&#39;index.html&#39;, { gzip: true }, function(err, file) {<br />  // Your bucket now contains:<br />  // - &quot;index.html&quot; (automatically compressed with gzip)</p><p>  // Downloading the file with <code>file.download</code> will automatically decode the<br />  // file.<br />});</p><p>//-<br />// You may also re-use a File object, {module:storage/file}, that references<br />// the file you wish to create or overwrite.<br />//-<br />var options = {<br />  destination: bucket.file(&#39;existing-file.png&#39;),<br />  resumable: false<br />};</p><p>bucket.upload(&#39;local-img.png&#39;, options, function(err, newFile) {<br />  // Your bucket now contains:<br />  // - &quot;existing-file.png&quot; (with the contents of `local-img.png&#39;)</p><p>  // Note:<br />  // The <code>newFile</code> parameter is equal to <code>file</code>.<br />});</p>"}],"description":{"full":"<p>Upload a file to the bucket. This is a convenience method that wraps<br />{module:storage/file#createWriteStream}.</p><p>You can specify whether or not an upload is resumable by setting<br /><code>options.resumable</code>. <em>Resumable uploads are enabled by default if your input<br />file is larger than 5 MB.</em></p>","summary":"<p>Upload a file to the bucket. This is a convenience method that wraps<br />{module:storage/file#createWriteStream}.</p>","body":"<p>You can specify whether or not an upload is resumable by setting<br /><code>options.resumable</code>. <em>Resumable uploads are enabled by default if your input<br />file is larger than 5 MB.</em></p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":866,"codeStart":962,"code":"Bucket.prototype.upload = function(localPath, options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  var newFile;\n  if (options.destination instanceof File) {\n    newFile = options.destination;\n  } else if (is.string(options.destination)) {\n    // Use the string as the name of the file.\n    newFile = this.file(options.destination);\n  } else {\n    // Resort to using the name of the incoming file.\n    newFile = this.file(path.basename(localPath));\n  }\n\n  var metadata = options.metadata || {};\n  var contentType = mime.contentType(path.basename(localPath));\n\n  if (contentType && !metadata.contentType) {\n    metadata.contentType = contentType;\n  }\n\n  var resumable;\n  if (is.boolean(options.resumable)) {\n    resumable = options.resumable;\n    upload();\n  } else {\n    // Determine if the upload should be resumable if it's over the threshold.\n    fs.stat(localPath, function(err, fd) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      resumable = fd.size > RESUMABLE_THRESHOLD;\n\n      upload();\n    });\n  }\n\n  function upload() {\n    fs.createReadStream(localPath)\n      .pipe(newFile.createWriteStream({\n        validation: options.validation,\n        resumable: resumable,\n        metadata: metadata,\n        gzip: options.gzip\n      }))\n      .on('error', function(err) {\n        callback(err);\n      })\n      .on('finish', function() {\n        callback(null, newFile);\n      });\n  }\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"upload","string":"Bucket.prototype.upload()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.force - Supress errors until all files have been\n    processed.","name":"options.force","description":"<ul>\n<li>Supress errors until all files have been     processed.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.private - Make files private.","name":"options.private","description":"<ul>\n<li>Make files private.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.public - Make files public.","name":"options.public","description":"<ul>\n<li>Make files public.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Iterate over all of a bucket&#39;s files, calling <code>file.makePublic()</code> (public)<br />or <code>file.makePrivate()</code> (private) on each.</p><p>Operations are performed in parallel, up to 10 at once. The first error<br />breaks the loop, and will execute the provided callback with it. Specify<br /><code>{ force: true }</code> to suppress the errors.</p>","summary":"<p>Iterate over all of a bucket&#39;s files, calling <code>file.makePublic()</code> (public)<br />or <code>file.makePrivate()</code> (private) on each.</p>","body":"<p>Operations are performed in parallel, up to 10 at once. The first error<br />breaks the loop, and will execute the provided callback with it. Specify<br /><code>{ force: true }</code> to suppress the errors.</p>"},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1021,"codeStart":1038,"code":"Bucket.prototype.makeAllFilesPublicPrivate_ = function(options, callback) {\n  var MAX_PARALLEL_LIMIT = 10;\n  var errors = [];\n  var updatedFiles = [];\n\n  this.getFiles(function(err, files) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    function processFile(file, callback) {\n      if (options.public) {\n        file.makePublic(processedCallback);\n      } else if (options.private) {\n        file.makePrivate(processedCallback);\n      }\n\n      function processedCallback(err) {\n        if (err) {\n          if (options.force) {\n            errors.push(err);\n            callback();\n            return;\n          }\n\n          callback(err);\n          return;\n        }\n\n        updatedFiles.push(file);\n        callback();\n      }\n    }\n\n    // Iterate through each file and make it public or private.\n    async.eachLimit(files, MAX_PARALLEL_LIMIT, processFile, function(err) {\n      if (err || errors.length > 0) {\n        callback(err || errors, updatedFiles);\n        return;\n      }\n\n      callback(null, updatedFiles);\n    });\n  });\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"makeAllFilesPublicPrivate_","string":"Bucket.prototype.makeAllFilesPublicPrivate_()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1085,"codeStart":1097,"code":"Bucket.prototype.makeReq_ = function(method, path, query, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: query,\n    uri: STORAGE_BASE_URL + '/' + this.name + path\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.storage.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"Bucket","cons":"Bucket","name":"makeReq_","string":"Bucket.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>This method can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>This method can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1111,"codeStart":1116,"code":"streamRouter.extend(Bucket, 'getFiles');\n\nmodule.exports = Bucket;","ctx":false}],"storage/file":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"storage/file","html":"<p>storage/file</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar concat = require('concat-stream');\nvar crypto = require('crypto');\nvar duplexify = require('duplexify');\nvar format = require('string-format-obj');\nvar fs = require('fs');\nvar hashStreamValidation = require('hash-stream-validation');\nvar is = require('is');\nvar once = require('once');\nvar pumpify = require('pumpify');\nvar streamEvents = require('stream-events');\nvar through = require('through2');\nvar resumableUpload = require('gcs-resumable-upload');\nvar zlib = require('zlib');","ctx":false},{"tags":[{"type":"type","string":"{module:storage/acl}","types":["module:storage/acl"],"typesDescription":"module:<a href=\"module%3Astorage%2Facl.html\">storage/acl</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:storage/acl}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":37,"codeStart":41,"code":"var Acl = require('./acl.js');","ctx":{"type":"declaration","name":"Acl","value":"require('./acl.js')","string":"Acl"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":43,"codeStart":47,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{string}","html":"<p>{string}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":49,"codeStart":53,"code":"var STORAGE_UPLOAD_BASE_URL = 'https://www.googleapis.com/upload/storage/v1/b';","ctx":{"type":"declaration","name":"STORAGE_UPLOAD_BASE_URL","value":"'https://www.googleapis.com/upload/storage/v1/b'","string":"STORAGE_UPLOAD_BASE_URL"}},{"tags":[{"type":"param","string":"{module:storage/bucket} bucket - The Bucket instance this file is\n    attached to.","name":"bucket","description":"<ul>\n<li>The Bucket instance this file is     attached to.</li>\n</ul>\n","types":["module:storage/bucket"],"typesDescription":"module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} name - The name of the remote file.","name":"name","description":"<ul>\n<li>The name of the remote file.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.generation - Generation to scope the file to.","name":"options.generation","description":"<ul>\n<li>Generation to scope the file to.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p>","summary":"<p>Developer Documentation</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":55,"codeStart":63},{"tags":[{"type":"alias","string":"module:storage/file","html":"<p>module:storage/file</p>"},{"type":"constructor","string":"","html":""}],"description":{"full":"<p>A File object is created from your Bucket object using<br />{module:storage/bucket#file}.</p>","summary":"<p>A File object is created from your Bucket object using<br />{module:storage/bucket#file}.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":63,"codeStart":70,"code":"function File(bucket, name, options) {\n  if (!name) {\n    throw Error('A file name must be specified.');\n  }\n\n  options = options || {};\n\n  this.bucket = bucket;\n  this.generation = parseInt(options.generation, 10);\n  this.makeReq_ = bucket.makeReq_.bind(bucket);\n  this.metadata = {};\n\n  Object.defineProperty(this, 'name', {\n    enumerable: true,\n    value: name\n  });","ctx":{"type":"constructor","name":"File","string":"File()"}},{"tags":[{"type":"resource","string":"[About Access Control lists]{@link http://goo.gl/6qBBPO} ","html":"<p>[About Access Control lists]{@link <a href=\"http://goo.gl/6qBBPO}\">http://goo.gl/6qBBPO}</a> </p>"},{"type":"mixes","string":"module:storage/acl ","html":"<p>module:storage/acl </p>"},{"type":"example","string":"//-\n// Make a file publicly readable.\n//-\nvar gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123'\n});\n\nvar myFile = gcs.bucket('my-bucket').file('my-file');\n\n myFile.acl.add({\n  entity: 'allUsers',\n  role: gcs.acl.READER_ROLE\n}, function(err, aclObject) {});","html":"<p>//-<br />// Make a file publicly readable.<br />//-<br />var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var myFile = gcs.bucket(&#39;my-bucket&#39;).file(&#39;my-file&#39;);</p><p> myFile.acl.add({<br />  entity: &#39;allUsers&#39;,<br />  role: gcs.acl.READER_ROLE<br />}, function(err, aclObject) {});</p>"}],"description":{"full":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p><p>An ACL consists of one or more entries, where each entry grants permissions<br />to an entity. Permissions define the actions that can be performed against<br />an object or bucket (for example, <code>READ</code> or <code>WRITE</code>); the entity defines<br />who the permission applies to (for example, a specific user or group of<br />users).</p><p>The <code>acl</code> object on a File instance provides methods to get you a list of<br />the ACLs defined on your bucket, as well as set, update, and delete them.</p>","summary":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p>","body":"<p>An ACL consists of one or more entries, where each entry grants permissions<br />to an entity. Permissions define the actions that can be performed against<br />an object or bucket (for example, <code>READ</code> or <code>WRITE</code>); the entity defines<br />who the permission applies to (for example, a specific user or group of<br />users).</p><p>The <code>acl</code> object on a File instance provides methods to get you a list of<br />the ACLs defined on your bucket, as well as set, update, and delete them.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":87,"codeStart":120,"code":"this.acl = new Acl({\n  makeReq: this.makeReq_,\n  pathPrefix: '/o/' + encodeURIComponent(this.name) + '/acl'\n});\n}","ctx":{"type":"property","receiver":"this","name":"acl","value":"new Acl({","string":"this.acl"}},{"tags":[{"type":"resource","string":"[Objects: copy API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/copy} ","html":"<p>[Objects: copy API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/copy}\">https://cloud.google.com/storage/docs/json_api/v1/objects/copy}</a> </p>"},{"type":"throws","string":"{Error} If the destination file is not provided.\n","types":["Error"],"description":"<p>If the destination file is not provided. </p>"},{"type":"param","string":"{string|module:storage/bucket|module:storage/file} destination -\n    Destination file.","name":"destination","description":"<ul>\n<li>Destination file.</li>\n</ul>\n","types":["string","module:storage/bucket","module:storage/file"],"typesDescription":"<code>string</code>|module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>|module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file} callback.copiedFile - The copied File.","name":"callback.copiedFile","description":"<ul>\n<li>The copied File.</li>\n</ul>\n","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// You can pass in a variety of types for the destination.\n//\n// For all of the below examples, assume we are working with the following\n// Bucket and File objects.\n//-\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-image.png');\n\n//-\n// If you pass in a string for the destination, the file is copied to its\n// current bucket, under the new name provided.\n//-\nfile.copy('my-image-copy.png', function(err, copiedFile, apiResponse) {\n  // `my-bucket` now contains:\n  // - \"my-image.png\"\n  // - \"my-image-copy.png\"\n\n  // `copiedFile` is an instance of a File object that refers to your new\n  // file.\n});\n\n//-\n// If you pass in a Bucket object, the file will be copied to that bucket\n// using the same name.\n//-\nvar anotherBucket = gcs.bucket('another-bucket');\nfile.copy(anotherBucket, function(err, copiedFile, apiResponse) {\n  // `my-bucket` still contains:\n  // - \"my-image.png\"\n  //\n  // `another-bucket` now contains:\n  // - \"my-image.png\"\n\n  // `copiedFile` is an instance of a File object that refers to your new\n  // file.\n});\n\n//-\n// If you pass in a File object, you have complete control over the new\n// bucket and filename.\n//-\nvar anotherFile = anotherBucket.file('my-awesome-image.png');\nfile.copy(anotherFile, function(err, copiedFile, apiResponse) {\n  // `my-bucket` still contains:\n  // - \"my-image.png\"\n  //\n  // `another-bucket` now contains:\n  // - \"my-awesome-image.png\"\n\n  // Note:\n  // The `copiedFile` parameter is equal to `anotherFile`.\n});","html":"<p>//-<br />// You can pass in a variety of types for the destination.<br />//<br />// For all of the below examples, assume we are working with the following<br />// Bucket and File objects.<br />//-<br />var bucket = gcs.bucket(&#39;my-bucket&#39;);<br />var file = bucket.file(&#39;my-image.png&#39;);</p><p>//-<br />// If you pass in a string for the destination, the file is copied to its<br />// current bucket, under the new name provided.<br />//-<br />file.copy(&#39;my-image-copy.png&#39;, function(err, copiedFile, apiResponse) {<br />  // <code>my-bucket</code> now contains:<br />  // - &quot;my-image.png&quot;<br />  // - &quot;my-image-copy.png&quot;</p><p>  // <code>copiedFile</code> is an instance of a File object that refers to your new<br />  // file.<br />});</p><p>//-<br />// If you pass in a Bucket object, the file will be copied to that bucket<br />// using the same name.<br />//-<br />var anotherBucket = gcs.bucket(&#39;another-bucket&#39;);<br />file.copy(anotherBucket, function(err, copiedFile, apiResponse) {<br />  // <code>my-bucket</code> still contains:<br />  // - &quot;my-image.png&quot;<br />  //<br />  // <code>another-bucket</code> now contains:<br />  // - &quot;my-image.png&quot;</p><p>  // <code>copiedFile</code> is an instance of a File object that refers to your new<br />  // file.<br />});</p><p>//-<br />// If you pass in a File object, you have complete control over the new<br />// bucket and filename.<br />//-<br />var anotherFile = anotherBucket.file(&#39;my-awesome-image.png&#39;);<br />file.copy(anotherFile, function(err, copiedFile, apiResponse) {<br />  // <code>my-bucket</code> still contains:<br />  // - &quot;my-image.png&quot;<br />  //<br />  // <code>another-bucket</code> now contains:<br />  // - &quot;my-awesome-image.png&quot;</p><p>  // Note:<br />  // The <code>copiedFile</code> parameter is equal to <code>anotherFile</code>.<br />});</p>"}],"description":{"full":"<p>Copy this file to another file. By default, this will copy the file to the<br />same bucket, but you can choose to copy it to another Bucket by providing<br />either a Bucket or File object.</p>","summary":"<p>Copy this file to another file. By default, this will copy the file to the<br />same bucket, but you can choose to copy it to another Bucket by providing<br />either a Bucket or File object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":126,"codeStart":197,"code":"File.prototype.copy = function(destination, callback) {\n  var noDestinationError = new Error('Destination file should have a name.');\n\n  if (!destination) {\n    throw noDestinationError;\n  }\n\n  callback = callback || util.noop;\n\n  var destBucket;\n  var destName;\n  var newFile;\n\n  if (is.string(destination)) {\n    destBucket = this.bucket;\n    destName = destination;\n  } else if (destination.constructor &&\n        destination.constructor.name === 'Bucket') {\n    destBucket = destination;\n    destName = this.name;\n  } else if (destination instanceof File) {\n    destBucket = destination.bucket;\n    destName = destination.name;\n    newFile = destination;\n  } else {\n    throw noDestinationError;\n  }\n\n  var path = format('/o/{srcName}/copyTo/b/{destBucket}/o/{destName}', {\n    srcName: encodeURIComponent(this.name),\n    destBucket: destBucket.name,\n    destName: encodeURIComponent(destName)\n  });\n\n  var query = {};\n\n  if (this.generation) {\n    query.sourceGeneration = this.generation;\n  }\n\n  this.makeReq_('POST', path, query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, newFile || destBucket.file(destName), resp);\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"copy","string":"File.prototype.copy()"}},{"tags":[{"type":"resource","string":"[Objects: copy API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/copy} ","html":"<p>[Objects: copy API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/copy}\">https://cloud.google.com/storage/docs/json_api/v1/objects/copy}</a> </p>"},{"type":"throws","string":"{Error} If the destination file is not provided.\n","types":["Error"],"description":"<p>If the destination file is not provided. </p>"},{"type":"param","string":"{string|module:storage/bucket|module:storage/file} destination -\n    Destination file.","name":"destination","description":"<ul>\n<li>Destination file.</li>\n</ul>\n","types":["string","module:storage/bucket","module:storage/file"],"typesDescription":"<code>string</code>|module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>|module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/file} callback.destinationFile - The destination File.","name":"callback.destinationFile","description":"<ul>\n<li>The destination File.</li>\n</ul>\n","types":["module:storage/file"],"typesDescription":"module:<a href=\"module%3Astorage%2Ffile.html\">storage/file</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// You can pass in a variety of types for the destination.\n//\n// For all of the below examples, assume we are working with the following\n// Bucket and File objects.\n//-\nvar bucket = gcs.bucket('my-bucket');\nvar file = bucket.file('my-image.png');\n\n//-\n// If you pass in a string for the destination, the file is moved to its\n// current bucket, under the new name provided.\n//-\nfile.move('my-image-new.png', function(err, destinationFile, apiResponse) {\n  // `my-bucket` no longer contains:\n  // - \"my-image.png\"\n  // but contains instead:\n  // - \"my-image-new.png\"\n\n  // `destinationFile` is an instance of a File object that refers to your\n  // new file.\n});\n\n//-\n// If you pass in a Bucket object, the file will be moved to that bucket\n// using the same name.\n//-\nvar anotherBucket = gcs.bucket('another-bucket');\n\nfile.move(anotherBucket, function(err, destinationFile, apiResponse) {\n  // `my-bucket` no longer contains:\n  // - \"my-image.png\"\n  //\n  // `another-bucket` now contains:\n  // - \"my-image.png\"\n\n  // `destinationFile` is an instance of a File object that refers to your\n  // new file.\n});\n\n//-\n// If you pass in a File object, you have complete control over the new\n// bucket and filename.\n//-\nvar anotherFile = anotherBucket.file('my-awesome-image.png');\n\nfile.move(anotherFile, function(err, destinationFile, apiResponse) {\n  // `my-bucket` no longer contains:\n  // - \"my-image.png\"\n  //\n  // `another-bucket` now contains:\n  // - \"my-awesome-image.png\"\n\n  // Note:\n  // The `destinationFile` parameter is equal to `anotherFile`.\n});","html":"<p>//-<br />// You can pass in a variety of types for the destination.<br />//<br />// For all of the below examples, assume we are working with the following<br />// Bucket and File objects.<br />//-<br />var bucket = gcs.bucket(&#39;my-bucket&#39;);<br />var file = bucket.file(&#39;my-image.png&#39;);</p><p>//-<br />// If you pass in a string for the destination, the file is moved to its<br />// current bucket, under the new name provided.<br />//-<br />file.move(&#39;my-image-new.png&#39;, function(err, destinationFile, apiResponse) {<br />  // <code>my-bucket</code> no longer contains:<br />  // - &quot;my-image.png&quot;<br />  // but contains instead:<br />  // - &quot;my-image-new.png&quot;</p><p>  // <code>destinationFile</code> is an instance of a File object that refers to your<br />  // new file.<br />});</p><p>//-<br />// If you pass in a Bucket object, the file will be moved to that bucket<br />// using the same name.<br />//-<br />var anotherBucket = gcs.bucket(&#39;another-bucket&#39;);</p><p>file.move(anotherBucket, function(err, destinationFile, apiResponse) {<br />  // <code>my-bucket</code> no longer contains:<br />  // - &quot;my-image.png&quot;<br />  //<br />  // <code>another-bucket</code> now contains:<br />  // - &quot;my-image.png&quot;</p><p>  // <code>destinationFile</code> is an instance of a File object that refers to your<br />  // new file.<br />});</p><p>//-<br />// If you pass in a File object, you have complete control over the new<br />// bucket and filename.<br />//-<br />var anotherFile = anotherBucket.file(&#39;my-awesome-image.png&#39;);</p><p>file.move(anotherFile, function(err, destinationFile, apiResponse) {<br />  // <code>my-bucket</code> no longer contains:<br />  // - &quot;my-image.png&quot;<br />  //<br />  // <code>another-bucket</code> now contains:<br />  // - &quot;my-awesome-image.png&quot;</p><p>  // Note:<br />  // The <code>destinationFile</code> parameter is equal to <code>anotherFile</code>.<br />});</p>"}],"description":{"full":"<p>Move this file to another location. By default, this will move the file to<br />the same bucket, but you can choose to move it to another Bucket by providing<br />either a Bucket or File object.</p><p><strong>Warning</strong>:<br />There is currently no atomic <code>move</code> method in the Google Cloud Storage API,<br />so this method is a composition of {module:storage/file#copy} (to the new<br />location) and {module:storage/file#delete} (from the old location). While<br />unlikely, it is possible that an error returned to your callback could be<br />triggered from either one of these API calls failing, which could leave a<br />duplicate file lingering.</p>","summary":"<p>Move this file to another location. By default, this will move the file to<br />the same bucket, but you can choose to move it to another Bucket by providing<br />either a Bucket or File object.</p>","body":"<p><strong>Warning</strong>:<br />There is currently no atomic <code>move</code> method in the Google Cloud Storage API,<br />so this method is a composition of {module:storage/file#copy} (to the new<br />location) and {module:storage/file#delete} (from the old location). While<br />unlikely, it is possible that an error returned to your callback could be<br />triggered from either one of these API calls failing, which could leave a<br />duplicate file lingering.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":247,"codeStart":329,"code":"File.prototype.move = function(destination, callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.copy(destination, function(err, destinationFile, apiResponse) {\n    if (err) {\n      callback(err, null, apiResponse);\n      return;\n    }\n\n    self.delete(function(err, apiResponse) {\n      callback(err, destinationFile, apiResponse);\n    });\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"move","string":"File.prototype.move()"}},{"tags":[{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|boolean} options.validation - Possible values: `\"md5\"`,\n    `\"crc32c\"`, or `false`. By default, data integrity is validated with an\n    MD5 checksum for maximum reliability, falling back to CRC32c when an MD5\n    hash wasn't returned from the API. CRC32c will provide better performance\n    with less reliability. You may also choose to skip validation completely,\n    however this is **not recommended**.","name":"options.validation","description":"<ul>\n<li>Possible values: <code>&quot;md5&quot;</code>,     <code>&quot;crc32c&quot;</code>, or <code>false</code>. By default, data integrity is validated with an<br />  MD5 checksum for maximum reliability, falling back to CRC32c when an MD5<br />  hash wasn&#39;t returned from the API. CRC32c will provide better performance<br />  with less reliability. You may also choose to skip validation completely,<br />  however this is <strong>not recommended</strong>.</li>\n</ul>\n","types":["string","boolean"],"typesDescription":"<code>string</code>|<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.start - A byte offset to begin the file's download\n    from. Default is 0. NOTE: Byte ranges are inclusive; that is,\n    `options.start = 0` and `options.end = 999` represent the first 1000\n    bytes in a file or object. NOTE: when specifying a byte range, data\n    integrity is not available.","name":"options.start","description":"<ul>\n<li>A byte offset to begin the file&#39;s download     from. Default is 0. NOTE: Byte ranges are inclusive; that is,<br />  <code>options.start = 0</code> and <code>options.end = 999</code> represent the first 1000<br />  bytes in a file or object. NOTE: when specifying a byte range, data<br />  integrity is not available.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.end - A byte offset to stop reading the file at.\n    NOTE: Byte ranges are inclusive; that is, `options.start = 0` and\n    `options.end = 999` represent the first 1000 bytes in a file or object.\n    NOTE: when specifying a byte range, data integrity is not available.\n","name":"options.end","description":"<ul>\n<li>A byte offset to stop reading the file at.     NOTE: Byte ranges are inclusive; that is, <code>options.start = 0</code> and<br />  <code>options.end = 999</code> represent the first 1000 bytes in a file or object.<br />  NOTE: when specifying a byte range, data integrity is not available.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// <h4>Downloading a File</h4>\n//\n// The example below demonstrates how we can reference a remote file, then\n// pipe its contents to a local file. This is effectively creating a local\n// backup of your remote data.\n//-\nvar fs = require('fs');\nvar myBucket = gcs.bucket('my-bucket');\nvar remoteFile = myBucket.file('image.png');\nvar localFilename = '/Users/stephen/Photos/image.png';\n\nremoteFile.createReadStream()\n  .on('error', function(err) {})\n  .on('response', function(response) {\n    // Server connected and responded with the specified status and headers.\n   })\n  .on('end', function() {\n    // The file is fully downloaded.\n  })\n  .pipe(fs.createWriteStream(localFilename));\n\n//-\n// To limit the downloaded data to only a byte range, pass an options object.\n//-\nvar logFile = myBucket.file('access_log');\nlogFile.createReadStream({\n    start: 10000,\n    end: 20000\n  })\n  .on('error', function(err) {})\n  .pipe(fs.createWriteStream('/Users/stephen/logfile.txt'));\n\n//-\n// To read a tail byte range, specify only `options.end` as a negative\n// number.\n//-\nvar logFile = myBucket.file('access_log');\nlogFile.createReadStream({\n    end: -100\n  })\n  .on('error', function(err) {})\n  .pipe(fs.createWriteStream('/Users/stephen/logfile.txt'));","html":"<p>//-<br />// <h4>Downloading a File</h4><br />//<br />// The example below demonstrates how we can reference a remote file, then<br />// pipe its contents to a local file. This is effectively creating a local<br />// backup of your remote data.<br />//-<br />var fs = require(&#39;fs&#39;);<br />var myBucket = gcs.bucket(&#39;my-bucket&#39;);<br />var remoteFile = myBucket.file(&#39;image.png&#39;);<br />var localFilename = &#39;/Users/stephen/Photos/image.png&#39;;</p><p>remoteFile.createReadStream()<br />  .on(&#39;error&#39;, function(err) {})<br />  .on(&#39;response&#39;, function(response) {<br />    // Server connected and responded with the specified status and headers.<br />   })<br />  .on(&#39;end&#39;, function() {<br />    // The file is fully downloaded.<br />  })<br />  .pipe(fs.createWriteStream(localFilename));</p><p>//-<br />// To limit the downloaded data to only a byte range, pass an options object.<br />//-<br />var logFile = myBucket.file(&#39;access_log&#39;);<br />logFile.createReadStream({<br />    start: 10000,<br />    end: 20000<br />  })<br />  .on(&#39;error&#39;, function(err) {})<br />  .pipe(fs.createWriteStream(&#39;/Users/stephen/logfile.txt&#39;));</p><p>//-<br />// To read a tail byte range, specify only <code>options.end</code> as a negative<br />// number.<br />//-<br />var logFile = myBucket.file(&#39;access_log&#39;);<br />logFile.createReadStream({<br />    end: -100<br />  })<br />  .on(&#39;error&#39;, function(err) {})<br />  .pipe(fs.createWriteStream(&#39;/Users/stephen/logfile.txt&#39;));</p>"}],"description":{"full":"<p>Create a readable stream to read the contents of the remote file. It can be<br />piped to a writable stream or listened to for &#39;data&#39; events to read a file&#39;s<br />contents.</p><p>In the unlikely event there is a mismatch between what you downloaded and the<br />version in your Bucket, your error handler will receive an error with code<br />&quot;CONTENT_DOWNLOAD_MISMATCH&quot;. If you receive this error, the best recourse is<br />to try downloading the file again.</p><p>NOTE: Readable streams will emit the <code>complete</code> event when the file is fully<br />downloaded.</p>","summary":"<p>Create a readable stream to read the contents of the remote file. It can be<br />piped to a writable stream or listened to for &#39;data&#39; events to read a file&#39;s<br />contents.</p>","body":"<p>In the unlikely event there is a mismatch between what you downloaded and the<br />version in your Bucket, your error handler will receive an error with code<br />&quot;CONTENT_DOWNLOAD_MISMATCH&quot;. If you receive this error, the best recourse is<br />to try downloading the file again.</p><p>NOTE: Readable streams will emit the <code>complete</code> event when the file is fully<br />downloaded.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":346,"codeStart":421,"code":"File.prototype.createReadStream = function(options) {\n  options = options || {};\n\n  var self = this;\n  var rangeRequest = is.number(options.start) || is.number(options.end);\n  var tailRequest = options.end < 0;\n  var throughStream = streamEvents(through());\n\n  var crc32c = options.validation !== false;\n  var md5 = options.validation !== false;\n\n  if (is.string(options.validation)) {\n    options.validation = options.validation.toLowerCase();\n    crc32c = options.validation === 'crc32c';\n    md5 = options.validation === 'md5';\n  }\n\n  if (rangeRequest) {\n    if (is.string(options.validation) || options.validation === true) {\n      throw new Error('Cannot use validation with file ranges (start/end).');\n    }\n    // Range requests can't receive data integrity checks.\n    crc32c = false;\n    md5 = false;\n  }\n\n  // Authenticate the request, then pipe the remote API request to the stream\n  // returned to the user.\n  function makeRequest() {\n    var reqOpts = {\n      uri: format('https://storage.googleapis.com/{b}/{o}', {\n        b: self.bucket.name,\n        o: encodeURIComponent(self.name)\n      }),\n      gzip: true\n    };\n\n    if (self.generation) {\n      reqOpts.qs = {\n        generation: self.generation\n      };\n    }\n\n    if (rangeRequest) {\n      var start = is.number(options.start) ? options.start : '0';\n      var end = is.number(options.end) ? options.end : '';\n\n      reqOpts.headers = {\n        Range: 'bytes=' + (tailRequest ? end : start + '-' + end)\n      };\n    }\n\n    var requestStream = self.bucket.storage.makeAuthorizedRequest_(reqOpts);\n    var validateStream;\n\n    // We listen to the response event from the request stream so that we can...\n    //\n    //   1) Intercept any data from going to the user if an error occurred.\n    //   2) Calculate the hashes from the http.IncomingMessage response stream,\n    //      which will return the bytes from the source without decompressing\n    //      gzip'd content. The request stream will do the decompression so the\n    //      user receives the expected content.\n    function onResponse(err, body, res) {\n      if (err) {\n        requestStream.unpipe(throughStream);\n        return;\n      }\n\n      if (!rangeRequest) {\n        validateStream = hashStreamValidation({\n          crc32c: crc32c,\n          md5: md5\n        });\n\n        res.pipe(validateStream).on('data', util.noop);\n      }\n    }\n\n    // This is hooked to the `complete` event from the request stream. This is\n    // our chance to validate the data and let the user know if anything went\n    // wrong.\n    function onComplete(err, body, res) {\n      if (err) {\n        throughStream.destroy(err);\n        return;\n      }\n\n      if (rangeRequest) {\n        return;\n      }\n\n      var hashes = {};\n      res.headers['x-goog-hash'].split(',').forEach(function(hash) {\n        var hashType = hash.split('=')[0].trim();\n        hashes[hashType] = hash.substr(hash.indexOf('=') + 1);\n      });\n\n      var failed = true;\n\n      if (crc32c && hashes.crc32c) {\n        // We must remove the first four bytes from the returned checksum.\n        // http://stackoverflow.com/questions/25096737/\n        //   base64-encoding-of-crc32c-long-value\n        failed = !validateStream.test('crc32c', hashes.crc32c.substr(4));\n      }\n\n      if (md5 && hashes.md5) {\n        failed = !validateStream.test('md5', hashes.md5);\n      }\n\n      if (failed) {\n        var mismatchError = new Error([\n          'The downloaded data did not match the data from the server.',\n          'To be sure the content is the same, you should download the',\n          'file again.'\n        ].join(' '));\n        mismatchError.code = 'CONTENT_DOWNLOAD_MISMATCH';\n\n        throughStream.destroy(mismatchError);\n      }\n    }\n\n    requestStream\n      .on('error', function(err) {\n        throughStream.destroy(err);\n      })\n      .on('response', function(res) {\n        throughStream.emit('response', res);\n        util.handleResp(null, res, null, onResponse);\n      })\n      .on('complete', function(res) {\n        util.handleResp(null, res, null, onComplete);\n      })\n      .pipe(throughStream)\n      .on('error', function() {\n        requestStream.abort();\n        requestStream.destroy();\n      });\n  }\n\n  throughStream.on('reading', makeRequest);\n\n  return throughStream;\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"createReadStream","string":"File.prototype.createReadStream()"}},{"tags":[{"type":"resource","string":"[Upload Options (Simple or Resumable)]{@link https://cloud.google.com/storage/docs/json_api/v1/how-tos/upload#uploads}","html":"<p>[Upload Options (Simple or Resumable)]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/how-tos/upload#uploads}\">https://cloud.google.com/storage/docs/json_api/v1/how-tos/upload#uploads}</a></p>"},{"type":"resource","string":"[Objects: insert API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/insert} ","html":"<p>[Objects: insert API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/insert}\">https://cloud.google.com/storage/docs/json_api/v1/objects/insert}</a> </p>"},{"type":"param","string":"{object=} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.gzip - Automatically gzip the file. This will set\n    `options.metadata.contentEncoding` to `gzip`.","name":"options.gzip","description":"<ul>\n<li>Automatically gzip the file. This will set     <code>options.metadata.contentEncoding</code> to <code>gzip</code>.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} options.metadata - Set the metadata for this file.","name":"options.metadata","description":"<ul>\n<li>Set the metadata for this file.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.resumable - Force a resumable upload. NOTE: When\n    working with streams, the file format and size is unknown until it's\n    completely consumed. Because of this, it's best for you to be explicit\n    for what makes sense given your input.","name":"options.resumable","description":"<ul>\n<li>Force a resumable upload. NOTE: When     working with streams, the file format and size is unknown until it&#39;s<br />  completely consumed. Because of this, it&#39;s best for you to be explicit<br />  for what makes sense given your input.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|boolean} options.validation - Possible values: `\"md5\"`,\n    `\"crc32c\"`, or `false`. By default, data integrity is validated with an\n    MD5 checksum for maximum reliability. CRC32c will provide better\n    performance with less reliability. You may also choose to skip validation\n    completely, however this is **not recommended**.\n","name":"options.validation","description":"<ul>\n<li>Possible values: <code>&quot;md5&quot;</code>,     <code>&quot;crc32c&quot;</code>, or <code>false</code>. By default, data integrity is validated with an<br />  MD5 checksum for maximum reliability. CRC32c will provide better<br />  performance with less reliability. You may also choose to skip validation<br />  completely, however this is <strong>not recommended</strong>.</li>\n</ul>\n","types":["string","boolean"],"typesDescription":"<code>string</code>|<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// <h4>Uploading a File</h4>\n//\n// Now, consider a case where we want to upload a file to your bucket. You\n// have the option of using {module:storage/bucket#upload}, but that is just\n// a convenience method which will do the following.\n//-\nvar fs = require('fs');\nvar image = myBucket.file('image.png');\n\nfs.createReadStream('/Users/stephen/Photos/birthday-at-the-zoo/panda.jpg')\n  .pipe(image.createWriteStream())\n  .on('error', function(err) {})\n  .on('finish', function() {\n    // The file upload is complete.\n  });\n\n//-\n// <h4>Uploading a File with gzip compression</h4>\n//-\nvar fs = require('fs');\nvar htmlFile = myBucket.file('index.html');\n\nfs.createReadStream('/Users/stephen/site/index.html')\n  .pipe(htmlFile.createWriteStream({ gzip: true }))\n  .on('error', function(err) {})\n  .on('finish', function() {\n    // The file upload is complete.\n  });\n\n//-\n// Downloading the file with `createReadStream` will automatically decode the\n// file.\n//-\n\n//-\n// <h4>Uploading a File with Metadata</h4>\n//\n// One last case you may run into is when you want to upload a file to your\n// bucket and set its metadata at the same time. Like above, you can use\n// {module:storage/bucket#upload} to do this, which is just a wrapper around\n// the following.\n//-\nvar fs = require('fs');\nvar image = myBucket.file('image.png');\n\nfs.createReadStream('/Users/stephen/Photos/birthday-at-the-zoo/panda.jpg')\n  .pipe(image.createWriteStream({\n    metadata: {\n      contentType: 'image/jpeg',\n      metadata: {\n        custom: 'metadata'\n      }\n    }\n  }))\n  .on('error', function(err) {})\n  .on('finish', function() {\n    // The file upload is complete.\n  });","html":"<p>//-<br />// <h4>Uploading a File</h4><br />//<br />// Now, consider a case where we want to upload a file to your bucket. You<br />// have the option of using {module:storage/bucket#upload}, but that is just<br />// a convenience method which will do the following.<br />//-<br />var fs = require(&#39;fs&#39;);<br />var image = myBucket.file(&#39;image.png&#39;);</p><p>fs.createReadStream(&#39;/Users/stephen/Photos/birthday-at-the-zoo/panda.jpg&#39;)<br />  .pipe(image.createWriteStream())<br />  .on(&#39;error&#39;, function(err) {})<br />  .on(&#39;finish&#39;, function() {<br />    // The file upload is complete.<br />  });</p><p>//-<br />// <h4>Uploading a File with gzip compression</h4><br />//-<br />var fs = require(&#39;fs&#39;);<br />var htmlFile = myBucket.file(&#39;index.html&#39;);</p><p>fs.createReadStream(&#39;/Users/stephen/site/index.html&#39;)<br />  .pipe(htmlFile.createWriteStream({ gzip: true }))<br />  .on(&#39;error&#39;, function(err) {})<br />  .on(&#39;finish&#39;, function() {<br />    // The file upload is complete.<br />  });</p><p>//-<br />// Downloading the file with <code>createReadStream</code> will automatically decode the<br />// file.<br />//-</p><p>//-<br />// <h4>Uploading a File with Metadata</h4><br />//<br />// One last case you may run into is when you want to upload a file to your<br />// bucket and set its metadata at the same time. Like above, you can use<br />// {module:storage/bucket#upload} to do this, which is just a wrapper around<br />// the following.<br />//-<br />var fs = require(&#39;fs&#39;);<br />var image = myBucket.file(&#39;image.png&#39;);</p><p>fs.createReadStream(&#39;/Users/stephen/Photos/birthday-at-the-zoo/panda.jpg&#39;)<br />  .pipe(image.createWriteStream({<br />    metadata: {<br />      contentType: &#39;image/jpeg&#39;,<br />      metadata: {<br />        custom: &#39;metadata&#39;<br />      }<br />    }<br />  }))<br />  .on(&#39;error&#39;, function(err) {})<br />  .on(&#39;finish&#39;, function() {<br />    // The file upload is complete.<br />  });</p>"}],"description":{"full":"<p>Create a writable stream to overwrite the contents of the file in your<br />bucket.</p><p>A File object can also be used to create files for the first time.</p><p>Resumable uploads are automatically enabled and must be shut off explicitly<br />by setting <code>options.resumable</code> to <code>false</code>.</p><p>NOTE: Writable streams will emit the <code>complete</code> event when the file is fully<br />uploaded.</p>","summary":"<p>Create a writable stream to overwrite the contents of the file in your<br />bucket.</p>","body":"<p>A File object can also be used to create files for the first time.</p><p>Resumable uploads are automatically enabled and must be shut off explicitly<br />by setting <code>options.resumable</code> to <code>false</code>.</p><p>NOTE: Writable streams will emit the <code>complete</code> event when the file is fully<br />uploaded.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":566,"codeStart":656,"code":"File.prototype.createWriteStream = function(options) {\n  options = options || {};\n\n  var self = this;\n\n  var gzip = options.gzip;\n\n  var metadata = options.metadata || {};\n  if (gzip) {\n    metadata.contentEncoding = 'gzip';\n  }\n\n  var crc32c = options.validation !== false;\n  var md5 = options.validation !== false;\n\n  if (is.string(options.validation)) {\n    options.validation = options.validation.toLowerCase();\n    crc32c = options.validation === 'crc32c';\n    md5 = options.validation === 'md5';\n  }\n\n  // Collect data as it comes in to store in a hash. This is compared to the\n  // checksum value on the returned metadata from the API.\n  var validateStream = hashStreamValidation({\n    crc32c: crc32c,\n    md5: md5\n  });\n\n  var fileWriteStream = duplexify();\n\n  var stream = streamEvents(pumpify([\n    gzip ? zlib.createGzip() : through(),\n    validateStream,\n    fileWriteStream\n  ]));\n\n  // Wait until we've received data to determine what upload technique to use.\n  stream.on('writing', function() {\n    if (options.resumable === false) {\n      self.startSimpleUpload_(fileWriteStream, metadata);\n    } else {\n      self.startResumableUpload_(fileWriteStream, metadata);\n    }\n  });\n\n  // This is to preserve the `finish` event. We wait until the request stream\n  // emits \"complete\", as that is when we do validation of the data. After that\n  // is successful, we can allow the stream to naturally finish.\n  //\n  // Reference for tracking when we can use a non-hack solution:\n  // https://github.com/nodejs/node/pull/2314\n  fileWriteStream.on('prefinish', function() {\n    stream.cork();\n  });\n\n  // Compare our hashed version vs the completed upload's version.\n  fileWriteStream.on('complete', function() {\n    var metadata = self.metadata;\n    var failed = true;\n\n    if (crc32c && metadata.crc32c) {\n      // We must remove the first four bytes from the returned checksum.\n      // http://stackoverflow.com/questions/25096737/\n      //   base64-encoding-of-crc32c-long-value\n      failed = !validateStream.test('crc32c', metadata.crc32c.substr(4));\n    }\n\n    if (md5 && metadata.md5Hash) {\n      failed = !validateStream.test('md5', metadata.md5Hash);\n    }\n\n    if (failed) {\n      self.delete(function(err) {\n        var code;\n        var message;\n\n        if (err) {\n          code = 'FILE_NO_UPLOAD_DELETE';\n          message = [\n            'The uploaded data did not match the data from the server. As a',\n            'precaution, we attempted to delete the file, but it was not',\n            'successful. To be sure the content is the same, you should try',\n            'removing the file manually, then uploading the file again.',\n            '\\n\\nThe delete attempt failed with this message:',\n            '\\n\\n  ' + err.message\n          ].join(' ');\n        } else {\n          code = 'FILE_NO_UPLOAD';\n          message = [\n            'The uploaded data did not match the data from the server. As a',\n            'precaution, the file has been deleted. To be sure the content',\n            'is the same, you should try uploading the file again.'\n          ].join(' ');\n        }\n\n        var error = new Error(message);\n        error.code = code;\n        error.errors = [err];\n\n        fileWriteStream.destroy(error);\n      });\n\n      return;\n    }\n\n    stream.uncork();\n  });\n\n  return stream;\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"createWriteStream","string":"File.prototype.createWriteStream()"}},{"tags":[{"type":"resource","string":"[Objects: delete API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/delete} ","html":"<p>[Objects: delete API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/delete}\">https://cloud.google.com/storage/docs/json_api/v1/objects/delete}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"file.delete(function(err, apiResponse) {});","html":"<p>file.delete(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Delete the file.</p>","summary":"<p>Delete the file.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":767,"codeStart":779,"code":"File.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n\n  var path = '/o/' + encodeURIComponent(this.name);\n\n  var query = {};\n\n  if (this.generation) {\n    query.generation = this.generation;\n  }\n\n  this.makeReq_('DELETE', path, query, null, function(err, resp) {\n    if (err) {\n      callback(err, resp);\n      return;\n    }\n\n    callback(null, resp);\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"delete","string":"File.prototype.delete()"}},{"tags":[{"type":"param","string":"{object=} options - Optional configuration. The arguments match those\n    passed to {module:storage/file#createReadStream}.","name":"options","description":"<ul>\n<li>Optional configuration. The arguments match those     passed to {module:storage/file#createReadStream}.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.destination - Local file path to write the file's\n    contents to.","name":"options.destination","description":"<ul>\n<li>Local file path to write the file&#39;s     contents to.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{buffer} callback.contents - The contents of a File.\n","name":"callback.contents","description":"<ul>\n<li>The contents of a File. </li>\n</ul>\n","types":["buffer"],"typesDescription":"<a href=\"buffer.html\">buffer</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// Download a file into memory. The contents will be available as the second\n// argument in the demonstration below, `contents`.\n//-\nfile.download(function(err, contents) {});\n\n//-\n// Download a file to a local destination.\n//-\nfile.download({\n  destination: '/Users/stephen/Desktop/file-backup.txt'\n}, function(err) {});","html":"<p>//-<br />// Download a file into memory. The contents will be available as the second<br />// argument in the demonstration below, <code>contents</code>.<br />//-<br />file.download(function(err, contents) {});</p><p>//-<br />// Download a file to a local destination.<br />//-<br />file.download({<br />  destination: &#39;/Users/stephen/Desktop/file-backup.txt&#39;<br />}, function(err) {});</p>"}],"description":{"full":"<p>Convenience method to download a file into memory or to a local destination.</p>","summary":"<p>Convenience method to download a file into memory or to a local destination.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":800,"codeStart":825,"code":"File.prototype.download = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  callback = once(callback);\n\n  var destination = options.destination;\n  delete options.destination;\n\n  var fileStream = this.createReadStream(options);\n\n  if (destination) {\n    fileStream\n      .on('error', callback)\n      .pipe(fs.createWriteStream(destination))\n      .on('error', callback)\n      .on('finish', callback);\n  } else {\n    fileStream\n      .on('error', callback)\n      .pipe(concat(callback.bind(null, null)));\n  }\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"download","string":"File.prototype.download()"}},{"tags":[{"type":"resource","string":"[Objects: get API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/get} ","html":"<p>[Objects: get API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/get}\">https://cloud.google.com/storage/docs/json_api/v1/objects/get}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The File's metadata.","name":"callback.metadata","description":"<ul>\n<li>The File&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"file.getMetadata(function(err, metadata, apiResponse) {});","html":"<p>file.getMetadata(function(err, metadata, apiResponse) {});</p>"}],"description":{"full":"<p>Get the file&#39;s metadata.</p>","summary":"<p>Get the file&#39;s metadata.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":851,"codeStart":864,"code":"File.prototype.getMetadata = function(callback) {\n  var self = this;\n  callback = callback || util.noop;\n\n  var path = '/o/' + encodeURIComponent(this.name);\n\n  var query = {};\n\n  if (this.generation) {\n    query.generation = this.generation;\n  }\n\n  this.makeReq_('GET', path, query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n    callback(null, self.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"getMetadata","string":"File.prototype.getMetadata()"}},{"tags":[{"type":"resource","string":"[Policy Document Reference]{@link https://cloud.google.com/storage/docs/reference-methods#policydocument} ","html":"<p>[Policy Document Reference]{@link <a href=\"https://cloud.google.com/storage/docs/reference-methods#policydocument}\">https://cloud.google.com/storage/docs/reference-methods#policydocument}</a> </p>"},{"type":"throws","string":"{Error} If an expiration timestamp from the past is given.","types":["Error"],"description":"<p>If an expiration timestamp from the past is given.</p>"},{"type":"throws","string":"{Error} If options.equals has an array with less or more than two\n    members.","types":["Error"],"description":"<p>If options.equals has an array with less or more than two     members.</p>"},{"type":"throws","string":"{Error} If options.startsWith has an array with less or more than two\n    members.\n","types":["Error"],"description":"<p>If options.startsWith has an array with less or more than two     members.</p>"},{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} options.expiration - Timestamp (seconds since epoch) when\n    this policy will expire.","name":"options.expiration","description":"<ul>\n<li>Timestamp (seconds since epoch) when     this policy will expire.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{array|array[]=} options.equals - Array of request parameters and\n    their expected value (e.g. [['$<field>', '<value>']]). Values are\n    translated into equality constraints in the conditions field of the\n    policy document (e.g. ['eq', '$<field>', '<value>']). If only one\n    equality condition is to be specified, options.equals can be a one-\n    dimensional array (e.g. ['$<field>', '<value>']).","name":"options.equals","description":"<ul>\n<li>Array of request parameters and     their expected value (e.g. [[&#39;$<field>&#39;, &#39;<value>&#39;]]). Values are<br />  translated into equality constraints in the conditions field of the<br />  policy document (e.g. [&#39;eq&#39;, &#39;$<field>&#39;, &#39;<value>&#39;]). If only one<br />  equality condition is to be specified, options.equals can be a one-<br />  dimensional array (e.g. [&#39;$<field>&#39;, &#39;<value>&#39;]).</li>\n</ul>\n","types":["array","Array.<array>"],"typesDescription":"<code>array</code>|<code>Array</code>.&lt;<code>array</code>&gt;|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{array|array[]=} options.startsWith - Array of request parameters and\n    their expected prefixes (e.g. [['$<field>', '<value>']). Values are\n    translated into starts-with constraints in the conditions field of the\n    policy document (e.g. ['starts-with', '$<field>', '<value>']). If only\n    one prefix condition is to be specified, options.startsWith can be a one-\n    dimensional array (e.g. ['$<field>', '<value>']).","name":"options.startsWith","description":"<ul>\n<li>Array of request parameters and     their expected prefixes (e.g. [[&#39;$<field>&#39;, &#39;<value>&#39;]). Values are<br />  translated into starts-with constraints in the conditions field of the<br />  policy document (e.g. [&#39;starts-with&#39;, &#39;$<field>&#39;, &#39;<value>&#39;]). If only<br />  one prefix condition is to be specified, options.startsWith can be a one-<br />  dimensional array (e.g. [&#39;$<field>&#39;, &#39;<value>&#39;]).</li>\n</ul>\n","types":["array","Array.<array>"],"typesDescription":"<code>array</code>|<code>Array</code>.&lt;<code>array</code>&gt;|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.acl - ACL for the object from possibly predefined\n    ACLs.","name":"options.acl","description":"<ul>\n<li>ACL for the object from possibly predefined     ACLs.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.successRedirect - The URL to which the user client\n    is redirected if the upload is successful.","name":"options.successRedirect","description":"<ul>\n<li>The URL to which the user client     is redirected if the upload is successful.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.successStatus - The status of the Google Storage\n    response if the upload is successful (must be string).","name":"options.successStatus","description":"<ul>\n<li>The status of the Google Storage     response if the upload is successful (must be string).</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} options.contentLengthRange","name":"options.contentLengthRange","description":"","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{object=} options.contentLengthRange</p>"},{"type":"param","string":"{number} options.contentLengthRange.min - Minimum value for the\n    request's content length.","name":"options.contentLengthRange.min","description":"<ul>\n<li>Minimum value for the     request&#39;s content length.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.contentLengthRange.max - Maximum value for the\n    request's content length.","name":"options.contentLengthRange.max","description":"<ul>\n<li>Maximum value for the     request&#39;s content length.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.policy - The document policy.\n","name":"callback.policy","description":"<ul>\n<li>The document policy. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"file.getSignedPolicy({\n  equals: ['$Content-Type', 'image/jpeg'],\n  contentLengthRange: { min: 0, max: 1024 },\n  expiration: Math.round(Date.now() / 1000) + (60 * 60 * 24 * 14) // 2 weeks.\n}, function(err, policy) {\n  // policy.string: the policy document in plain text.\n  // policy.base64: the policy document in base64.\n  // policy.signature: the policy signature in base64.\n});","html":"<p>file.getSignedPolicy({<br />  equals: [&#39;$Content-Type&#39;, &#39;image/jpeg&#39;],<br />  contentLengthRange: { min: 0, max: 1024 },<br />  expiration: Math.round(Date.now() / 1000) + (60 <em> 60 </em> 24 * 14) // 2 weeks.<br />}, function(err, policy) {<br />  // policy.string: the policy document in plain text.<br />  // policy.base64: the policy document in base64.<br />  // policy.signature: the policy signature in base64.<br />});</p>"}],"description":{"full":"<p>Get a signed policy document to allow a user to upload data with a POST<br />request.</p>","summary":"<p>Get a signed policy document to allow a user to upload data with a POST<br />request.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":887,"codeStart":940,"code":"File.prototype.getSignedPolicy = function(options, callback) {\n  if (options.expiration < Math.floor(Date.now() / 1000)) {\n    throw new Error('An expiration date cannot be in the past.');\n  }\n\n  var expirationString = new Date(options.expiration).toISOString();\n  var conditions = [\n    ['eq', '$key', this.name],\n    {\n      bucket: this.bucket.name\n    }\n  ];\n\n  if (is.array(options.equals)) {\n    if (!is.array(options.equals[0])) {\n      options.equals = [options.equals];\n    }\n    options.equals.forEach(function(condition) {\n      if (!is.array(condition) || condition.length !== 2) {\n        throw new Error('Equals condition must be an array of 2 elements.');\n      }\n      conditions.push(['eq', condition[0], condition[1]]);\n    });\n  }\n\n  if (is.array(options.startsWith)) {\n    if (!is.array(options.startsWith[0])) {\n      options.startsWith = [options.startsWith];\n    }\n    options.startsWith.forEach(function(condition) {\n      if (!is.array(condition) || condition.length !== 2) {\n        throw new Error('StartsWith condition must be an array of 2 elements.');\n      }\n      conditions.push(['starts-with', condition[0], condition[1]]);\n    });\n  }\n\n  if (options.acl) {\n    conditions.push({\n      acl: options.acl\n    });\n  }\n\n  if (options.successRedirect) {\n    conditions.push({\n      success_action_redirect: options.successRedirect\n    });\n  }\n\n  if (options.successStatus) {\n    conditions.push({\n      success_action_status: options.successStatus\n    });\n  }\n\n  if (options.contentLengthRange) {\n    var min = options.contentLengthRange.min;\n    var max = options.contentLengthRange.max;\n    if (!is.number(min) || !is.number(max)) {\n      throw new Error('ContentLengthRange must have numeric min & max fields.');\n    }\n    conditions.push(['content-length-range', min, max]);\n  }\n\n  var policy = {\n    expiration: expirationString,\n    conditions: conditions\n  };\n\n  var makeAuthorizedRequest_ = this.bucket.storage.makeAuthorizedRequest_;\n\n  makeAuthorizedRequest_.getCredentials(function(err, credentials) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    var sign = crypto.createSign('RSA-SHA256');\n    var policyString = JSON.stringify(policy);\n    var policyBase64 = new Buffer(policyString).toString('base64');\n\n    sign.update(policyBase64);\n\n    var signature = sign.sign(credentials.private_key, 'base64');\n\n    callback(null, {\n      string: policyString,\n      base64: policyBase64,\n      signature: signature\n    });\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"getSignedPolicy","string":"File.prototype.getSignedPolicy()"}},{"tags":[{"type":"resource","string":"[Signed URLs Reference]{@link https://cloud.google.com/storage/docs/access-control#Signed-URLs} ","html":"<p>[Signed URLs Reference]{@link <a href=\"https://cloud.google.com/storage/docs/access-control#Signed-URLs}\">https://cloud.google.com/storage/docs/access-control#Signed-URLs}</a> </p>"},{"type":"throws","string":"{Error} if an expiration timestamp from the past is given.\n","types":["Error"],"description":"<p>if an expiration timestamp from the past is given. </p>"},{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} options.action - \"read\", \"write\", or \"delete\"","name":"options.action","description":"<ul>\n<li>&quot;read&quot;, &quot;write&quot;, or &quot;delete&quot;</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.contentMd5 - The MD5 digest value in base64. If you\n    provide this, the client must provide this HTTP header with this same\n    value in its request.","name":"options.contentMd5","description":"<ul>\n<li>The MD5 digest value in base64. If you     provide this, the client must provide this HTTP header with this same<br />  value in its request.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.contentType - If you provide this value, the client\n    must provide this HTTP header set to the same value.","name":"options.contentType","description":"<ul>\n<li>If you provide this value, the client     must provide this HTTP header set to the same value.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} options.expires - Timestamp (seconds since epoch) when this\n    link will expire.","name":"options.expires","description":"<ul>\n<li>Timestamp (seconds since epoch) when this     link will expire.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.extensionHeaders - If these headers are used, the\n    server will check to make sure that the client provides matching values.","name":"options.extensionHeaders","description":"<ul>\n<li>If these headers are used, the     server will check to make sure that the client provides matching values.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.promptSaveAs - The filename to prompt the user to\n    save the file as when the signed url is accessed. This is ignored if\n    options.responseDisposition is set.","name":"options.promptSaveAs","description":"<ul>\n<li>The filename to prompt the user to     save the file as when the signed url is accessed. This is ignored if<br />  options.responseDisposition is set.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.responseDisposition - The\n    response-content-disposition parameter (http://goo.gl/yMWxQV) of the\n    signed url.","name":"options.responseDisposition","description":"<ul>\n<li>The     response-content-disposition parameter (<a href=\"http://goo.gl/yMWxQV\">http://goo.gl/yMWxQV</a>) of the<br />  signed url.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} options.responseType - The response-content-type parameter\n    of the signed url.","name":"options.responseType","description":"<ul>\n<li>The response-content-type parameter     of the signed url.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{string} callback.url - The signed URL.\n","name":"callback.url","description":"<ul>\n<li>The signed URL. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var TWO_WEEKS_MS = Math.round(Date.now() / 1000) + (60 * 60 * 24 * 14);\n\n//-\n// Generate a URL that allows temporary access to download your file.\n//-\nvar request = require('request');\n\nfile.getSignedUrl({\n  action: 'read',\n  expires: TWO_WEEKS_MS\n}, function(err, url) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // The file is now available to read from this URL.\n  request(url, function(err, resp) {\n    // resp.statusCode = 200\n  });\n});\n\n//-\n// Generate a URL to allow write permissions. This means anyone with this URL\n// can send a POST request with new data that will overwrite the file.\n//-\nfile.getSignedUrl({\n  action: 'write',\n  expires: TWO_WEEKS_MS\n}, function(err, url) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // The file is now available to be written to.\n  var writeStream = request.post(url);\n  writeStream.end('New data');\n\n  writeStream.on('complete', function(resp) {\n    // Confirm the new content was saved.\n    file.download(function(err, fileContents) {\n      console.log('Contents:', fileContents.toString());\n      // Contents: New data\n    });\n  });\n});","html":"<p>var TWO_WEEKS_MS = Math.round(Date.now() / 1000) + (60 <em> 60 </em> 24 * 14);</p><p>//-<br />// Generate a URL that allows temporary access to download your file.<br />//-<br />var request = require(&#39;request&#39;);</p><p>file.getSignedUrl({<br />  action: &#39;read&#39;,<br />  expires: TWO_WEEKS_MS<br />}, function(err, url) {<br />  if (err) {<br />    console.error(err);<br />    return;<br />  }</p><p>  // The file is now available to read from this URL.<br />  request(url, function(err, resp) {<br />    // resp.statusCode = 200<br />  });<br />});</p><p>//-<br />// Generate a URL to allow write permissions. This means anyone with this URL<br />// can send a POST request with new data that will overwrite the file.<br />//-<br />file.getSignedUrl({<br />  action: &#39;write&#39;,<br />  expires: TWO_WEEKS_MS<br />}, function(err, url) {<br />  if (err) {<br />    console.error(err);<br />    return;<br />  }</p><p>  // The file is now available to be written to.<br />  var writeStream = request.post(url);<br />  writeStream.end(&#39;New data&#39;);</p><p>  writeStream.on(&#39;complete&#39;, function(resp) {<br />    // Confirm the new content was saved.<br />    file.download(function(err, fileContents) {<br />      console.log(&#39;Contents:&#39;, fileContents.toString());<br />      // Contents: New data<br />    });<br />  });<br />});</p>"}],"description":{"full":"<p>Get a signed URL to allow limited time access to the file.</p>","summary":"<p>Get a signed URL to allow limited time access to the file.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1033,"codeStart":1112,"code":"File.prototype.getSignedUrl = function(options, callback) {\n  if (options.expires < Math.floor(Date.now() / 1000)) {\n    throw new Error('An expiration date cannot be in the past.');\n  }\n\n  options.action = {\n    read: 'GET',\n    write: 'PUT',\n    delete: 'DELETE'\n  }[options.action];\n\n  var name = encodeURIComponent(this.name);\n\n  options.resource = '/' + this.bucket.name + '/' + name;\n\n  var makeAuthorizedRequest_ = this.bucket.storage.makeAuthorizedRequest_;\n\n  makeAuthorizedRequest_.getCredentials(function(err, credentials) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    var sign = crypto.createSign('RSA-SHA256');\n    sign.update([\n      options.action,\n      (options.contentMd5 || ''),\n      (options.contentType || ''),\n      options.expires,\n      (options.extensionHeaders || '') + options.resource\n    ].join('\\n'));\n    var signature = sign.sign(credentials.private_key, 'base64');\n\n    var responseContentType = '';\n    if (is.string(options.responseType)) {\n      responseContentType =\n        '&response-content-type=' +\n        encodeURIComponent(options.responseType);\n    }\n\n    var responseContentDisposition = '';\n    if (is.string(options.promptSaveAs)) {\n      responseContentDisposition =\n        '&response-content-disposition=attachment; filename=\"' +\n        encodeURIComponent(options.promptSaveAs) + '\"';\n    }\n    if (is.string(options.responseDisposition)) {\n      responseContentDisposition =\n        '&response-content-disposition=' +\n        encodeURIComponent(options.responseDisposition);\n    }\n\n    callback(null, [\n      'https://storage.googleapis.com' + options.resource,\n      '?GoogleAccessId=' + credentials.client_email,\n      '&Expires=' + options.expires,\n      '&Signature=' + encodeURIComponent(signature),\n      responseContentType,\n      responseContentDisposition\n    ].join(''));\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"getSignedUrl","string":"File.prototype.getSignedUrl()"}},{"tags":[{"type":"resource","string":"[Objects: patch API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/patch} ","html":"<p>[Objects: patch API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/patch}\">https://cloud.google.com/storage/docs/json_api/v1/objects/patch}</a> </p>"},{"type":"param","string":"{object} metadata - The metadata you wish to update.","name":"metadata","description":"<ul>\n<li>The metadata you wish to update.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.metadata - The File's metadata.","name":"callback.metadata","description":"<ul>\n<li>The File&#39;s metadata.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"file.setMetadata({\n  contentType: 'application/x-font-ttf',\n  metadata: {\n    my: 'custom',\n    properties: 'go here'\n  }\n}, function(err, metadata, apiResponse) {});\n\n// Assuming current metadata = { hello: 'world', unsetMe: 'will do' }\nfile.setMetadata({\n  metadata: {\n    abc: '123', // will be set.\n    unsetMe: null, // will be unset (deleted).\n    hello: 'goodbye' // will be updated from 'hello' to 'goodbye'.\n  }\n}, function(err, metadata, apiResponse) {\n  // metadata should now be { abc: '123', hello: 'goodbye' }\n});","html":"<p>file.setMetadata({<br />  contentType: &#39;application/x-font-ttf&#39;,<br />  metadata: {<br />    my: &#39;custom&#39;,<br />    properties: &#39;go here&#39;<br />  }<br />}, function(err, metadata, apiResponse) {});</p><p>// Assuming current metadata = { hello: &#39;world&#39;, unsetMe: &#39;will do&#39; }<br />file.setMetadata({<br />  metadata: {<br />    abc: &#39;123&#39;, // will be set.<br />    unsetMe: null, // will be unset (deleted).<br />    hello: &#39;goodbye&#39; // will be updated from &#39;hello&#39; to &#39;goodbye&#39;.<br />  }<br />}, function(err, metadata, apiResponse) {<br />  // metadata should now be { abc: &#39;123&#39;, hello: &#39;goodbye&#39; }<br />});</p>"}],"description":{"full":"<p>Merge the given metadata with the current remote file&#39;s metadata. This will<br />set metadata if it was previously unset or update previously set metadata. To<br />unset previously set metadata, set its value to null.</p><p>You can set custom key/value pairs in the metadata key of the given object,<br />however the other properties outside of this object must adhere to the<br /><a href=\"https://goo.gl/BOnnCK\">official API documentation</a>.</p><p>See the examples below for more information.</p>","summary":"<p>Merge the given metadata with the current remote file&#39;s metadata. This will<br />set metadata if it was previously unset or update previously set metadata. To<br />unset previously set metadata, set its value to null.</p>","body":"<p>You can set custom key/value pairs in the metadata key of the given object,<br />however the other properties outside of this object must adhere to the<br /><a href=\"https://goo.gl/BOnnCK\">official API documentation</a>.</p><p>See the examples below for more information.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1175,"codeStart":1214,"code":"File.prototype.setMetadata = function(metadata, callback) {\n  callback = callback || util.noop;\n\n  var that = this;\n  var path = '/o/' + encodeURIComponent(this.name);\n  var query = {};\n\n  if (this.generation) {\n    query.generation = this.generation;\n  }\n\n  this.makeReq_('PATCH', path, query, metadata, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null, that.metadata, resp);\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"setMetadata","string":"File.prototype.setMetadata()"}},{"tags":[{"type":"resource","string":"[Objects: patch API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objects/patch} ","html":"<p>[Objects: patch API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/patch}\">https://cloud.google.com/storage/docs/json_api/v1/objects/patch}</a> </p>"},{"type":"param","string":"{object=} options - The configuration object.","name":"options","description":"<ul>\n<li>The configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} options.strict - If true, set the file to be private to\n    only the owner user. Otherwise, it will be private to the project.","name":"options.strict","description":"<ul>\n<li>If true, set the file to be private to     only the owner user. Otherwise, it will be private to the project.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request\n","name":"callback.err","description":"<ul>\n<li>An error returned while making this request </li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"example","string":"\n//-\n// Set the file private so only project maintainers can see and modify it.\n//-\nfile.makePrivate(function(err) {});\n\n//-\n// Set the file private so only the owner can see and modify it.\n//-\nfile.makePrivate({ strict: true }, function(err) {});","html":"<p>//-<br />// Set the file private so only project maintainers can see and modify it.<br />//-<br />file.makePrivate(function(err) {});</p><p>//-<br />// Set the file private so only the owner can see and modify it.<br />//-<br />file.makePrivate({ strict: true }, function(err) {});</p>"}],"description":{"full":"<p>Make a file private to the project and remove all other permissions.<br />Set <code>options.strict</code> to true to make the file private to only the owner.</p>","summary":"<p>Make a file private to the project and remove all other permissions.<br />Set <code>options.strict</code> to true to make the file private to only the owner.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1237,"codeStart":1261,"code":"File.prototype.makePrivate = function(options, callback) {\n  var that = this;\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n  var path = '/o/' + encodeURIComponent(this.name);\n  var query = { predefinedAcl: options.strict ? 'private' : 'projectPrivate' };\n\n  // You aren't allowed to set both predefinedAcl & acl properties on a file, so\n  // acl must explicitly be nullified, destroying all previous acls on the file.\n  var metadata = { acl: null };\n\n  callback = callback || util.noop;\n\n  this.makeReq_('PATCH', path, query, metadata, function(err, resp) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    that.metadata = resp;\n\n    callback(null);\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"makePrivate","string":"File.prototype.makePrivate()"}},{"tags":[{"type":"resource","string":"[ObjectAccessControls: insert API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert} ","html":"<p>[ObjectAccessControls: insert API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert}\">https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert}</a> </p>"},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request.","name":"callback.err","description":"<ul>\n<li>An error returned while making this request.</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"file.makePublic(function(err, apiResponse) {});","html":"<p>file.makePublic(function(err, apiResponse) {});</p>"}],"description":{"full":"<p>Set a file to be publicly readable and maintain all previous permissions.</p>","summary":"<p>Set a file to be publicly readable and maintain all previous permissions.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1288,"codeStart":1300,"code":"File.prototype.makePublic = function(callback) {\n  callback = callback || util.noop;\n\n  this.acl.add({\n    entity: 'allUsers',\n    role: 'READER'\n  }, function(err, resp) {\n    callback(err, resp);\n  });\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"makePublic","string":"File.prototype.makePublic()"}},{"tags":[{"type":"param","string":"{Duplexify} stream - Duplexify stream of data to pipe to the file.","name":"stream","description":"<ul>\n<li>Duplexify stream of data to pipe to the file.</li>\n</ul>\n","types":["Duplexify"],"typesDescription":"<a href=\"Duplexify.html\">Duplexify</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} metadata - Optional metadata to set on the file.\n","name":"metadata","description":"<ul>\n<li>Optional metadata to set on the file. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>This creates a gcs-resumable-upload upload stream.</p>","summary":"<p>This creates a gcs-resumable-upload upload stream.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1311,"codeStart":1319,"code":"File.prototype.startResumableUpload_ = function(dup, metadata) {\n  var self = this;\n\n  var uploadStream = resumableUpload({\n    authClient: this.bucket.storage.makeAuthorizedRequest_.authClient,\n    bucket: this.bucket.name,\n    file: this.name,\n    generation: this.generation,\n    metadata: metadata || {}\n  });\n\n  uploadStream\n    .on('response', function(resp, metadata) {\n      if (metadata) {\n        self.metadata = metadata;\n      }\n    })\n    .on('finish', function() {\n      dup.emit('complete');\n    });\n\n  dup.setWritable(uploadStream);\n};","ctx":{"type":"method","constructor":"File","cons":"File","name":"startResumableUpload_","string":"File.prototype.startResumableUpload_()"}},{"tags":[{"type":"param","string":"{Duplexify} dup - Duplexify stream of data to pipe to the file.","name":"dup","description":"<ul>\n<li>Duplexify stream of data to pipe to the file.</li>\n</ul>\n","types":["Duplexify"],"typesDescription":"<a href=\"Duplexify.html\">Duplexify</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} metadata - Optional metadata to set on the file.\n","name":"metadata","description":"<ul>\n<li>Optional metadata to set on the file. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Takes a readable stream and pipes it to a remote file. Unlike<br /><code>startResumableUpload_</code>, which uses the resumable upload technique, this<br />method uses a simple upload (all or nothing).</p>","summary":"<p>Takes a readable stream and pipes it to a remote file. Unlike<br /><code>startResumableUpload_</code>, which uses the resumable upload technique, this<br />method uses a simple upload (all or nothing).</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1343,"codeStart":1353,"code":"File.prototype.startSimpleUpload_ = function(dup, metadata) {\n  var self = this;\n\n  var reqOpts = {\n    qs: {\n      name: self.name\n    },\n    uri: format('{base}/{bucket}/o', {\n      base: STORAGE_UPLOAD_BASE_URL,\n      bucket: self.bucket.name\n    })\n  };\n\n  if (this.generation) {\n    reqOpts.qs.ifGenerationMatch = this.generation;\n  }\n\n  util.makeWritableStream(dup, {\n    makeAuthorizedRequest: self.bucket.storage.makeAuthorizedRequest_,\n    metadata: metadata,\n    request: reqOpts\n  }, function(data) {\n    self.metadata = data;\n    dup.emit('complete');\n  });\n};\n\nmodule.exports = File;","ctx":{"type":"method","constructor":"File","cons":"File","name":"startSimpleUpload_","string":"File.prototype.startSimpleUpload_()"}}],"storage":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"storage","html":"<p>storage</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');","ctx":false},{"tags":[{"type":"type","string":"{module:storage/bucket}","types":["module:storage/bucket"],"typesDescription":"module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:storage/bucket}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":25,"codeStart":29,"code":"var Bucket = require('./bucket.js');","ctx":{"type":"declaration","name":"Bucket","value":"require('./bucket.js')","string":"Bucket"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":31,"codeStart":35,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":37,"codeStart":41,"code":"var util = require('../common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('../common/util.js')","string":"util"}},{"tags":[{"type":"const","string":"{array}","html":"<p>{array}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Required scopes for Google Cloud Storage API.</p>","summary":"<p>Required scopes for Google Cloud Storage API.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":43,"codeStart":48,"code":"var SCOPES = ['https://www.googleapis.com/auth/devstorage.full_control'];","ctx":{"type":"declaration","name":"SCOPES","value":"['https://www.googleapis.com/auth/devstorage.full_control']","string":"SCOPES"}},{"tags":[{"type":"const","string":"{string}","html":"<p>{string}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":50,"codeStart":54,"code":"var STORAGE_BASE_URL = 'https://www.googleapis.com/storage/v1/b';","ctx":{"type":"declaration","name":"STORAGE_BASE_URL","value":"'https://www.googleapis.com/storage/v1/b'","string":"STORAGE_BASE_URL"}},{"tags":[{"type":"param","string":"{object} options - Configuration object.","name":"options","description":"<ul>\n<li>Configuration object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Developer Documentation</p><p>Invoke this method to create a new Storage object bound with pre-determined<br />configuration options. For each object that can be created (e.g., a bucket),<br />there is an equivalent static and instance method. While they are classes,<br />they can be instantiated without use of the <code>new</code> keyword.</p>","summary":"<p>Developer Documentation</p>","body":"<p>Invoke this method to create a new Storage object bound with pre-determined<br />configuration options. For each object that can be created (e.g., a bucket),<br />there is an equivalent static and instance method. While they are classes,<br />they can be instantiated without use of the <code>new</code> keyword.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":56,"codeStart":65},{"tags":[{"type":"alias","string":"module:storage","html":"<p>module:storage</p>"},{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} options - [Configuration object](#/docs/?method=gcloud).\n","name":"options","description":"<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'my-project'\n});\n\nvar gcs = gcloud.storage();","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;my-project&#39;<br />});</p><p>var gcs = gcloud.storage();</p>"}],"description":{"full":"<p>To access your Cloud Storage buckets, you will use the <code>bucket</code> function<br />returned from this <code>storage</code> object.</p><p>The examples below will demonstrate the different usage patterns your app may<br />need to connect to <code>gcloud</code> and access your bucket.</p>","summary":"<p>To access your Cloud Storage buckets, you will use the <code>bucket</code> function<br />returned from this <code>storage</code> object.</p>","body":"<p>The examples below will demonstrate the different usage patterns your app may<br />need to connect to <code>gcloud</code> and access your bucket.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":65,"codeStart":85,"code":"function Storage(options) {\n  if (!(this instanceof Storage)) {\n    return new Storage(options);\n  }\n\n  options = options || {};\n\n  if (!options.projectId) {\n    throw util.missingProjectIdError;\n  }\n\n  this.makeAuthorizedRequest_ = util.makeAuthorizedRequestFactory({\n    credentials: options.credentials,\n    keyFile: options.keyFilename,\n    scopes: SCOPES,\n    email: options.email\n  });\n\n  this.projectId = options.projectId;\n}","ctx":{"type":"constructor","name":"Storage","string":"Storage()"}},{"tags":[{"type":"resource","string":"[About Access Control Lists]{@link https://cloud.google.com/storage/docs/access-control#About-Access-Control-Lists} ","html":"<p>[About Access Control Lists]{@link <a href=\"https://cloud.google.com/storage/docs/access-control#About-Access-Control-Lists}\">https://cloud.google.com/storage/docs/access-control#About-Access-Control-Lists}</a> </p>"},{"type":"type","string":"{object}\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{object}</p>"},{"type":"example","string":"var gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123'\n});\n\nvar albums = gcs.bucket('albums');\n\n//-\n// Make all of the files currently in a bucket publicly readable.\n//-\nalbums.acl.add({\n  entity: 'allUsers',\n  role: gcs.acl.READER_ROLE\n}, function(err, aclObject) {});\n\n//-\n// Make any new objects added to a bucket publicly readable.\n//-\nalbums.acl.default.add({\n  entity: 'allUsers',\n  role: gcs.acl.READER_ROLE\n}, function(err, aclObject) {});\n\n//-\n// Grant a user ownership permissions to a bucket.\n//-\n\nalbums.acl.add({\n  entity: 'user-useremail@example.com',\n  role: gcs.acl.OWNER_ROLE\n}, function(err, aclObject) {});","html":"<p>var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var albums = gcs.bucket(&#39;albums&#39;);</p><p>//-<br />// Make all of the files currently in a bucket publicly readable.<br />//-<br />albums.acl.add({<br />  entity: &#39;allUsers&#39;,<br />  role: gcs.acl.READER_ROLE<br />}, function(err, aclObject) {});</p><p>//-<br />// Make any new objects added to a bucket publicly readable.<br />//-<br />albums.acl.default.add({<br />  entity: &#39;allUsers&#39;,<br />  role: gcs.acl.READER_ROLE<br />}, function(err, aclObject) {});</p><p>//-<br />// Grant a user ownership permissions to a bucket.<br />//-</p><p>albums.acl.add({<br />  entity: &#39;user-useremail@example.com&#39;,<br />  role: gcs.acl.OWNER_ROLE<br />}, function(err, aclObject) {});</p>"}],"description":{"full":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p><p>This object provides constants to refer to the three permission levels that<br />can be granted to an entity:</p><ul>\n<li><code>gcs.acl.OWNER_ROLE</code> - (&quot;OWNER&quot;)</li>\n<li><code>gcs.acl.READER_ROLE</code> - (&quot;READER&quot;)</li>\n<li><code>gcs.acl.WRITER_ROLE</code> - (&quot;WRITER&quot;)</li>\n</ul>\n","summary":"<p>Google Cloud Storage uses access control lists (ACLs) to manage object and<br />bucket access. ACLs are the mechanism you use to share objects with other<br />users and allow other users to access your buckets and objects.</p>","body":"<p>This object provides constants to refer to the three permission levels that<br />can be granted to an entity:</p><ul>\n<li><code>gcs.acl.OWNER_ROLE</code> - (&quot;OWNER&quot;)</li>\n<li><code>gcs.acl.READER_ROLE</code> - (&quot;READER&quot;)</li>\n<li><code>gcs.acl.WRITER_ROLE</code> - (&quot;WRITER&quot;)</li>\n</ul>\n"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":106,"codeStart":154,"code":"Storage.acl = {\n  OWNER_ROLE: 'OWNER',\n  READER_ROLE: 'READER',\n  WRITER_ROLE: 'WRITER'\n};\n\nStorage.prototype.acl = Storage.acl;","ctx":{"type":"property","receiver":"Storage","name":"acl","value":"{","string":"Storage.acl"}},{"tags":[{"type":"param","string":"{object|string} name - Name of the existing bucket.","name":"name","description":"<ul>\n<li>Name of the existing bucket.</li>\n</ul>\n","types":["object","string"],"typesDescription":"<code>object</code>|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:storage/bucket}\n","types":["module:storage/bucket"],"typesDescription":"module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:storage/bucket}</p>"},{"type":"example","string":"var gcloud = require('gcloud')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\nvar gcs = gcloud.storage();\n\nvar albums = gcs.bucket('albums');\nvar photos = gcs.bucket('photos');","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p><p>var gcs = gcloud.storage();</p><p>var albums = gcs.bucket(&#39;albums&#39;);<br />var photos = gcs.bucket(&#39;photos&#39;);</p>"}],"description":{"full":"<p>Get a reference to a Google Cloud Storage bucket.</p>","summary":"<p>Get a reference to a Google Cloud Storage bucket.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":162,"codeStart":179,"code":"Storage.prototype.bucket = function(name) {\n  return new Bucket(this, name);\n};","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"bucket","string":"Storage.prototype.bucket()"}},{"tags":[{"type":"resource","string":"[Buckets: insert API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/insert}","html":"<p>[Buckets: insert API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/insert}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/insert}</a></p>"},{"type":"resource","string":"[Durable Reduced Availability]{@link https://cloud.google.com/storage/docs/durable-reduced-availability}","html":"<p>[Durable Reduced Availability]{@link <a href=\"https://cloud.google.com/storage/docs/durable-reduced-availability}\">https://cloud.google.com/storage/docs/durable-reduced-availability}</a></p>"},{"type":"resource","string":"[Nearline]{@link https://cloud.google.com/storage/docs/nearline}","html":"<p>[Nearline]{@link <a href=\"https://cloud.google.com/storage/docs/nearline}\">https://cloud.google.com/storage/docs/nearline}</a></p>"},{"type":"resource","string":"[Storage Classes]{@link https://cloud.google.com/storage/docs/storage-classes} ","html":"<p>[Storage Classes]{@link <a href=\"https://cloud.google.com/storage/docs/storage-classes}\">https://cloud.google.com/storage/docs/storage-classes}</a> </p>"},{"type":"throws","string":"{Error} If a name is not provided.\n","types":["Error"],"description":"<p>If a name is not provided. </p>"},{"type":"param","string":"{string} name - Name of the bucket to create.","name":"name","description":"<ul>\n<li>Name of the bucket to create.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} metadata - Metadata to set for the bucket.","name":"metadata","description":"<ul>\n<li>Metadata to set for the bucket.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} metadata.dra - Specify the storage class as\n    [Durable Reduced Availability](https://goo.gl/26lthK).","name":"metadata.dra","description":"<ul>\n<li>Specify the storage class as     <a href=\"https://goo.gl/26lthK\">Durable Reduced Availability</a>.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean=} metadata.nearline - Specify the storage class as\n    [Nearline](https://goo.gl/sN5wNh).","name":"metadata.nearline","description":"<ul>\n<li>Specify the storage class as     <a href=\"https://goo.gl/sN5wNh\">Nearline</a>.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/bucket} callback.bucket - The newly created Bucket.","name":"callback.bucket","description":"<ul>\n<li>The newly created Bucket.</li>\n</ul>\n","types":["module:storage/bucket"],"typesDescription":"module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var callback = function(err, bucket, apiResponse) {\n  // `bucket` is a Bucket object.\n};\n\ngcs.createBucket('new-bucket', callback);\n\n//-\n// Create a bucket in a specific location and region. <em>See the <a\n// href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/insert\">\n// Official JSON API docs</a> for complete details on the `location` option.\n// </em>\n//-\nvar metadata = {\n  location: 'US-CENTRAL1',\n  dra: true\n};\n\ngcs.createBucket('new-bucket', metadata, callback);\n\n//-\n// Enable versioning on a new bucket.\n//-\nvar metadata = {\n  versioning: {\n    enabled: true\n  }\n};\n\ngcs.createBucket('new-bucket', metadata, callback);","html":"<p>var callback = function(err, bucket, apiResponse) {<br />  // <code>bucket</code> is a Bucket object.<br />};</p><p>gcs.createBucket(&#39;new-bucket&#39;, callback);</p><p>//-<br />// Create a bucket in a specific location and region. <em>See the <a\n// href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/insert\"><br />// Official JSON API docs</a> for complete details on the <code>location</code> option.<br />// </em><br />//-<br />var metadata = {<br />  location: &#39;US-CENTRAL1&#39;,<br />  dra: true<br />};</p><p>gcs.createBucket(&#39;new-bucket&#39;, metadata, callback);</p><p>//-<br />// Enable versioning on a new bucket.<br />//-<br />var metadata = {<br />  versioning: {<br />    enabled: true<br />  }<br />};</p><p>gcs.createBucket(&#39;new-bucket&#39;, metadata, callback);</p>"}],"description":{"full":"<p>Create a bucket.</p>","summary":"<p>Create a bucket.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":183,"codeStart":235,"code":"Storage.prototype.createBucket = function(name, metadata, callback) {\n  var self = this;\n  if (!name) {\n    throw new Error('A name is required to create a bucket.');\n  }\n  if (!callback) {\n    callback = metadata;\n    metadata = {};\n  }\n  var query = {\n    project: this.projectId\n  };\n  var body = extend(metadata, {\n    name: name\n  });\n  var storageClasses = {\n    dra: 'DURABLE_REDUCED_AVAILABILITY',\n    nearline: 'NEARLINE'\n  };\n\n  Object.keys(storageClasses).forEach(function(storageClass) {\n    if (body[storageClass]) {\n      body.storageClass = storageClasses[storageClass];\n      delete body[storageClass];\n    }\n  });\n\n  this.makeReq_('POST', '', query, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n    var bucket = self.bucket(name);\n    bucket.metadata = resp;\n    callback(null, bucket, resp);\n  });\n};","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"createBucket","string":"Storage.prototype.createBucket()"}},{"tags":[{"type":"resource","string":"[Buckets: list API Documentation]{@link https://cloud.google.com/storage/docs/json_api/v1/buckets/list} ","html":"<p>[Buckets: list API Documentation]{@link <a href=\"https://cloud.google.com/storage/docs/json_api/v1/buckets/list}\">https://cloud.google.com/storage/docs/json_api/v1/buckets/list}</a> </p>"},{"type":"param","string":"{object=} query - Query object.","name":"query","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number} query.maxResults - Maximum number of items plus prefixes to\n    return.","name":"query.maxResults","description":"<ul>\n<li>Maximum number of items plus prefixes to     return.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"query.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:storage/bucket[]} callback.buckets - List of all Buckets.","name":"callback.buckets","description":"<ul>\n<li>List of all Buckets.</li>\n</ul>\n","types":["Array.<module:storage/bucket>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Astorage%2Fbucket.html\">storage/bucket</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"gcs.getBuckets(function(err, buckets) {\n  if (!err) {\n    // buckets is an array of Bucket objects.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nvar callback = function(err, buckets, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    gcs.getBuckets(nextQuery, callback);\n  }\n\n  // The `metadata` property is populated for you with the metadata at the\n  // time of fetching.\n  buckets[0].metadata;\n\n  // However, in cases where you are concerned the metadata could have\n  // changed, use the `getMetadata` method.\n  buckets[0].getMetadata(function(err, metadata, apiResponse) {});\n};\n\ngcs.getBuckets({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the buckets from your project as a readable object stream.\n//-\ngcs.getBuckets()\n  .on('error', console.error)\n  .on('data', function(bucket) {\n    // bucket is a Bucket object.\n  })\n  .on('end', function() {\n    // All buckets retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\ngcs.getBuckets()\n  .on('data', function(bucket) {\n    this.end();\n  });","html":"<p>gcs.getBuckets(function(err, buckets) {<br />  if (!err) {<br />    // buckets is an array of Bucket objects.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />var callback = function(err, buckets, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    gcs.getBuckets(nextQuery, callback);<br />  }</p><p>  // The <code>metadata</code> property is populated for you with the metadata at the<br />  // time of fetching.<br />  buckets[0].metadata;</p><p>  // However, in cases where you are concerned the metadata could have<br />  // changed, use the <code>getMetadata</code> method.<br />  buckets[0].getMetadata(function(err, metadata, apiResponse) {});<br />};</p><p>gcs.getBuckets({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the buckets from your project as a readable object stream.<br />//-<br />gcs.getBuckets()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(bucket) {<br />    // bucket is a Bucket object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All buckets retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />gcs.getBuckets()<br />  .on(&#39;data&#39;, function(bucket) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get Bucket objects for all of the buckets in your project.</p>","summary":"<p>Get Bucket objects for all of the buckets in your project.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":273,"codeStart":343,"code":"Storage.prototype.getBuckets = function(query, callback) {\n  var that = this;\n  if (!callback) {\n    callback = query;\n    query = {};\n  }\n  query.project = query.project || this.projectId;\n  this.makeReq_('GET', '', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n    var buckets = (resp.items || []).map(function(item) {\n      var bucket = that.bucket(item.id);\n      bucket.metadata = item;\n      return bucket;\n    });\n    var nextQuery = null;\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, { pageToken: resp.nextPageToken });\n    }\n    callback(null, buckets, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"getBuckets","string":"Storage.prototype.getBuckets()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":368,"codeStart":380,"code":"Storage.prototype.makeReq_ = function(method, path, query, body, callback) {\n  var reqOpts = {\n    method: method,\n    qs: query,\n    uri: STORAGE_BASE_URL + path\n  };\n\n  if (body) {\n    reqOpts.json = body;\n  }\n\n  this.makeAuthorizedRequest_(reqOpts, callback);\n};","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"makeReq_","string":"Storage.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>This method can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>","summary":"<p>Developer Documentation</p>","body":"<p>This method can be used with either a callback or as a readable object<br />stream. <code>streamRouter</code> is used to add this dual behavior.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":394,"codeStart":399,"code":"streamRouter.extend(Storage, 'getBuckets');\n\nmodule.exports = Storage;","ctx":false}],"gcloud":[{"tags":[],"description":{"full":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2014 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"gcloud","html":"<p>gcloud</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');","ctx":false},{"tags":[{"type":"type","string":"{module:common/util}","types":["module:common/util"],"typesDescription":"module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/util}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":25,"codeStart":29,"code":"var util = require('./common/util.js');","ctx":{"type":"declaration","name":"util","value":"require('./common/util.js')","string":"util"}},{"tags":[{"type":"type","string":"{object}","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{object}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>The APIs exposed to the user.</p>","summary":"<p>The APIs exposed to the user.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":31,"codeStart":37,"code":"var apis = {","ctx":{"type":"declaration","name":"apis","value":"{","string":"apis"}},{"tags":[{"type":"type","string":"{module:bigquery}\n","types":["module:bigquery"],"typesDescription":"module:<a href=\"module%3Abigquery.html\">bigquery</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:bigquery}</p>"},{"type":"return","string":"{module:bigquery}\n","types":["module:bigquery"],"typesDescription":"module:<a href=\"module%3Abigquery.html\">bigquery</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:bigquery}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar bigquery = gcloud.bigquery({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var bigquery = gcloud.bigquery({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p>Analyze Big Data in the cloud with<br /><a href=\"https://cloud.google.com/bigquery\">Google BigQuery</a>. Run fast, SQL-like<br />queries against multi-terabyte datasets in seconds. Scalable and easy to<br />use, BigQuery gives you real-time insights about your data.</p>","summary":"<p>Analyze Big Data in the cloud with<br /><a href=\"https://cloud.google.com/bigquery\">Google BigQuery</a>. Run fast, SQL-like<br />queries against multi-terabyte datasets in seconds. Scalable and easy to<br />use, BigQuery gives you real-time insights about your data.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":55,"code":"bigquery: require('./bigquery'),","ctx":{"type":"property","name":"bigquery","value":"require('./bigquery'),","string":"bigquery"}},{"tags":[{"type":"type","string":"{module:compute}\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:compute}</p>"},{"type":"return","string":"{module:compute}\n","types":["module:compute"],"typesDescription":"module:<a href=\"module%3Acompute.html\">compute</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:compute}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar gce = gcloud.compute({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var gce = gcloud.compute({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p>With <a href=\"https://cloud.google.com/compute/\">Compute Engine</a>, you can run<br />large-scale workloads on virtual machines hosted on Google&#39;s<br />infrastructure. Choose a VM that fits your needs and gain the performance<br />of Google’s worldwide fiber network.</p>","summary":"<p>With <a href=\"https://cloud.google.com/compute/\">Compute Engine</a>, you can run<br />large-scale workloads on virtual machines hosted on Google&#39;s<br />infrastructure. Choose a VM that fits your needs and gain the performance<br />of Google’s worldwide fiber network.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":57,"codeStart":74,"code":"compute: require('./compute'),","ctx":{"type":"property","name":"compute","value":"require('./compute'),","string":"compute"}},{"tags":[{"type":"type","string":"{module:datastore}\n","types":["module:datastore"],"typesDescription":"module:<a href=\"module%3Adatastore.html\">datastore</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:datastore}</p>"},{"type":"return","string":"{module:datastore}\n","types":["module:datastore"],"typesDescription":"module:<a href=\"module%3Adatastore.html\">datastore</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:datastore}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar datastore = gcloud.datastore;\nvar dataset = datastore.dataset({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var datastore = gcloud.datastore;<br />var dataset = datastore.dataset({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p><a href=\"https://developers.google.com/datastore/\">Google Cloud Datastore</a> is a<br />fully managed, schemaless database for storing non-relational data. Use<br />this object to create a Dataset to interact with your data, an &quot;Int&quot;, and a<br />&quot;Double&quot; representation.</p>","summary":"<p><a href=\"https://developers.google.com/datastore/\">Google Cloud Datastore</a> is a<br />fully managed, schemaless database for storing non-relational data. Use<br />this object to create a Dataset to interact with your data, an &quot;Int&quot;, and a<br />&quot;Double&quot; representation.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":76,"codeStart":94,"code":"datastore: require('./datastore'),","ctx":{"type":"property","name":"datastore","value":"require('./datastore'),","string":"datastore"}},{"tags":[{"type":"type","string":"{module:dns}\n","types":["module:dns"],"typesDescription":"module:<a href=\"module%3Adns.html\">dns</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:dns}</p>"},{"type":"return","string":"{module:dns}\n","types":["module:dns"],"typesDescription":"module:<a href=\"module%3Adns.html\">dns</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:dns}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar dns = gcloud.dns({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var dns = gcloud.dns({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p><a href=\"https://cloud.google.com/dns/what-is-cloud-dns\">Google Cloud DNS</a> is a<br />high-performance, resilient, global DNS service that provides a cost-<br />effective way to make your applications and services available to your<br />users. This programmable, authoritative DNS service can be used to easily<br />publish and manage DNS records using the same infrastructure relied upon by<br />Google.</p>","summary":"<p><a href=\"https://cloud.google.com/dns/what-is-cloud-dns\">Google Cloud DNS</a> is a<br />high-performance, resilient, global DNS service that provides a cost-<br />effective way to make your applications and services available to your<br />users. This programmable, authoritative DNS service can be used to easily<br />publish and manage DNS records using the same infrastructure relied upon by<br />Google.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":96,"codeStart":115,"code":"dns: require('./dns'),","ctx":{"type":"property","name":"dns","value":"require('./dns'),","string":"dns"}},{"tags":[{"type":"type","string":"{module:pubsub}\n","types":["module:pubsub"],"typesDescription":"module:<a href=\"module%3Apubsub.html\">pubsub</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:pubsub}</p>"},{"type":"return","string":"{module:pubsub}\n","types":["module:pubsub"],"typesDescription":"module:<a href=\"module%3Apubsub.html\">pubsub</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:pubsub}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var pubsub = gcloud.pubsub({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p><a href=\"https://developers.google.com/pubsub/overview\">Google Cloud Pub/Sub</a> is a<br />reliable, many-to-many, asynchronous messaging service from Google Cloud<br />Platform.</p>","summary":"<p><a href=\"https://developers.google.com/pubsub/overview\">Google Cloud Pub/Sub</a> is a<br />reliable, many-to-many, asynchronous messaging service from Google Cloud<br />Platform.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":117,"codeStart":133,"code":"pubsub: require('./pubsub'),","ctx":{"type":"property","name":"pubsub","value":"require('./pubsub'),","string":"pubsub"}},{"tags":[{"type":"type","string":"{module:search}\n","types":["module:search"],"typesDescription":"module:<a href=\"module%3Asearch.html\">search</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:search}</p>"},{"type":"return","string":"{module:search}\n","types":["module:search"],"typesDescription":"module:<a href=\"module%3Asearch.html\">search</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:search}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar search = gcloud.search({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var search = gcloud.search({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p><a href=\"https://cloud.google.com/search/\">Google Cloud Search</a> allows you to<br />quickly perform full-text and geospatial searches against your data without<br />having to spin up your own instances and without the hassle of managing and<br />maintaining a search service.</p><p class=\"notice\"><br />  <strong>This is an <em>Alpha</em> release of Google Cloud Search.</strong> This feature is<br />  not covered by any SLA or deprecation policy and may be subject to<br />  backward-incompatible changes.<br /></p>\n","summary":"<p><a href=\"https://cloud.google.com/search/\">Google Cloud Search</a> allows you to<br />quickly perform full-text and geospatial searches against your data without<br />having to spin up your own instances and without the hassle of managing and<br />maintaining a search service.</p>","body":"<p class=\"notice\"><br />  <strong>This is an <em>Alpha</em> release of Google Cloud Search.</strong> This feature is<br />  not covered by any SLA or deprecation policy and may be subject to<br />  backward-incompatible changes.<br /></p>\n"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":135,"codeStart":158,"code":"search: require('./search'),","ctx":{"type":"property","name":"search","value":"require('./search'),","string":"search"}},{"tags":[{"type":"type","string":"{module:storage}\n","types":["module:storage"],"typesDescription":"module:<a href=\"module%3Astorage.html\">storage</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:storage}</p>"},{"type":"return","string":"{module:storage}\n","types":["module:storage"],"typesDescription":"module:<a href=\"module%3Astorage.html\">storage</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:storage}</p>"},{"type":"example","string":"var gcloud = require('gcloud');\nvar gcs = gcloud.storage({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});","html":"<p>var gcloud = require(&#39;gcloud&#39;);<br />var gcs = gcloud.storage({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p>"}],"description":{"full":"<p>Google Cloud Storage allows you to store data on Google infrastructure.<br />Read <a href=\"https://developers.google.com/storage\">Google Cloud Storage API docs</a><br />for more information.</p>","summary":"<p>Google Cloud Storage allows you to store data on Google infrastructure.<br />Read <a href=\"https://developers.google.com/storage\">Google Cloud Storage API docs</a><br />for more information.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":160,"codeStart":176,"code":"storage: require('./storage')\n};","ctx":{"type":"property","name":"storage","value":"require('./storage')","string":"storage"}},{"tags":[{"type":"type","string":"{object}","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{object}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"<p>Scoped APIs are &quot;boxed in&quot; APIs. The &quot;outer&quot; class (e.g. Datastore) is a<br />container for sub-classes that can be given separate authentication and<br />instantiation options.</p>","summary":"<p>Scoped APIs are &quot;boxed in&quot; APIs. The &quot;outer&quot; class (e.g. Datastore) is a<br />container for sub-classes that can be given separate authentication and<br />instantiation options.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":179,"codeStart":187,"code":"var scopedApis = {\n  datastore: true\n};","ctx":{"type":"declaration","name":"scopedApis","value":"{","string":"scopedApis"}},{"tags":[{"type":"alias","string":"module:gcloud","html":"<p>module:gcloud</p>"},{"type":"constructor","string":"","html":""},{"type":"param","string":"{object} config - Connection configuration options.","name":"config","description":"<ul>\n<li>Connection configuration options.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} config.projectId - The project ID from the Google Developer's\n    Console. E.g. 'purple-grape-123'.","name":"config.projectId","description":"<ul>\n<li>The project ID from the Google Developer&#39;s     Console. E.g. &#39;purple-grape-123&#39;.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} config.keyFilename - Full path to the a .json, .pem, or .p12\n    key downloaded from the Google Developers Console. NOTE: .pem and .p12\n    require you to specify `config.email` as well.","name":"config.keyFilename","description":"<ul>\n<li>Full path to the a .json, .pem, or .p12     key downloaded from the Google Developers Console. NOTE: .pem and .p12<br />  require you to specify <code>config.email</code> as well.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string=} config.email - Account email address. Required when using a\n    .pem or .p12 keyFilename.","name":"config.email","description":"<ul>\n<li>Account email address. Required when using a     .pem or .p12 keyFilename.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object=} config.credentials - Credentials object.","name":"config.credentials","description":"<ul>\n<li>Credentials object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} config.credentials.client_email","name":"config.credentials.client_email","description":"","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{string} config.credentials.client_email</p>"},{"type":"param","string":"{string} config.credentials.private_key","name":"config.credentials.private_key","description":"","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{string} config.credentials.private_key</p>"},{"type":"param","string":"{boolean=} config.autoRetry - Automatically retry requests if the\n    response is related to rate limits or certain intermittent server errors.\n    We will exponentially backoff subsequent requests by default. (default:\n    true)","name":"config.autoRetry","description":"<ul>\n<li>Automatically retry requests if the     response is related to rate limits or certain intermittent server errors.<br />  We will exponentially backoff subsequent requests by default. (default:<br />  true)</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} config.maxRetries - Maximum number of automatic retries\n    attempted before returning the error. (default: 3)\n","name":"config.maxRetries","description":"<ul>\n<li>Maximum number of automatic retries     attempted before returning the error. (default: 3)</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\n//-\n// From the same authentication credentials, you may now access your Google\n// Cloud Storage buckets, for example.\n//-\nvar gcs = gcloud.storage();\nvar bucket = gcs.bucket('photos');\n\n//-\n// However, if you need to override the global credentials, you may provide\n// new ones.\n//-\nvar otherGcs = gcloud.storage({\n  keyFilename: '/path/to/other/keyfile.json'\n});\nvar otherBucket = otherGcs.bucket('other-photos');\n\n//-\n// `gcs` and `otherGcs` will use their respective credentials for all future\n// API requests.\n//-","html":"<p>var gcloud = require(&#39;gcloud&#39;)({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p><p>//-<br />// From the same authentication credentials, you may now access your Google<br />// Cloud Storage buckets, for example.<br />//-<br />var gcs = gcloud.storage();<br />var bucket = gcs.bucket(&#39;photos&#39;);</p><p>//-<br />// However, if you need to override the global credentials, you may provide<br />// new ones.<br />//-<br />var otherGcs = gcloud.storage({<br />  keyFilename: &#39;/path/to/other/keyfile.json&#39;<br />});<br />var otherBucket = otherGcs.bucket(&#39;other-photos&#39;);</p><p>//-<br />// <code>gcs</code> and <code>otherGcs</code> will use their respective credentials for all future<br />// API requests.<br />//-</p>"}],"description":{"full":"<p>There are two key ways to use the <code>gcloud</code> module.</p><ol>\n<li><p>Provide connection &amp; configuration details up-front.</p></li>\n<li><p>Provide them at the time of instantiation of sub-modules, e.g. a Datastore<br />dataset, a Cloud Storage bucket, etc.</p></li>\n</ol>\n<p>See our <a href=\"#/authorization\">Authorization Guide</a> for how to obtain the<br />necessary credentials for connecting to your project.</p>","summary":"<p>There are two key ways to use the <code>gcloud</code> module.</p>","body":"<ol>\n<li><p>Provide connection &amp; configuration details up-front.</p></li>\n<li><p>Provide them at the time of instantiation of sub-modules, e.g. a Datastore<br />dataset, a Cloud Storage bucket, etc.</p></li>\n</ol>\n<p>See our <a href=\"#/authorization\">Authorization Guide</a> for how to obtain the<br />necessary credentials for connecting to your project.</p>"},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":191,"codeStart":250,"code":"function gcloud(config) {\n  return Object.keys(apis).reduce(function(gcloudExposedApi, apiName) {\n    var Class = apis[apiName];\n\n    if (scopedApis[apiName]) {\n      gcloudExposedApi[apiName] = new Class(config);\n    } else {\n      gcloudExposedApi[apiName] = function(options) {\n        return new Class(util.extendGlobalConfig(config, options));\n      };\n    }\n\n    // Extend each API to pick up static members, e.g. Datastore.int and\n    // Storage.acl.\n    extend(gcloudExposedApi[apiName], Class);\n\n    return gcloudExposedApi;\n  }, {});\n}\n\nmodule.exports = extend(gcloud, apis);","ctx":{"type":"function","name":"gcloud","string":"gcloud()"}}],"search/index":[{"tags":[],"description":{"full":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>","summary":"<p>Copyright 2015 Google Inc. All Rights Reserved.</p>","body":"<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":1,"codeStart":16},{"tags":[{"type":"module","string":"search/index","html":"<p>search/index</p>"}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":17,"codeStart":21,"code":"'use strict';\n\nvar extend = require('extend');\nvar is = require('is');","ctx":false},{"tags":[{"type":"type","string":"{module:search/document}","types":["module:search/document"],"typesDescription":"module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:search/document}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":26,"codeStart":30,"code":"var Document = require('./document.js');","ctx":{"type":"declaration","name":"Document","value":"require('./document.js')","string":"Document"}},{"tags":[{"type":"type","string":"{module:common/streamrouter}","types":["module:common/streamrouter"],"typesDescription":"module:<a href=\"module%3Acommon%2Fstreamrouter.html\">common/streamrouter</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{module:common/streamrouter}</p>"},{"type":"private","string":"","visibility":"private","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"var streamRouter = require('../common/stream-router.js');","ctx":{"type":"declaration","name":"streamRouter","value":"require('../common/stream-router.js')","string":"streamRouter"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"alias","string":"module:search/index ","html":"<p>module:search/index </p>"},{"type":"param","string":"{string} id - ID of the index.\n","name":"id","description":"<ul>\n<li>ID of the index. </li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var gcloud = require('gcloud');\n\nvar search = gcloud.search({\n  projectId: 'grape-spaceship-123'\n});\n\nvar index = search.index('records');","html":"<p>var gcloud = require(&#39;gcloud&#39;);</p><p>var search = gcloud.search({<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var index = search.index(&#39;records&#39;);</p>"}],"description":{"full":"<p>Create an Index object to interact with a Google Cloud Search index.</p>","summary":"<p>Create an Index object to interact with a Google Cloud Search index.</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":55,"code":"function Index(search, id) {\n  this.search_ = search;\n  this.id = id;\n\n  if (!this.id) {\n    throw new Error('An ID is needed to access a Google Cloud Search index.');\n  }\n}","ctx":{"type":"constructor","name":"Index","string":"Index()"}},{"tags":[{"type":"resource","string":"[Documents: create API Documentation]{@link https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/create} ","html":"<p>[Documents: create API Documentation]{@link <a href=\"https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/create}\">https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/create}</a> </p>"},{"type":"param","string":"{object|module:search/document} documentObj - A properly-formed\n    Document object as outlined in the\n    [official docs](https://goo.gl/AYhSgI).","name":"documentObj","description":"<ul>\n<li>A properly-formed     Document object as outlined in the<br />  <a href=\"https://goo.gl/AYhSgI\">official docs</a>.</li>\n</ul>\n","types":["object","module:search/document"],"typesDescription":"<code>object</code>|module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:search/document} callback.document - The Document object.","name":"callback.document","description":"<ul>\n<li>The Document object.</li>\n</ul>\n","types":["module:search/document"],"typesDescription":"module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"//-\n// A document can be built using the {module:search/document} object.\n//-\nvar newDocument = index.document('new-document-id');\nnewDocument.addField('person').addTextValue('Stephen');\n\nindex.createDocument(newDocument, function(err, document, apiResponse) {});\n\n//-\n// A document can also be created from a properly-formed object as outlined\n// in the <a href=\"https://goo.gl/AYhSgI\">official docs</a>.\n//\n// This will create the same resulting document object as the example above.\n//-\nvar newDocument = {\n  docId: 'new-document-id',\n  fields: {\n    person: {\n      values: [\n        {\n          stringFormat: 'TEXT',\n          stringValue: 'Stephen'\n        }\n      ]\n    }\n  }\n};\n\nindex.createDocument(newDocument, function(err, document, apiResponse) {});\n\n//-\n// Specifying an ID for your new document isn't required. In both of the\n// scenarios above, simply don't specify 'new-document-id' and one will be\n// generated for you.\n//-","html":"<p>//-<br />// A document can be built using the {module:search/document} object.<br />//-<br />var newDocument = index.document(&#39;new-document-id&#39;);<br />newDocument.addField(&#39;person&#39;).addTextValue(&#39;Stephen&#39;);</p><p>index.createDocument(newDocument, function(err, document, apiResponse) {});</p><p>//-<br />// A document can also be created from a properly-formed object as outlined<br />// in the <a href=\"https://goo.gl/AYhSgI\">official docs</a>.<br />//<br />// This will create the same resulting document object as the example above.<br />//-<br />var newDocument = {<br />  docId: &#39;new-document-id&#39;,<br />  fields: {<br />    person: {<br />      values: [<br />        {<br />          stringFormat: &#39;TEXT&#39;,<br />          stringValue: &#39;Stephen&#39;<br />        }<br />      ]<br />    }<br />  }<br />};</p><p>index.createDocument(newDocument, function(err, document, apiResponse) {});</p><p>//-<br />// Specifying an ID for your new document isn&#39;t required. In both of the<br />// scenarios above, simply don&#39;t specify &#39;new-document-id&#39; and one will be<br />// generated for you.<br />//-</p>"}],"description":{"full":"<p>Create a document in the index.</p>","summary":"<p>Create a document in the index.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":64,"codeStart":114,"code":"Index.prototype.createDocument = function(documentObj, callback) {\n  var document;\n\n  if (documentObj instanceof Document) {\n    document = documentObj;\n    documentObj = document.toJSON();\n  } else {\n    document = this.documentFromObject_(documentObj);\n  }\n\n  this.makeReq_('POST', '/documents', null, documentObj, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, document, resp);\n  });\n};","ctx":{"type":"method","constructor":"Index","cons":"Index","name":"createDocument","string":"Index.prototype.createDocument()"}},{"tags":[{"type":"param","string":"{string} id - The id of the document.","name":"id","description":"<ul>\n<li>The id of the document.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:search/document}\n","types":["module:search/document"],"typesDescription":"module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:search/document}</p>"},{"type":"example","string":"var myDocument = index.document('my-document');","html":"<p>var myDocument = index.document(&#39;my-document&#39;);</p>"}],"description":{"full":"<p>Access a {module:search/document} object.</p>","summary":"<p>Access a {module:search/document} object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":134,"codeStart":143,"code":"Index.prototype.document = function(id) {\n  return new Document(this, id);\n};","ctx":{"type":"method","constructor":"Index","cons":"Index","name":"document","string":"Index.prototype.document()"}},{"tags":[{"type":"resource","string":"[Documents: list API Documentation]{@link https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/list} ","html":"<p>[Documents: list API Documentation]{@link <a href=\"https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/list}\">https://cloud.google.com/search/reference/rest/v1/projects/indexes/documents/list}</a> </p>"},{"type":"param","string":"{object=} query - Query object.","name":"query","description":"<ul>\n<li>Query object.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.","name":"options.autoPaginate","description":"<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageSize - The maximum number of documents to return\n    per page. If not specified, 100 documents are returned per page.","name":"query.pageSize","description":"<ul>\n<li>The maximum number of documents to return     per page. If not specified, 100 documents are returned per page.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"query.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.view - One of `INDEX_VIEW_UNSPECIFIED`, `ID_ONLY`, or\n    `FULL`. See [this table](https://goo.gl/sY6Lpt) for more details.","name":"query.view","description":"<ul>\n<li>One of <code>INDEX_VIEW_UNSPECIFIED</code>, <code>ID_ONLY</code>, or     <code>FULL</code>. See <a href=\"https://goo.gl/sY6Lpt\">this table</a> for more details.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function=} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:search/document[]} callback.documents - A list of Documents.","name":"callback.documents","description":"<ul>\n<li>A list of Documents.</li>\n</ul>\n","types":["Array.<module:search/document>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"index.getDocuments(function(err, documents) {\n  if (!err) {\n    // documents is an array of Document objects.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction onApiResponse(err, documents, nextQuery, apiResponse) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // `documents` is an array of Document objects.\n\n  if (nextQuery) {\n    index.getDocuments(nextQuery, onApiResponse);\n  }\n}\n\nindex.getDocuments({\n  autoPaginate: false\n}, onApiResponse);\n\n//-\n// Get the documents as a readable object stream.\n//-\nindex.getDocuments()\n  .on('error', console.error)\n  .on('data', function(document) {\n    // document is a Document object.\n  })\n  .on('end', function() {\n    // All documents retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nindex.getDocuments()\n  .on('data', function(document) {\n    this.end();\n  });","html":"<p>index.getDocuments(function(err, documents) {<br />  if (!err) {<br />    // documents is an array of Document objects.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function onApiResponse(err, documents, nextQuery, apiResponse) {<br />  if (err) {<br />    console.error(err);<br />    return;<br />  }</p><p>  // <code>documents</code> is an array of Document objects.</p><p>  if (nextQuery) {<br />    index.getDocuments(nextQuery, onApiResponse);<br />  }<br />}</p><p>index.getDocuments({<br />  autoPaginate: false<br />}, onApiResponse);</p><p>//-<br />// Get the documents as a readable object stream.<br />//-<br />index.getDocuments()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(document) {<br />    // document is a Document object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All documents retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />index.getDocuments()<br />  .on(&#39;data&#39;, function(document) {<br />    this.end();<br />  });</p>"}],"description":{"full":"<p>Get {module:search/document} objects for all of the documents in this index.</p>","summary":"<p>Get {module:search/document} objects for all of the documents in this index.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":147,"codeStart":217,"code":"Index.prototype.getDocuments = function(query, callback) {\n  var self = this;\n\n  if (is.fn(query)) {\n    callback = query;\n    query = {};\n  }\n\n  this.makeReq_('GET', '/documents', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var documents = (resp.documents || [])\n      .map(self.documentFromObject_.bind(self));\n\n    callback(null, documents, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Index","cons":"Index","name":"getDocuments","string":"Index.prototype.getDocuments()"}},{"tags":[{"type":"resource","string":"[Indexes: search API Documentation]{@link https://cloud.google.com/search/reference/rest/v1/projects/indexes/search} ","html":"<p>[Indexes: search API Documentation]{@link <a href=\"https://cloud.google.com/search/reference/rest/v1/projects/indexes/search}\">https://cloud.google.com/search/reference/rest/v1/projects/indexes/search}</a> </p>"},{"type":"throws","string":"{error} If a query string or object isn't provided.\n","types":["error"],"description":"<p>If a query string or object isn&#39;t provided. </p>"},{"type":"param","string":"{string|object} query - A query object or simply a string query.","name":"query","description":"<ul>\n<li>A query object or simply a string query.</li>\n</ul>\n","types":["string","object"],"typesDescription":"<code>string</code>|<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} query.autoPaginate - Have pagination handled automatically.\n    Default: true.","name":"query.autoPaginate","description":"<ul>\n<li>Have pagination handled automatically.     Default: true.</li>\n</ul>\n","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageSize - The maximum number of documents to return\n    per page. If not specified, 100 documents are returned per page.","name":"query.pageSize","description":"<ul>\n<li>The maximum number of documents to return     per page. If not specified, 100 documents are returned per page.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.","name":"query.pageToken","description":"<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} query.query = A query string using the syntax described by\n    the [official docs](https://goo.gl/2SYl3S).","name":"query.query","description":"<p>= A query string using the syntax described by     the <a href=\"https://goo.gl/2SYl3S\">official docs</a>.</p>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?error} callback.err - An error returned while making this request","name":"callback.err","description":"<ul>\n<li>An error returned while making this request</li>\n</ul>\n","types":["error"],"typesDescription":"<code>error</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{module:search/document[]} callback.documents - A list of Documents","name":"callback.documents","description":"<ul>\n<li>A list of Documents</li>\n</ul>\n","types":["Array.<module:search/document>"],"typesDescription":"<code>Array</code>.&lt;module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{?object} callback.nextQuery - If present, query with this object to\n    check for more results.","name":"callback.nextQuery","description":"<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>|<code>null</code>","optional":false,"nullable":true,"nonNullable":false,"variable":false},{"type":"param","string":"{object} callback.apiResponse - The full API response.\n","name":"callback.apiResponse","description":"<ul>\n<li>The full API response. </li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"example","string":"var query = 'person:stephen';\n\nindex.search(query, function(err, documents) {\n  if (!err) {\n    // `documents` is an array of Document objects.\n  }\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction onApiResponse(err, documents, nextQuery, apiResponse) {\n  if (err) {\n    console.error(err);\n    return;\n  }\n\n  // `documents` is an array of Document objects.\n\n  if (nextQuery) {\n    index.search(nextQuery, onApiResponse);\n  }\n}\n\nindex.search({\n  autoPaginate: false,\n  query: query\n}, onApiResponse);\n\n//-\n// Get the documents that match your query as a readable object stream.\n//-\nindex.search(query)\n  .on('error', console.error)\n  .on('data', function(document) {\n    // document is a Document object.\n  })\n  .on('end', function() {\n    // All search results retrieved.\n  });","html":"<p>var query = &#39;person:stephen&#39;;</p><p>index.search(query, function(err, documents) {<br />  if (!err) {<br />    // <code>documents</code> is an array of Document objects.<br />  }<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function onApiResponse(err, documents, nextQuery, apiResponse) {<br />  if (err) {<br />    console.error(err);<br />    return;<br />  }</p><p>  // <code>documents</code> is an array of Document objects.</p><p>  if (nextQuery) {<br />    index.search(nextQuery, onApiResponse);<br />  }<br />}</p><p>index.search({<br />  autoPaginate: false,<br />  query: query<br />}, onApiResponse);</p><p>//-<br />// Get the documents that match your query as a readable object stream.<br />//-<br />index.search(query)<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(document) {<br />    // document is a Document object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All search results retrieved.<br />  });</p>"}],"description":{"full":"<p>Run a query against the documents in this index.</p>","summary":"<p>Run a query against the documents in this index.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":246,"codeStart":312,"code":"Index.prototype.search = function(query, callback) {\n  var self = this;\n\n  if (is.string(query)) {\n    query = {\n      query: query\n    };\n  }\n\n  if (!is.object(query)) {\n    throw new Error('A query must be either a string or object.');\n  }\n\n  this.makeReq_('GET', '/search', query, null, function(err, resp) {\n    if (err) {\n      callback(err, null, null, resp);\n      return;\n    }\n\n    var nextQuery = null;\n\n    if (resp.nextPageToken) {\n      nextQuery = extend({}, query, {\n        pageToken: resp.nextPageToken\n      });\n    }\n\n    var documents = (resp.results || [])\n      .map(self.documentFromObject_.bind(self));\n\n    callback(null, documents, nextQuery, resp);\n  });\n};","ctx":{"type":"method","constructor":"Index","cons":"Index","name":"search","string":"Index.prototype.search()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{object} documentObj - Object describing a document.","name":"documentObj","description":"<ul>\n<li>Object describing a document.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} documentObj.fields - Fields the document contains.","name":"documentObj.fields","description":"<ul>\n<li>Fields the document contains.</li>\n</ul>\n","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{number=} documentObj.rank - The rank of the document.","name":"documentObj.rank","description":"<ul>\n<li>The rank of the document.</li>\n</ul>\n","types":["number"],"typesDescription":"<code>number</code>|<code>undefined</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{module:search/document}\n","types":["module:search/document"],"typesDescription":"module:<a href=\"module%3Asearch%2Fdocument.html\">search/document</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{module:search/document}</p>"},{"type":"example","string":"var documentObject = {\n  docId: 'new-document-id',\n  fields: {\n    person: {\n      values: [\n        {\n          stringFormat: 'TEXT',\n          stringValue: 'Stephen'\n        }\n      ]\n    }\n  }\n};\n\nvar document = index.documentFromObject_(documentObject);\n// document is a {module:search/document} object.","html":"<p>var documentObject = {<br />  docId: &#39;new-document-id&#39;,<br />  fields: {<br />    person: {<br />      values: [<br />        {<br />          stringFormat: &#39;TEXT&#39;,<br />          stringValue: &#39;Stephen&#39;<br />        }<br />      ]<br />    }<br />  }<br />};</p><p>var document = index.documentFromObject_(documentObject);<br />// document is a {module:search/document} object.</p>"}],"description":{"full":"<p>Convert an object to a {module:search/document} object.</p>","summary":"<p>Convert an object to a {module:search/document} object.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":346,"codeStart":374,"code":"Index.prototype.documentFromObject_ = function(documentObj) {\n  var document = this.document(documentObj.docId);\n\n  if (is.object(documentObj.fields)) {\n    document.fields = documentObj.fields;\n  }\n\n  if (is.number(documentObj.rank)) {\n    document.rank = documentObj.rank;\n  }\n\n  return document;\n};","ctx":{"type":"method","constructor":"Index","cons":"Index","name":"documentFromObject_","string":"Index.prototype.documentFromObject_()"}},{"tags":[{"type":"private","string":"\n","visibility":"private","html":""},{"type":"param","string":"{string} method - Action.","name":"method","description":"<ul>\n<li>Action.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} path - Request path.","name":"path","description":"<ul>\n<li>Request path.</li>\n</ul>\n","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} query - Request query object.","name":"query","description":"<ul>\n<li>Request query object.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} body - Request body contents.","name":"body","description":"<ul>\n<li>Request body contents.</li>\n</ul>\n","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{function} callback - The callback function.","name":"callback","description":"<ul>\n<li>The callback function.</li>\n</ul>\n","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","summary":"<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":388,"codeStart":400,"code":"Index.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/indexes/' + this.id + path;\n\n  this.search_.makeReq_(method, path, query, body, callback);\n};","ctx":{"type":"method","constructor":"Index","cons":"Index","name":"makeReq_","string":"Index.prototype.makeReq_()"}},{"tags":[],"description":{"full":"<p>Developer Documentation</p><p>{module:search/index#getDocuments} and {module:search/index#search} can be<br />used with either a callback or as a readable object stream. <code>streamRouter</code> is<br />used to add this dual behavior to these methods.</p>","summary":"<p>Developer Documentation</p>","body":"<p>{module:search/index#getDocuments} and {module:search/index#search} can be<br />used with either a callback or as a readable object stream. <code>streamRouter</code> is<br />used to add this dual behavior to these methods.</p>"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":406,"codeStart":412,"code":"streamRouter.extend(Index, ['getDocuments', 'search']);\n\nmodule.exports = Index;","ctx":false}],"_DELIMITERS":{"path":"/","module":"#"}}